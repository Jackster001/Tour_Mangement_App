{"ast":null,"code":"import _objectSpread from \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst INITIAL_STATE = {\n  groups: [{}],\n  groupRecieving: false,\n  groupAdding: false,\n  selectedGroup: {},\n  selectGroupChanged: false,\n  groupChanging: false,\n  groupModalSelectProcess: false\n};\n\nfunction groupReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'GROUPS_GET':\n      {\n        return _objectSpread({}, state, {\n          groups: action.payload,\n          groupRecieving: true\n        });\n      }\n\n    case 'GROUP_GETTING':\n      {\n        return _objectSpread({}, state, {\n          groupRecieving: false\n        });\n      }\n\n    case 'GROUP_ADD':\n      {\n        return _objectSpread({}, state, {\n          groups: [action.payload, ...state.groups],\n          groupAdding: true\n        });\n      }\n\n    case 'GROUP_ADDED':\n      {\n        return _objectSpread({}, state, {\n          groupAdding: false\n        });\n      }\n\n    case 'GROUP_SELECT':\n      {\n        let newSelected = action.payload;\n        return _objectSpread({}, state, {\n          selectedGroup: newSelected,\n          selectGroupChanged: true\n        });\n      }\n\n    case 'GROUP_SELECT_CHANGED':\n      {\n        return _objectSpread({}, state, {\n          selectGroupChanged: false\n        });\n      }\n\n    case 'GROUP_SELECT_FOR_MODAL':\n      {\n        let newSelected = action.payload;\n        return _objectSpread({}, state, {\n          selectedGroup: newSelected,\n          groupModalSelecting: true\n        });\n      }\n\n    case 'GROUP_MODAL_SELECTING':\n      {\n        return _objectSpread({}, state, {\n          groupModalSelecting: false\n        });\n      }\n\n    case 'EDIT_GROUP':\n      {\n        const index = state.groups.findIndex(group => {\n          return group.id == state.selectedGroup.id;\n        });\n        const newGroupSet = state.groups;\n        newGroupSet[index] = action.payload;\n        console.log(newGroupSet);\n        return _objectSpread({}, state, {\n          groups: newGroupSet,\n          selectedGroup: {},\n          groupChanging: true\n        });\n      }\n\n    case 'GROUP_CHANGED':\n      {\n        return _objectSpread({}, state, {\n          groupChanging: false\n        });\n      }\n\n    case \"GROUP_DELETE\":\n      {\n        const newGroups = Object.assign([], _objectSpread({}, state.groups));\n        const index = state.groups.findIndex(group => {\n          return group.id == action.id;\n        });\n        newGroups.splice(index, 1);\n        return _objectSpread({}, state, {\n          groups: newGroups,\n          groupDeleting: true\n        });\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default groupReducer;","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/reducers/group.js"],"names":["INITIAL_STATE","groups","groupRecieving","groupAdding","selectedGroup","selectGroupChanged","groupChanging","groupModalSelectProcess","groupReducer","state","action","type","payload","newSelected","groupModalSelecting","index","findIndex","group","id","newGroupSet","console","log","newGroups","Object","assign","splice","groupDeleting"],"mappings":"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","sourcesContent":["const INITIAL_STATE = {\n    groups: [{}],\n    groupRecieving: false,\n    groupAdding: false,\n    selectedGroup: {},\n    selectGroupChanged: false,\n    groupChanging: false,\n    groupModalSelectProcess: false\n    \n};\nfunction groupReducer(state = INITIAL_STATE, action){\n    switch (action.type) {\n      case 'GROUPS_GET': {\n        return {...state, groups: action.payload, groupRecieving: true};\n      }\n      case 'GROUP_GETTING':{\n        return{...state, groupRecieving: false}\n      }\n      case 'GROUP_ADD': {\n        return {...state, groups: [action.payload,...state.groups], groupAdding: true};\n      }\n      case 'GROUP_ADDED': {\n        return {...state, groupAdding: false}\n      }\n      case 'GROUP_SELECT': {\n        let newSelected=action.payload;\n        return {...state, selectedGroup: newSelected, selectGroupChanged: true};\n      }\n      case 'GROUP_SELECT_CHANGED':{\n        return {...state, selectGroupChanged: false}\n      }\n      case 'GROUP_SELECT_FOR_MODAL':{\n        let newSelected=action.payload;\n        return {...state, selectedGroup: newSelected, groupModalSelecting:true}\n      }\n      case 'GROUP_MODAL_SELECTING':{\n        return{...state, groupModalSelecting:false}\n      }\n      case 'EDIT_GROUP': {\n        const index= state.groups.findIndex(group => {return group.id == state.selectedGroup.id})\n        const newGroupSet = state.groups;\n        newGroupSet[index]= action.payload;\n        console.log(newGroupSet)\n        return {...state, groups: newGroupSet, selectedGroup:{}, groupChanging:true};\n      }\n      case 'GROUP_CHANGED':{\n        return{...state, groupChanging:false}\n      }\n      case \"GROUP_DELETE\": {\n        const newGroups = Object.assign([],{...state.groups});\n        const index= state.groups.findIndex(group => {return group.id == action.id})\n        newGroups.splice(index, 1)\n        return {...state, groups: newGroups, groupDeleting: true};\n      }\n      default:\n        return state;\n    }\n  }\n  \nexport default groupReducer;"]},"metadata":{},"sourceType":"module"}