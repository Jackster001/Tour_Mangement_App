{"ast":null,"code":"import _objectSpread from \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { db } from \"../components/Firebase\";\n\nconst selectContact = id => {\n  let contactData = {};\n  let stringId = '' + id + '';\n  return dispatch => {\n    let docRef = db.collection(\"contactInfo\").doc(stringId);\n    docRef.get().then(function (doc) {\n      if (doc.exists) {\n        let contact = doc.data();\n        contactData = _objectSpread({}, contact, {\n          id\n        });\n      } else {\n        console.log(\"Something went wrong!\");\n      }\n\n      dispatch({\n        type: \"CONTACT_SELECT\",\n        payload: contactData,\n        id: id\n      });\n    }).catch(function (error) {\n      console.log(\"Error getting document:\", error);\n    });\n  };\n};\n\nconst selectContactChanging = () => {\n  return {\n    type: \"CONTACT_SELECT_CHANGED\"\n  };\n};\n\nconst getContacts = () => {\n  let data = Object.assign([]);\n  return dispatch => {\n    db.collection(\"contactInfo\").get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        let contact = doc.data();\n        contact = _objectSpread({\n          id: doc.id\n        }, contact);\n        data = [contact, ...data];\n      });\n      data.sort(function (a, b) {\n        return a.timestamp.seconds - b.timestamp.seconds;\n      }).reverse();\n      dispatch({\n        type: \"CONTACTS_GET\",\n        payload: data\n      });\n    }).catch(function (error) {\n      console.log(\"Error getting document:\", error);\n    });\n  };\n};\n\nconst recievedContacts = () => {\n  return {\n    type: \"CONTACTS_GETTING\"\n  };\n};\n\nconst addContact = newContact => {\n  return dispatch => {\n    db.collection(\"contactInfo\").add(newContact).then(function () {\n      dispatch({\n        type: 'CONTACT_SEND',\n        payload: newContact\n      });\n    }).catch(error => {\n      console.log({\n        error\n      });\n    });\n  };\n};\n\nconst contactAdded = () => {\n  return {\n    type: 'CONTACT_SENT'\n  };\n};\n\nconst deleteContact = id => {\n  db.collection(\"contactInfo\").doc(id).delete().then(function () {\n    console.log(\"Contact successfully deleted!\");\n  }).catch(function (error) {\n    console.error(\"Error removing document: \", error);\n  });\n  return {\n    type: \"CONTACT_DELETE\",\n    id: id\n  };\n};\n\nconst editContact = contact => {\n  return dispatch => {\n    db.collection(\"contactInfo\").doc(contact.id).set(contact).then(function () {\n      dispatch({\n        type: \"EDIT_CONTACT\",\n        payload: contact\n      });\n    }).catch(function (error) {\n      console.error(\"Error writing document: \", error);\n    });\n  };\n};\n\nconst contactChanged = () => {\n  return {\n    type: \"CONTACT_CHANGED\"\n  };\n};\n\nexport { getContacts, addContact, contactAdded, deleteContact, selectContact, selectContactChanging, editContact, contactChanged, recievedContacts };","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/Action/contactAction.js"],"names":["db","selectContact","id","contactData","stringId","dispatch","docRef","collection","doc","get","then","exists","contact","data","console","log","type","payload","catch","error","selectContactChanging","getContacts","Object","assign","querySnapshot","forEach","sort","a","b","timestamp","seconds","reverse","recievedContacts","addContact","newContact","add","contactAdded","deleteContact","delete","editContact","set","contactChanged"],"mappings":"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","sourcesContent":["import {db} from \"../components/Firebase\";\n\nconst selectContact= (id)=>{\n    let contactData={}\n    let stringId=''+id+'';\n    return (dispatch)=>{\n        let docRef=db.collection(\"contactInfo\").doc(stringId)\n        docRef.get().then(function(doc){\n        if(doc.exists){\n            let contact=doc.data();\n            contactData={...contact, id}\n        } else{\n            console.log(\"Something went wrong!\")\n        }\n        dispatch({\n            type: \"CONTACT_SELECT\",\n            payload: contactData,\n            id: id\n        })\n    }).catch(function(error) {\n        console.log(\"Error getting document:\", error);\n    });\n    }\n}\nconst selectContactChanging=()=>{\n    return{\n        type:\"CONTACT_SELECT_CHANGED\"\n    }\n}\nconst getContacts = () =>{\n    let data=Object.assign([])\n    return (dispatch) => {\n        db.collection(\"contactInfo\").get().then(function(querySnapshot) {\n            querySnapshot.forEach(function(doc) {\n            let contact = doc.data();\n            contact = {id: doc.id, ...contact}\n            data=[contact, ...data]\n            })           \n            data.sort(function(a,b){\n                return  a.timestamp.seconds - b.timestamp.seconds\n            }).reverse();\n            dispatch({\n                type: \"CONTACTS_GET\",\n                payload: data\n            })\n         })\n         .catch(function(error){\n            console.log(\"Error getting document:\", error);\n         })\n    }\n}\nconst recievedContacts = () =>{\n    return {\n        type: \"CONTACTS_GETTING\"\n    }\n}\nconst addContact = (newContact)=>{\n    return(dispatch)=>{\n        db.collection(\"contactInfo\").add(newContact).then(function(){\n            dispatch({\n                type: 'CONTACT_SEND',\n                payload: newContact\n            })\n        }).catch(error => {\n            console.log({ error });\n        });\n    }\n}\nconst contactAdded=()=>{\n    return {\n        type: 'CONTACT_SENT'\n    }\n}\nconst deleteContact = (id) =>{\n    db.collection(\"contactInfo\").doc(id).delete().then(function(){\n        console.log(\"Contact successfully deleted!\");\n    }).catch(function(error) {\n        console.error(\"Error removing document: \", error);\n    });\n    return{\n        type: \"CONTACT_DELETE\",\n        id: id\n    }\n}\nconst editContact = (contact) =>{\n    return(dispatch)=>{\n        db.collection(\"contactInfo\").doc(contact.id).set(contact).then(function() {\n            dispatch({\n                type:\"EDIT_CONTACT\",\n                payload: contact\n            })\n        })\n        .catch(function(error) {\n            console.error(\"Error writing document: \", error);\n        });\n    } \n}\nconst contactChanged=()=>{\n    return{\n        type: \"CONTACT_CHANGED\"\n    }\n}\nexport {getContacts, addContact, contactAdded, deleteContact, selectContact, selectContactChanging, editContact, contactChanged, recievedContacts}"]},"metadata":{},"sourceType":"module"}