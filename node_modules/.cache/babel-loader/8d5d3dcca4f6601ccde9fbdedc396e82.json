{"ast":null,"code":"import _objectSpread from \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst INITIAL_STATE = {\n  contacts: [{}],\n  contactsGetting: false,\n  contactAdding: false,\n  selectedContact: {},\n  selectContactsChanged: false,\n  contactsChanging: false\n};\n\nfunction contactReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'CONTACTS_GET':\n      {\n        return _objectSpread({}, state, {\n          contacts: action.payload,\n          contactsGetting: true\n        });\n      }\n\n    case \"CONTACTS_GETTING\":\n      {\n        return _objectSpread({}, state, {\n          contactsGetting: false\n        });\n      }\n\n    case 'CONTACT_SEND':\n      {\n        return _objectSpread({}, state, {\n          contacts: [action.payload, ...state.contacts],\n          contactAdding: true\n        });\n      }\n\n    case 'CONTACT_SENT':\n      {\n        return _objectSpread({}, state, {\n          contactAdding: false\n        });\n      }\n\n    case 'CONTACT_SELECT':\n      {\n        return _objectSpread({}, state, {\n          selectedContact: action.payload,\n          selectContactChanged: true\n        });\n      }\n\n    case 'CONTACT_SELECT_CHANGED':\n      {\n        return _objectSpread({}, state, {\n          selectContactChanged: false\n        });\n      }\n\n    case 'EDIT_CONTACT':\n      {\n        const index = state.contacts.findIndex(contact => {\n          return contact.id == state.selectedContact.id;\n        });\n        const newContactSet = state.contacts;\n        newContactSet[index] = action.payload;\n        return _objectSpread({}, state, {\n          contacts: newContactSet,\n          contactChanging: true\n        });\n      }\n\n    case 'CONTACT_CHANGED':\n      {\n        return _objectSpread({}, state, {\n          contactChanging: false\n        });\n      }\n\n    case \"CONTACT_DELETE\":\n      {\n        const newContacts = Object.assign([], _objectSpread({}, state.contacts));\n        const index = state.contacts.findIndex(contact => {\n          return contact.id == action.id;\n        });\n        newContacts.splice(index, 1);\n        return _objectSpread({}, state, {\n          contacts: newContacts,\n          contactDeleting: true\n        });\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default contactReducer;","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/reducers/contact.js"],"names":["INITIAL_STATE","contacts","contactsGetting","contactAdding","selectedContact","selectContactsChanged","contactsChanging","contactReducer","state","action","type","payload","selectContactChanged","index","findIndex","contact","id","newContactSet","contactChanging","newContacts","Object","assign","splice","contactDeleting"],"mappings":";AAAA,MAAMA,aAAa,GAAG;AAClBC,EAAAA,QAAQ,EAAE,CAAC,EAAD,CADQ;AAElBC,EAAAA,eAAe,EAAE,KAFC;AAGlBC,EAAAA,aAAa,EAAE,KAHG;AAIlBC,EAAAA,eAAe,EAAE,EAJC;AAKlBC,EAAAA,qBAAqB,EAAE,KALL;AAMlBC,EAAAA,gBAAgB,EAAE;AANA,CAAtB;;AAQA,SAASC,cAAT,CAAwBC,KAAK,GAAGR,aAAhC,EAA+CS,MAA/C,EAAuD;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AAAqB;AACnB,iCAAWF,KAAX;AAAkBP,UAAAA,QAAQ,EAAEQ,MAAM,CAACE,OAAnC;AAA4CT,UAAAA,eAAe,EAAE;AAA7D;AACD;;AACD,SAAK,kBAAL;AAAwB;AACtB,iCAAWM,KAAX;AAAkBN,UAAAA,eAAe,EAAE;AAAnC;AACD;;AACD,SAAK,cAAL;AAAqB;AACnB,iCAAWM,KAAX;AAAkBP,UAAAA,QAAQ,EAAE,CAACQ,MAAM,CAACE,OAAR,EAAgB,GAAGH,KAAK,CAACP,QAAzB,CAA5B;AAAgEE,UAAAA,aAAa,EAAE;AAA/E;AACD;;AACD,SAAK,cAAL;AAAqB;AACnB,iCAAWK,KAAX;AAAkBL,UAAAA,aAAa,EAAE;AAAjC;AACD;;AACD,SAAK,gBAAL;AAAuB;AACrB,iCAAWK,KAAX;AAAkBJ,UAAAA,eAAe,EAAEK,MAAM,CAACE,OAA1C;AAAmDC,UAAAA,oBAAoB,EAAE;AAAzE;AACD;;AACD,SAAK,wBAAL;AAA8B;AAC5B,iCAAWJ,KAAX;AAAkBI,UAAAA,oBAAoB,EAAE;AAAxC;AACD;;AACD,SAAK,cAAL;AAAqB;AACnB,cAAMC,KAAK,GAAEL,KAAK,CAACP,QAAN,CAAea,SAAf,CAAyBC,OAAO,IAAI;AAAC,iBAAOA,OAAO,CAACC,EAAR,IAAcR,KAAK,CAACJ,eAAN,CAAsBY,EAA3C;AAA8C,SAAnF,CAAb;AACA,cAAMC,aAAa,GAAGT,KAAK,CAACP,QAA5B;AACAgB,QAAAA,aAAa,CAACJ,KAAD,CAAb,GAAsBJ,MAAM,CAACE,OAA7B;AACA,iCAAWH,KAAX;AAAkBP,UAAAA,QAAQ,EAAEgB,aAA5B;AAA2CC,UAAAA,eAAe,EAAC;AAA3D;AACD;;AACD,SAAK,iBAAL;AAAuB;AACrB,iCAAUV,KAAV;AAAiBU,UAAAA,eAAe,EAAC;AAAjC;AACD;;AACD,SAAK,gBAAL;AAAuB;AACrB,cAAMC,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,oBAAqBb,KAAK,CAACP,QAA3B,EAApB;AACA,cAAMY,KAAK,GAAEL,KAAK,CAACP,QAAN,CAAea,SAAf,CAAyBC,OAAO,IAAI;AAAC,iBAAOA,OAAO,CAACC,EAAR,IAAcP,MAAM,CAACO,EAA5B;AAA+B,SAApE,CAAb;AACAG,QAAAA,WAAW,CAACG,MAAZ,CAAmBT,KAAnB,EAA0B,CAA1B;AACA,iCAAWL,KAAX;AAAkBP,UAAAA,QAAQ,EAAEkB,WAA5B;AAAyCI,UAAAA,eAAe,EAAE;AAA1D;AACD;;AACD;AACE,aAAOf,KAAP;AAnCJ;AAqCD;;AAEH,eAAeD,cAAf","sourcesContent":["const INITIAL_STATE = {\n    contacts: [{}],\n    contactsGetting: false,\n    contactAdding: false,\n    selectedContact: {},\n    selectContactsChanged: false,\n    contactsChanging: false\n};\nfunction contactReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {\n      case 'CONTACTS_GET': {\n        return {...state, contacts: action.payload, contactsGetting: true};\n      }\n      case \"CONTACTS_GETTING\":{\n        return {...state, contactsGetting: false}\n      }\n      case 'CONTACT_SEND': {\n        return {...state, contacts: [action.payload,...state.contacts], contactAdding: true};\n      }\n      case 'CONTACT_SENT': {\n        return {...state, contactAdding: false}\n      }\n      case 'CONTACT_SELECT': {\n        return {...state, selectedContact: action.payload, selectContactChanged: true};\n      }\n      case 'CONTACT_SELECT_CHANGED':{\n        return {...state, selectContactChanged: false}\n      }\n      case 'EDIT_CONTACT': {\n        const index= state.contacts.findIndex(contact => {return contact.id == state.selectedContact.id})\n        const newContactSet = state.contacts;\n        newContactSet[index]= action.payload;\n        return {...state, contacts: newContactSet, contactChanging:true};\n      }\n      case 'CONTACT_CHANGED':{\n        return{...state, contactChanging:false}\n      }\n      case \"CONTACT_DELETE\": {\n        const newContacts = Object.assign([],{...state.contacts});\n        const index= state.contacts.findIndex(contact => {return contact.id == action.id})\n        newContacts.splice(index, 1)\n        return {...state, contacts: newContacts, contactDeleting: true};\n      }\n      default:\n        return state;\n    }\n  }\n  \nexport default contactReducer;"]},"metadata":{},"sourceType":"module"}