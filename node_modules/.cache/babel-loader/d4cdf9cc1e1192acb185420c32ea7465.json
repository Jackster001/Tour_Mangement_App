{"ast":null,"code":"import _objectSpread from \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst INITIAL_STATE = {// alarms: [{}],\n  // gettingAlarms: false,\n  // alarmAdding: false,\n  // selectedAlarm: {},\n  // selectAlarmChanged: false,\n  // groupChanging: false\n};\n\nfunction alarmReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'ALARMS_GET':\n      {\n        return _objectSpread({}, state, {\n          alarms: action.payload,\n          gettingAlarms: true\n        });\n      }\n\n    case 'GETTING_ALARMS':\n      {\n        return _objectSpread({}, state, {\n          gettingAlarms: false\n        });\n      }\n\n    case 'ALARM_ADD':\n      {\n        return _objectSpread({}, state, {\n          alarms: [action.payload, ...state.alarms],\n          alarmAdding: true\n        });\n      }\n\n    case 'ALARM_ADDED':\n      {\n        return _objectSpread({}, state, {\n          alarmAdding: false\n        });\n      }\n\n    case 'ALARM_SELECT':\n      {\n        return _objectSpread({}, state, {\n          selectedAlarm: action.payload,\n          selectAlarmChanged: true\n        });\n      }\n\n    case 'ALARM_SELECT_CHANGED':\n      {\n        return _objectSpread({}, state, {\n          selectAlarmChanged: false\n        });\n      }\n\n    case 'EDIT_ALARM':\n      {\n        const index = state.alarms.findIndex(alarm => {\n          return alarm.id == state.selectedAlarm.id;\n        });\n        const newAlarmSet = state.alarms;\n        newAlarmSet[index] = action.payload;\n        console.log(newAlarmSet);\n        return _objectSpread({}, state, {\n          alarms: newAlarmSet,\n          alarmChanging: true\n        });\n      }\n\n    case 'ALARM_CHANGED':\n      {\n        return _objectSpread({}, state, {\n          alarmChanging: false\n        });\n      }\n\n    case \"ALARM_DELETE\":\n      {\n        const newAlarms = Object.assign([], _objectSpread({}, state.alarms));\n        const index = state.alarms.findIndex(alarm => {\n          return alarm.id == action.id;\n        });\n        newAlarms.splice(index, 1);\n        return _objectSpread({}, state, {\n          alarms: newAlarms,\n          alarmDeleting: true\n        });\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default alarmReducer;","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/reducers/alarm.js"],"names":["INITIAL_STATE","alarmReducer","state","action","type","alarms","payload","gettingAlarms","alarmAdding","selectedAlarm","selectAlarmChanged","index","findIndex","alarm","id","newAlarmSet","console","log","alarmChanging","newAlarms","Object","assign","splice","alarmDeleting"],"mappings":";AAAA,MAAMA,aAAa,GAAG,CAClB;AACA;AACA;AACA;AACA;AACA;AANkB,CAAtB;;AAQA,SAASC,YAAT,CAAsBC,KAAK,GAAGF,aAA9B,EAA6CG,MAA7C,EAAqD;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AAAmB;AACjB,iCAAWF,KAAX;AAAkBG,UAAAA,MAAM,EAAEF,MAAM,CAACG,OAAjC;AAA0CC,UAAAA,aAAa,EAAC;AAAxD;AACD;;AACD,SAAK,gBAAL;AAAsB;AACpB,iCAAWL,KAAX;AAAkBK,UAAAA,aAAa,EAAE;AAAjC;AACD;;AACD,SAAK,WAAL;AAAkB;AAChB,iCAAWL,KAAX;AAAkBG,UAAAA,MAAM,EAAE,CAACF,MAAM,CAACG,OAAR,EAAgB,GAAGJ,KAAK,CAACG,MAAzB,CAA1B;AAA4DG,UAAAA,WAAW,EAAE;AAAzE;AACD;;AACD,SAAK,aAAL;AAAoB;AAClB,iCAAWN,KAAX;AAAkBM,UAAAA,WAAW,EAAE;AAA/B;AACD;;AACD,SAAK,cAAL;AAAqB;AACnB,iCAAWN,KAAX;AAAkBO,UAAAA,aAAa,EAAEN,MAAM,CAACG,OAAxC;AAAiDI,UAAAA,kBAAkB,EAAE;AAArE;AACD;;AACD,SAAK,sBAAL;AAA4B;AAC1B,iCAAWR,KAAX;AAAkBQ,UAAAA,kBAAkB,EAAE;AAAtC;AACD;;AACD,SAAK,YAAL;AAAmB;AACjB,cAAMC,KAAK,GAAET,KAAK,CAACG,MAAN,CAAaO,SAAb,CAAuBC,KAAK,IAAI;AAAC,iBAAOA,KAAK,CAACC,EAAN,IAAYZ,KAAK,CAACO,aAAN,CAAoBK,EAAvC;AAA0C,SAA3E,CAAb;AACA,cAAMC,WAAW,GAAGb,KAAK,CAACG,MAA1B;AACAU,QAAAA,WAAW,CAACJ,KAAD,CAAX,GAAoBR,MAAM,CAACG,OAA3B;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,iCAAWb,KAAX;AAAkBG,UAAAA,MAAM,EAAEU,WAA1B;AAAuCG,UAAAA,aAAa,EAAC;AAArD;AACD;;AACD,SAAK,eAAL;AAAqB;AACnB,iCAAUhB,KAAV;AAAiBgB,UAAAA,aAAa,EAAC;AAA/B;AACD;;AACD,SAAK,cAAL;AAAqB;AACnB,cAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,oBAAqBnB,KAAK,CAACG,MAA3B,EAAlB;AACA,cAAMM,KAAK,GAAET,KAAK,CAACG,MAAN,CAAaO,SAAb,CAAuBC,KAAK,IAAI;AAAC,iBAAOA,KAAK,CAACC,EAAN,IAAYX,MAAM,CAACW,EAA1B;AAA6B,SAA9D,CAAb;AACAK,QAAAA,SAAS,CAACG,MAAV,CAAiBX,KAAjB,EAAwB,CAAxB;AACA,iCAAWT,KAAX;AAAkBG,UAAAA,MAAM,EAAEc,SAA1B;AAAqCI,UAAAA,aAAa,EAAE;AAApD;AACD;;AACD;AACE,aAAOrB,KAAP;AApCJ;AAsCD;;AAEH,eAAeD,YAAf","sourcesContent":["const INITIAL_STATE = {\n    // alarms: [{}],\n    // gettingAlarms: false,\n    // alarmAdding: false,\n    // selectedAlarm: {},\n    // selectAlarmChanged: false,\n    // groupChanging: false\n};\nfunction alarmReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {\n      case 'ALARMS_GET': {\n        return {...state, alarms: action.payload, gettingAlarms:true};\n      }\n      case 'GETTING_ALARMS':{\n        return {...state, gettingAlarms: false}\n      }\n      case 'ALARM_ADD': {\n        return {...state, alarms: [action.payload,...state.alarms], alarmAdding: true};\n      }\n      case 'ALARM_ADDED': {\n        return {...state, alarmAdding: false}\n      }\n      case 'ALARM_SELECT': {\n        return {...state, selectedAlarm: action.payload, selectAlarmChanged: true};\n      }\n      case 'ALARM_SELECT_CHANGED':{\n        return {...state, selectAlarmChanged: false}\n      }\n      case 'EDIT_ALARM': {\n        const index= state.alarms.findIndex(alarm => {return alarm.id == state.selectedAlarm.id})\n        const newAlarmSet = state.alarms;\n        newAlarmSet[index]= action.payload;\n        console.log(newAlarmSet);\n        return {...state, alarms: newAlarmSet, alarmChanging:true};\n      }\n      case 'ALARM_CHANGED':{\n        return{...state, alarmChanging:false}\n      }\n      case \"ALARM_DELETE\": {\n        const newAlarms = Object.assign([],{...state.alarms});\n        const index= state.alarms.findIndex(alarm => {return alarm.id == action.id})\n        newAlarms.splice(index, 1)\n        return {...state, alarms: newAlarms, alarmDeleting: true};\n      }\n      default:\n        return state;\n    }\n  }\n  \nexport default alarmReducer;"]},"metadata":{},"sourceType":"module"}