{"ast":null,"code":"import _objectSpread from \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst INITIAL_STATE = {\n  alarms: [{}],\n  gettingAlarms: false,\n  alarmAdding: false,\n  selectedAlarm: {},\n  selectAlarmChanged: false,\n  groupChanging: false\n};\n\nfunction alarmReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'ALARMS_GET':\n      {\n        return _objectSpread({}, state, {\n          alarms: action.payload\n        });\n      }\n\n    case 'GETTING_ALARMS':\n      {\n        return _objectSpread({}, state, {\n          gettingAlarms: true\n        });\n      }\n\n    case 'ALARM_ADD':\n      {\n        return _objectSpread({}, state, {\n          alarms: [action.payload, ...state.alarms],\n          alarmAdding: true\n        });\n      }\n\n    case 'ALARM_ADDED':\n      {\n        return _objectSpread({}, state, {\n          alarmAdding: false\n        });\n      }\n\n    case 'ALARM_SELECT':\n      {\n        console.log(action.payload);\n        return _objectSpread({}, state, {\n          selectedAlarm: action.payload,\n          selectAlarmChanged: true\n        });\n      }\n\n    case 'ALARM_SELECT_CHANGED':\n      {\n        return _objectSpread({}, state, {\n          selectAlarmChanged: false\n        });\n      }\n\n    case 'EDIT_ALARM':\n      {\n        const index = state.alarms.findIndex(alarm => {\n          return alarm.id == state.selectedAlarm.id;\n        });\n        const newAlarmSet = state.alarms;\n        newAlarmSet[index] = action.payload;\n        console.log(newAlarmSet);\n        return _objectSpread({}, state, {\n          alarms: newAlarmSet,\n          alarmChanging: true\n        });\n      }\n\n    case 'ALARM_CHANGED':\n      {\n        return _objectSpread({}, state, {\n          alarmChanging: false\n        });\n      }\n\n    case \"ALARM_DELETE\":\n      {\n        const newAlarms = Object.assign([], _objectSpread({}, state.alarms));\n        const index = state.alarms.findIndex(alarm => {\n          return alarm.id == action.id;\n        });\n        newAlarms.splice(index, 1);\n        return _objectSpread({}, state, {\n          alarms: newAlarms,\n          alarmDeleting: true\n        });\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default alarmReducer;","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/reducers/alarm.js"],"names":["INITIAL_STATE","alarms","gettingAlarms","alarmAdding","selectedAlarm","selectAlarmChanged","groupChanging","alarmReducer","state","action","type","payload","console","log","index","findIndex","alarm","id","newAlarmSet","alarmChanging","newAlarms","Object","assign","splice","alarmDeleting"],"mappings":";AAAA,MAAMA,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,CAAC,EAAD,CADU;AAElBC,EAAAA,aAAa,EAAE,KAFG;AAGlBC,EAAAA,WAAW,EAAE,KAHK;AAIlBC,EAAAA,aAAa,EAAE,EAJG;AAKlBC,EAAAA,kBAAkB,EAAE,KALF;AAMlBC,EAAAA,aAAa,EAAE;AANG,CAAtB;;AAQA,SAASC,YAAT,CAAsBC,KAAK,GAAGR,aAA9B,EAA6CS,MAA7C,EAAqD;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AAAmB;AACjB,iCAAWF,KAAX;AAAkBP,UAAAA,MAAM,EAAEQ,MAAM,CAACE;AAAjC;AACD;;AACD,SAAK,gBAAL;AAAsB;AACpB,iCAAWH,KAAX;AAAkBN,UAAAA,aAAa,EAAE;AAAjC;AACD;;AACD,SAAK,WAAL;AAAkB;AAChB,iCAAWM,KAAX;AAAkBP,UAAAA,MAAM,EAAE,CAACQ,MAAM,CAACE,OAAR,EAAgB,GAAGH,KAAK,CAACP,MAAzB,CAA1B;AAA4DE,UAAAA,WAAW,EAAE;AAAzE;AACD;;AACD,SAAK,aAAL;AAAoB;AAClB,iCAAWK,KAAX;AAAkBL,UAAAA,WAAW,EAAE;AAA/B;AACD;;AACD,SAAK,cAAL;AAAqB;AACnBS,QAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,OAAnB;AACA,iCAAWH,KAAX;AAAkBJ,UAAAA,aAAa,EAAEK,MAAM,CAACE,OAAxC;AAAiDN,UAAAA,kBAAkB,EAAE;AAArE;AACD;;AACD,SAAK,sBAAL;AAA4B;AAC1B,iCAAWG,KAAX;AAAkBH,UAAAA,kBAAkB,EAAE;AAAtC;AACD;;AACD,SAAK,YAAL;AAAmB;AACjB,cAAMS,KAAK,GAAEN,KAAK,CAACP,MAAN,CAAac,SAAb,CAAuBC,KAAK,IAAI;AAAC,iBAAOA,KAAK,CAACC,EAAN,IAAYT,KAAK,CAACJ,aAAN,CAAoBa,EAAvC;AAA0C,SAA3E,CAAb;AACA,cAAMC,WAAW,GAAGV,KAAK,CAACP,MAA1B;AACAiB,QAAAA,WAAW,CAACJ,KAAD,CAAX,GAAoBL,MAAM,CAACE,OAA3B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYK,WAAZ;AACA,iCAAWV,KAAX;AAAkBP,UAAAA,MAAM,EAAEiB,WAA1B;AAAuCC,UAAAA,aAAa,EAAC;AAArD;AACD;;AACD,SAAK,eAAL;AAAqB;AACnB,iCAAUX,KAAV;AAAiBW,UAAAA,aAAa,EAAC;AAA/B;AACD;;AACD,SAAK,cAAL;AAAqB;AACnB,cAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,oBAAqBd,KAAK,CAACP,MAA3B,EAAlB;AACA,cAAMa,KAAK,GAAEN,KAAK,CAACP,MAAN,CAAac,SAAb,CAAuBC,KAAK,IAAI;AAAC,iBAAOA,KAAK,CAACC,EAAN,IAAYR,MAAM,CAACQ,EAA1B;AAA6B,SAA9D,CAAb;AACAG,QAAAA,SAAS,CAACG,MAAV,CAAiBT,KAAjB,EAAwB,CAAxB;AACA,iCAAWN,KAAX;AAAkBP,UAAAA,MAAM,EAAEmB,SAA1B;AAAqCI,UAAAA,aAAa,EAAE;AAApD;AACD;;AACD;AACE,aAAOhB,KAAP;AArCJ;AAuCD;;AAEH,eAAeD,YAAf","sourcesContent":["const INITIAL_STATE = {\n    alarms: [{}],\n    gettingAlarms: false,\n    alarmAdding: false,\n    selectedAlarm: {},\n    selectAlarmChanged: false,\n    groupChanging: false\n};\nfunction alarmReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {\n      case 'ALARMS_GET': {\n        return {...state, alarms: action.payload};\n      }\n      case 'GETTING_ALARMS':{\n        return {...state, gettingAlarms: true}\n      }\n      case 'ALARM_ADD': {\n        return {...state, alarms: [action.payload,...state.alarms], alarmAdding: true};\n      }\n      case 'ALARM_ADDED': {\n        return {...state, alarmAdding: false}\n      }\n      case 'ALARM_SELECT': {\n        console.log(action.payload)\n        return {...state, selectedAlarm: action.payload, selectAlarmChanged: true};\n      }\n      case 'ALARM_SELECT_CHANGED':{\n        return {...state, selectAlarmChanged: false}\n      }\n      case 'EDIT_ALARM': {\n        const index= state.alarms.findIndex(alarm => {return alarm.id == state.selectedAlarm.id})\n        const newAlarmSet = state.alarms;\n        newAlarmSet[index]= action.payload;\n        console.log(newAlarmSet);\n        return {...state, alarms: newAlarmSet, alarmChanging:true};\n      }\n      case 'ALARM_CHANGED':{\n        return{...state, alarmChanging:false}\n      }\n      case \"ALARM_DELETE\": {\n        const newAlarms = Object.assign([],{...state.alarms});\n        const index= state.alarms.findIndex(alarm => {return alarm.id == action.id})\n        newAlarms.splice(index, 1)\n        return {...state, alarms: newAlarms, alarmDeleting: true};\n      }\n      default:\n        return state;\n    }\n  }\n  \nexport default alarmReducer;"]},"metadata":{},"sourceType":"module"}