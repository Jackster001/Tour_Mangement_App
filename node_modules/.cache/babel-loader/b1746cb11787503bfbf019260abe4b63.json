{"ast":null,"code":"import _objectSpread from \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { db, storageRef } from \"../components/Firebase\";\n\nconst selectItinerary = (id, index) => {\n  let itineraryData = {};\n  let stringId = '' + id + '';\n  let head = {};\n  return dispatch => {\n    let docRef = db.collection(\"itineraries\").doc(stringId);\n    docRef.get().then(function (doc) {\n      if (doc.exists) {\n        let itinerary = doc.data();\n        console.log(itinerary);\n        head = itinerary;\n        let selectItinerary = itinerary.dailyData[index];\n        itineraryData = selectItinerary;\n      } else {\n        console.log(\"Something went wrong!\");\n      }\n\n      dispatch({\n        type: \"ITINERARY_SELECT\",\n        payload: itineraryData,\n        itineraryHead: head\n      });\n    }).catch(function (error) {\n      console.log(\"Error getting document:\", error);\n    });\n  };\n};\n\nconst selectItineraryChanging = () => {\n  return {\n    type: \"ITINERARY_SELECT_CHANGED\"\n  };\n};\n\nconst getItineraries = () => {\n  let data = Object.assign([]);\n  return dispatch => {\n    db.collection(\"itineraries\").get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        let itinerary = doc.data();\n        itinerary = _objectSpread({\n          id: doc.id\n        }, itinerary);\n        data = [...data, itinerary];\n      });\n      dispatch({\n        type: \"ITINERARIES_GET\",\n        payload: data\n      });\n    }).catch(function (error) {\n      console.log(\"Error getting document:\", error);\n    });\n  };\n};\n\nconst addItinerary = itinerary => {\n  return dispatch => {\n    db.collection(\"itinerary\").add(itinerary).then(function () {\n      dispatch({\n        type: 'ITINERARY_SEND',\n        payload: itinerary\n      });\n    }).catch(error => {\n      console.log({\n        error\n      });\n    });\n  };\n};\n\nconst itineraryAdded = () => {\n  return {\n    type: 'ITINERARY_ADDED'\n  };\n};\n\nconst addItineraryDay = () => {};\n\nconst deleteItinerary = id => {\n  db.collection(\"itineraries\").doc(id).delete().then(function () {\n    console.log(\"Group successfully deleted!\");\n  }).catch(function (error) {\n    console.error(\"Error removing document: \", error);\n  });\n  return {\n    type: \"ITINERARY_DELETE\",\n    id: id\n  };\n};\n\nconst editItinerary = (itinerary, index) => {\n  return dispatch => {\n    // let docRef=db.collection(\"itineraries\").doc(itinerary.id)\n    // docRef.get()\n    // console.log(docRef)\n    db.collection(\"itineraries\").doc(itinerary.id).update({\n      dailyData: itinerary.dailyData\n    }).then(function () {\n      dispatch({\n        type: \"EDIT_ITINERARY\",\n        payload: itinerary\n      });\n    }).catch(function (error) {\n      console.error(\"Error writing document: \", error);\n    });\n  };\n};\n\nconst itineraryChanged = () => {\n  return {\n    type: \"ITINERARY_CHANGED\"\n  };\n};\n\nexport { getItineraries, addItinerary, itineraryAdded, deleteItinerary, selectItinerary, selectItineraryChanging, editItinerary, itineraryChanged };","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/Action/itineraryAction.js"],"names":["db","storageRef","selectItinerary","id","index","itineraryData","stringId","head","dispatch","docRef","collection","doc","get","then","exists","itinerary","data","console","log","dailyData","type","payload","itineraryHead","catch","error","selectItineraryChanging","getItineraries","Object","assign","querySnapshot","forEach","addItinerary","add","itineraryAdded","addItineraryDay","deleteItinerary","delete","editItinerary","update","itineraryChanged"],"mappings":"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","sourcesContent":["import {db, storageRef} from \"../components/Firebase\";\n\nconst selectItinerary= (id, index)=>{\n    let itineraryData={}\n    let stringId=''+id+'';\n    let head= {}\n    return (dispatch)=>{\n        let docRef=db.collection(\"itineraries\").doc(stringId)\n        docRef.get().then(function(doc){\n        if(doc.exists){\n            let itinerary=doc.data();\n            console.log(itinerary)\n            head= itinerary\n            let selectItinerary= itinerary.dailyData[index];\n            itineraryData=selectItinerary\n        } else{\n            console.log(\"Something went wrong!\")\n        }\n        dispatch({\n            type: \"ITINERARY_SELECT\",\n            payload: itineraryData,\n            itineraryHead: head\n        })\n    }).catch(function(error) {\n        console.log(\"Error getting document:\", error);\n    });\n    }\n}\nconst selectItineraryChanging=()=>{\n    return{\n        type:\"ITINERARY_SELECT_CHANGED\"\n    }\n}\nconst getItineraries = () =>{\n    let data=Object.assign([])\n    return (dispatch) => {\n        db.collection(\"itineraries\").get().then(function(querySnapshot) {\n            querySnapshot.forEach(function(doc) {\n            let itinerary = doc.data();\n            itinerary= {id:doc.id,...itinerary}\n            data=[...data, itinerary]\n            })           \n            dispatch({\n                type: \"ITINERARIES_GET\",\n                payload: data\n            })\n         })\n         .catch(function(error){\n            console.log(\"Error getting document:\", error);\n         })\n    }\n}\nconst addItinerary = (itinerary)=>{\n    return(dispatch)=>{\n        db.collection(\"itinerary\").add(itinerary).then(function(){\n            dispatch({\n                type: 'ITINERARY_SEND',\n                payload: itinerary\n            })\n        }).catch(error => {\n            console.log({ error });\n        });\n    }\n}\nconst itineraryAdded =()=>{\n    return {\n        type: 'ITINERARY_ADDED'\n    }\n}\nconst addItineraryDay =()=>{\n    \n}\nconst deleteItinerary = (id) =>{\n    db.collection(\"itineraries\").doc(id).delete().then(function(){\n        console.log(\"Group successfully deleted!\");\n    }).catch(function(error) {\n        console.error(\"Error removing document: \", error);\n    });\n    return{\n        type: \"ITINERARY_DELETE\",\n        id: id\n    }\n}\nconst editItinerary = (itinerary, index) =>{\n    return(dispatch)=>{\n        // let docRef=db.collection(\"itineraries\").doc(itinerary.id)\n        // docRef.get()\n        // console.log(docRef)\n        db.collection(\"itineraries\").doc(itinerary.id).update({dailyData:itinerary.dailyData}).then(function() {\n            dispatch({\n                type:\"EDIT_ITINERARY\",\n                payload: itinerary\n            })\n        })\n        .catch(function(error) {\n            console.error(\"Error writing document: \", error);\n        });\n    } \n}\nconst itineraryChanged=()=>{\n    return{\n        type: \"ITINERARY_CHANGED\"\n    }\n}\nexport {getItineraries, addItinerary, itineraryAdded, deleteItinerary, selectItinerary, selectItineraryChanging, editItinerary, itineraryChanged}"]},"metadata":{},"sourceType":"module"}