{"ast":null,"code":"var _jsxFileName = \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Tables/itineraryTable/itineraryRow.js\";\nimport React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { getItineraries, addItinerary, itineraryAdded, deleteItinerary, selectItinerary, selectItineraryChanging, editItinerary, itineraryChanged } from '../../../Action/itineraryAction';\nimport withAuthorization from '../../Session/withAuthorization';\nimport ActivityTable from \"./activityTable\";\n\nclass ItineraryRow extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: {},\n      show: false,\n      listShow: false,\n      showList: \"\",\n      tourGuides: [],\n      leadChaperones: [],\n      radioSelected: \"\",\n      targetList: [],\n      avaliableTourGuides: [],\n      avaliableLeadChaperones: [],\n      assignedTourGuide: {},\n      assignedLeadChaperone: {}\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate() {\n    if (this.props.selectItineraryChanged) {\n      this.props.selectItineraryChanging();\n      this.props.history.push('/itinerary/' + this.props.id);\n    }\n  }\n\n  selected(id, index) {\n    this.props.selectItinerary(id, index);\n  }\n\n  handleDelete(id) {\n    alert(\"User with id:\" + this.props.id + \" has been deleted from the database\"); // this.props.deleteGroup(id);\n  }\n\n  render() {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.props.groupName)))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.props.date), React.createElement(\"td\", {\n      className: \"scheduleBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(ActivityTable, {\n      activities: this.props.activities,\n      id: this.props.id,\n      index: this.props.index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"edit_button\",\n      onClick: () => this.selected(this.props.id, this.props.index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"delete_button\",\n      id: this.props.id,\n      onClick: () => {\n        if (window.confirm('Are you sure you wish to delete this Group?')) this.handleDelete(this.props.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Delete\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  selectedItinerary: state.itineraryState.selectedItinerary,\n  selectItineraryChanged: state.itineraryState.selectItineraryChanged,\n  itineraryHead: state.itineraryState.itineraryHead\n});\n\nconst condition = authUser => !!authUser;\n\nexport default compose(connect(mapStateToProps, {\n  getItineraries,\n  addItinerary,\n  itineraryAdded,\n  deleteItinerary,\n  selectItinerary,\n  selectItineraryChanging,\n  editItinerary,\n  itineraryChanged\n}), withAuthorization(condition))(ItineraryRow);","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Tables/itineraryTable/itineraryRow.js"],"names":["React","connect","compose","getItineraries","addItinerary","itineraryAdded","deleteItinerary","selectItinerary","selectItineraryChanging","editItinerary","itineraryChanged","withAuthorization","ActivityTable","ItineraryRow","PureComponent","constructor","props","state","selected","show","listShow","showList","tourGuides","leadChaperones","radioSelected","targetList","avaliableTourGuides","avaliableLeadChaperones","assignedTourGuide","assignedLeadChaperone","componentDidMount","componentDidUpdate","selectItineraryChanged","history","push","id","index","handleDelete","alert","render","groupName","date","activities","window","confirm","mapStateToProps","selectedItinerary","itineraryState","itineraryHead","condition","authUser"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport {getItineraries, addItinerary, itineraryAdded, deleteItinerary, selectItinerary, selectItineraryChanging, editItinerary, itineraryChanged} from '../../../Action/itineraryAction'\nimport withAuthorization from '../../Session/withAuthorization';\nimport ActivityTable from \"./activityTable\";\nclass ItineraryRow extends React.PureComponent{\n    constructor(props){\n        super(props);\n        this.state={\n            selected : {}, \n            show:false,\n            listShow:false,\n            showList: \"\",\n            tourGuides:[],\n            leadChaperones:[],\n            radioSelected: \"\",\n            targetList:[],\n            avaliableTourGuides:[],\n            avaliableLeadChaperones:[],\n            assignedTourGuide:{},\n            assignedLeadChaperone:{}\n        }\n    }\n    componentDidMount(){\n\n    }\n    componentDidUpdate(){\n        if(this.props.selectItineraryChanged){\n            this.props.selectItineraryChanging()\n            this.props.history.push('/itinerary/'+this.props.id);  \n        } \n    }\n    selected(id, index){\n        this.props.selectItinerary(id, index);\n    }\n    handleDelete(id){\n        alert(\"User with id:\"+this.props.id+\" has been deleted from the database\");\n        // this.props.deleteGroup(id);\n    }\n    render(){\n        return(\n            <tr>\n                <td><center><h2><b>{this.props.groupName}</b></h2></center></td>\n                <td>{this.props.date}</td>\n                <td className=\"scheduleBox\">{<ActivityTable activities={this.props.activities} id={this.props.id} index={this.props.index}/>}\n                </td>\n                <td>\n                <center><button className=\"edit_button\" onClick={()=>this.selected(this.props.id, this.props.index)}>Edit</button><br/></center>\n                <center><button className=\"delete_button\" id={this.props.id} onClick={() => { if (window.confirm('Are you sure you wish to delete this Group?')) this.handleDelete(this.props.id)}}>Delete</button></center>\n                </td>\n            </tr>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedItinerary : state.itineraryState.selectedItinerary,\n    selectItineraryChanged: state.itineraryState.selectItineraryChanged,\n    itineraryHead: state.itineraryState.itineraryHead\n});\nconst condition = authUser => !!authUser;\nexport default compose(\n    connect(\n      mapStateToProps,\n      {getItineraries, addItinerary, itineraryAdded, deleteItinerary, selectItinerary, selectItineraryChanging, editItinerary, itineraryChanged}\n    ),withAuthorization(condition)\n)(ItineraryRow);"]},"metadata":{},"sourceType":"module"}