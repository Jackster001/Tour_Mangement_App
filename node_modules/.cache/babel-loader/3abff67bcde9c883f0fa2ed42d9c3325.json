{"ast":null,"code":"import _objectSpread from \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { db, auth, storageRef } from \"../components/Firebase\";\n\nconst resetChanged = () => {\n  return {\n    type: \"RESET_CHANGED\"\n  };\n};\n\nconst userResetChanged = () => {\n  return {\n    type: \"USER_RESET_CHANGED\"\n  };\n};\n\nconst userAddedChanged = () => {\n  return {\n    type: \"USER_ADDED\"\n  };\n};\n\nconst getSingleUser = id => {\n  let user = {};\n  let stringId = '' + id + '';\n  return dispatch => {\n    dispatch({\n      type: \"CHANGE_LOADING\"\n    });\n    let docRef = db.collection(\"users\").doc(stringId);\n    docRef.get().then(function (doc) {\n      if (doc.exists) {\n        user = doc.data();\n        user = _objectSpread({}, user, {\n          id\n        });\n      } else {\n        console.log(\"Something went wrong!\");\n      }\n\n      console.log(user);\n      dispatch({\n        type: \"USERS_SELECT\",\n        payload: user,\n        id: id\n      });\n    }).catch(function (error) {\n      console.log(\"Error getting document:\", error);\n    });\n  };\n};\n\nconst getUsers = () => {\n  let data = [];\n  return dispatch => {\n    db.collection(\"users\").get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        let users = doc.data();\n        users = _objectSpread({\n          id: doc.id\n        }, users);\n        data = [users, ...data];\n      });\n      dispatch({\n        type: \"USERS_GET\",\n        payload: data\n      });\n    }).catch(function (error) {\n      console.log(\"Error getting document:\", error);\n    });\n  };\n};\n\nconst addUser = user => {\n  return dispatch => {\n    storageRef.ref(\"user.png\").getDownloadURL().then(url => {\n      let email = user.userName + \"@mail.com\";\n      auth.createUserWithEmailAndPassword(email, user.password).then(response => {\n        db.collection(\"users\").doc(response.user.uid).set({\n          id: response.user.uid,\n          GroupName: user.GroupName,\n          groupPin: user.groupPin,\n          userType: user.userType,\n          userName: user.userName,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          phoneNumber: user.phoneNumber,\n          password: user.password,\n          tourGuide: user.tourGuide,\n          leadChaperone: user.leadChaperone,\n          profilePicture: url,\n          emergencyContact: user.emergencyContact\n        });\n        dispatch({\n          type: 'USER_ADD',\n          payload: user\n        });\n      });\n    }).catch(error => {\n      console.log({\n        error\n      });\n    });\n  };\n};\n\nconst deleteUser = id => {\n  db.collection(\"users\").doc(id).delete().then(function () {\n    console.log(\"Student successfully deleted!\");\n  }).catch(function (error) {\n    console.error(\"Error removing document: \", error);\n  });\n  return {\n    type: \"USER_DELETE\",\n    id: id\n  };\n};\n\nconst setUser = user => {\n  return dispatch => {\n    db.collection(\"users\").doc(user.id).set(user).then(function () {\n      dispatch({\n        type: \"USER_CHANGE_LOADING\"\n      });\n      dispatch({\n        type: \"USER_SET\",\n        payload: user\n      });\n    }).catch(function (error) {\n      console.error(\"Error writing document: \", error);\n    });\n  };\n};\n\nexport { getUsers, addUser, deleteUser, getSingleUser, setUser, userAddedChanged, resetChanged, userResetChanged };","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/Action/userAction.js"],"names":["db","auth","storageRef","resetChanged","type","userResetChanged","userAddedChanged","getSingleUser","id","user","stringId","dispatch","docRef","collection","doc","get","then","exists","data","console","log","payload","catch","error","getUsers","querySnapshot","forEach","users","addUser","ref","getDownloadURL","url","email","userName","createUserWithEmailAndPassword","password","response","uid","set","GroupName","groupPin","userType","firstName","lastName","phoneNumber","tourGuide","leadChaperone","profilePicture","emergencyContact","deleteUser","delete","setUser"],"mappings":"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","sourcesContent":["import {db,auth, storageRef} from \"../components/Firebase\";\nconst resetChanged =() =>{\n    return{\n        type: \"RESET_CHANGED\"\n    }\n}\nconst userResetChanged =() =>{\n    return{\n        type: \"USER_RESET_CHANGED\"\n    }\n}\nconst userAddedChanged =() =>{\n    return{\n        type: \"USER_ADDED\"\n    }\n}\nconst getSingleUser= (id)=>{\n    let user={}\n    let stringId=''+id+'';\n    return (dispatch)=>{\n        dispatch({\n            type: \"CHANGE_LOADING\"\n        })\n        let docRef=db.collection(\"users\").doc(stringId)\n        docRef.get().then(function(doc){\n        if(doc.exists){\n            user=doc.data();\n            user={...user, id}\n        } else{\n            console.log(\"Something went wrong!\")\n        }\n        console.log(user)\n        dispatch({\n            type: \"USERS_SELECT\",\n            payload: user,\n            id: id\n        })\n    }).catch(function(error) {\n        console.log(\"Error getting document:\", error);\n    });\n    }\n}\nconst getUsers = () =>{\n    let data=[];\n    return (dispatch) => {\n        db.collection(\"users\").get().then(function(querySnapshot) {\n            querySnapshot.forEach(function(doc) {\n            let users = doc.data();\n            users= {id:doc.id,...users}\n            data=[users, ...data];\n            })           \n            dispatch({\n                type: \"USERS_GET\",\n                payload: data\n            })\n         })\n         .catch(function(error){\n            console.log(\"Error getting document:\", error);\n         })\n         \n    }\n}\nconst addUser = (user)=>{\n    return(dispatch)=>{\n            storageRef.ref(\"user.png\").getDownloadURL().then(url=>{\n                let email= user.userName + \"@mail.com\"\n                    auth.createUserWithEmailAndPassword(email, user.password)\n                    .then(response=>{\n                    db.collection(\"users\").doc(response.user.uid).set({\n                        id:response.user.uid,\n                        GroupName: user.GroupName,\n                        groupPin: user.groupPin,\n                        userType: user.userType,\n                        userName: user.userName,\n                        firstName: user.firstName,\n                        lastName: user.lastName,\n                        phoneNumber: user.phoneNumber,\n                        password: user.password,\n                        tourGuide: user.tourGuide,\n                        leadChaperone: user.leadChaperone,\n                        profilePicture: url,\n                        emergencyContact: user.emergencyContact\n                        \n                    })\n                    dispatch({\n                        type: 'USER_ADD',\n                        payload: user\n                    })\n                    })\n                }).catch(error => {\n                console.log({ error });\n            })\n    }    \n}\nconst deleteUser = (id) =>{\n    db.collection(\"users\").doc(id).delete().then(function(){\n        console.log(\"Student successfully deleted!\");\n    }).catch(function(error) {\n        console.error(\"Error removing document: \", error);\n    });\n    return{\n        type: \"USER_DELETE\",\n        id: id\n    }\n}\nconst setUser = (user) =>{\n    \n    return(dispatch)=>{\n        db.collection(\"users\").doc(user.id).set(user).then(function() {\n            dispatch({\n                type: \"USER_CHANGE_LOADING\"\n            })\n            dispatch({\n                type:\"USER_SET\",\n                payload: user\n            })\n        })\n        .catch(function(error) {\n            console.error(\"Error writing document: \", error);\n        });\n    } \n}\nexport {getUsers, addUser, deleteUser, getSingleUser, setUser, userAddedChanged, resetChanged, userResetChanged};"]},"metadata":{},"sourceType":"module"}