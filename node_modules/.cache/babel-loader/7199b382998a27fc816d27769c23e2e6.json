{"ast":null,"code":"import _objectSpread from \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Pages/Itinerary_Pages/itinerary_Edit.js\";\nimport React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../../Session';\nimport { editItinerary, itineraryChanged } from '../../../Action/itineraryAction';\n\nclass ItineraryEdit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.itineraryHead.id,\n      groupName: this.props.itineraryHead.groupName,\n      schedule: [...this.props.selectedItinerary.activities],\n      date: this.props.selectedItinerary.date,\n      newScheduleSet: []\n    };\n  }\n\n  componentDidMount() {\n    let date = new Date(this.state.date.seconds * 1000);\n    let timestamp = date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n    this.setState({\n      date: timestamp\n    });\n  }\n\n  onChangeDescription(event, key) {\n    let newDescription = this.state.schedule;\n    newDescription[key].description = event.target.value;\n    this.setState(_objectSpread({}, this.state, {\n      newScheduleSet: newDescription\n    }));\n  }\n\n  addSchedule() {\n    let time = \"12:00:00\";\n    let description = \"\";\n    let scheduleSet = this.state.schedule;\n    scheduleSet.push({\n      time,\n      description\n    });\n    this.setState({\n      schedule: scheduleSet\n    });\n  }\n\n  removeSchedule(key) {\n    let newScheduleSet = this.state.schedule;\n    newScheduleSet.splice(key, 1);\n    this.setState(_objectSpread({}, this.state, {\n      schedule: newScheduleSet\n    }));\n  }\n\n  submit() {\n    console.log(this.state.schedule);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"itinerary_Table_Styles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"editFormHeading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Schedule Management\")), React.createElement(\"form\", {\n      className: \"itinerary_form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"group_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Group Name: \")), React.createElement(\"input\", {\n      value: this.state.groupName,\n      readonly: true,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"ItineraryDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Date: \")), React.createElement(\"input\", {\n      value: this.state.date,\n      readonly: true,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Time\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Remove\")), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.schedule.map((scheduleItem, key) => {\n      let timeObject = Object.assign({}, scheduleItem.time);\n      let time = new Date(timeObject.seconds * 1000);\n      let timestampTime = time.toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: \"2-digit\",\n        second: \"2-digit\"\n      });\n      let hour = \"\" + time.getHours();\n      let minute = \"\" + time.getMinutes();\n\n      if (hour.length == 1) {\n        hour = \"0\" + hour;\n      }\n\n      if (minute.length == 1) {\n        minute = \"0\" + minute;\n      }\n\n      let strTime = \"\" + hour + \":\" + minute + \":00\";\n      if (typeof scheduleItem.time == \"string\") return React.createElement(\"tr\", {\n        className: \"scheduleItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"time\",\n        className: \"currentTime\",\n        value: strTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        defaultValue: this.state.schedule[key].description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: () => this.removeSchedule(key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Remove\")));\n    })))), React.createElement(\"button\", {\n      className: \"scheduleAddButton\",\n      onClick: () => this.addSchedule(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Add Schedule\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"scheduleSubmitButton\",\n      onClick: () => this.submit(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  selectedItinerary: state.itineraryState.selectedItinerary,\n  itineraryHead: state.itineraryState.itineraryHead\n});\n\nconst condition = authUser => !!authUser;\n\nexport default compose(connect(mapStateToProps, {\n  editItinerary,\n  itineraryChanged\n}), withAuthorization(condition))(ItineraryEdit);","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Pages/Itinerary_Pages/itinerary_Edit.js"],"names":["React","connect","compose","withAuthorization","editItinerary","itineraryChanged","ItineraryEdit","Component","constructor","props","state","id","itineraryHead","groupName","schedule","selectedItinerary","activities","date","newScheduleSet","componentDidMount","Date","seconds","timestamp","toLocaleDateString","weekday","year","month","day","setState","onChangeDescription","event","key","newDescription","description","target","value","addSchedule","time","scheduleSet","push","removeSchedule","splice","submit","console","log","render","map","scheduleItem","timeObject","Object","assign","timestampTime","toLocaleTimeString","hour","minute","second","getHours","getMinutes","length","strTime","mapStateToProps","itineraryState","condition","authUser"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,SAAQC,aAAR,EAAuBC,gBAAvB,QAA8C,iCAA9C;;AACA,MAAMC,aAAN,SAA4BN,KAAK,CAACO,SAAlC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,EAAE,EAAC,KAAKF,KAAL,CAAWG,aAAX,CAAyBD,EADrB;AAEPE,MAAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWG,aAAX,CAAyBC,SAF7B;AAGPC,MAAAA,QAAQ,EAAC,CAAC,GAAG,KAAKL,KAAL,CAAWM,iBAAX,CAA6BC,UAAjC,CAHF;AAIPC,MAAAA,IAAI,EAAE,KAAKR,KAAL,CAAWM,iBAAX,CAA6BE,IAJ5B;AAKPC,MAAAA,cAAc,EAAC;AALR,KAAX;AAOH;;AACDC,EAAAA,iBAAiB,GAAE;AACf,QAAIF,IAAI,GAAE,IAAIG,IAAJ,CAAS,KAAKV,KAAL,CAAWO,IAAX,CAAgBI,OAAhB,GAAwB,IAAjC,CAAV;AACA,QAAIC,SAAS,GAAEL,IAAI,CAACM,kBAAL,CAAwB,OAAxB,EAAiC;AAACC,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,IAAI,EAAE,SAAxB;AAAmCC,MAAAA,KAAK,EAAE,MAA1C;AAAkDC,MAAAA,GAAG,EAAE;AAAvD,KAAjC,CAAf;AACA,SAAKC,QAAL,CAAc;AAACX,MAAAA,IAAI,EAACK;AAAN,KAAd;AACH;;AACDO,EAAAA,mBAAmB,CAACC,KAAD,EAAQC,GAAR,EAAY;AAC3B,QAAIC,cAAc,GAAG,KAAKtB,KAAL,CAAWI,QAAhC;AACAkB,IAAAA,cAAc,CAACD,GAAD,CAAd,CAAoBE,WAApB,GAAiCH,KAAK,CAACI,MAAN,CAAaC,KAA9C;AACA,SAAKP,QAAL,mBAAkB,KAAKlB,KAAvB;AAA8BQ,MAAAA,cAAc,EAAEc;AAA9C;AACH;;AACDI,EAAAA,WAAW,GAAE;AACT,QAAIC,IAAI,GAAG,UAAX;AACA,QAAIJ,WAAW,GAAG,EAAlB;AACA,QAAIK,WAAW,GAAE,KAAK5B,KAAL,CAAWI,QAA5B;AACAwB,IAAAA,WAAW,CAACC,IAAZ,CAAiB;AAACF,MAAAA,IAAD;AAAOJ,MAAAA;AAAP,KAAjB;AACA,SAAKL,QAAL,CAAc;AAACd,MAAAA,QAAQ,EAAEwB;AAAX,KAAd;AACH;;AACDE,EAAAA,cAAc,CAACT,GAAD,EAAK;AACf,QAAIb,cAAc,GAAG,KAAKR,KAAL,CAAWI,QAAhC;AACAI,IAAAA,cAAc,CAACuB,MAAf,CAAsBV,GAAtB,EAA2B,CAA3B;AACA,SAAKH,QAAL,mBAAkB,KAAKlB,KAAvB;AAA6BI,MAAAA,QAAQ,EAAEI;AAAvC;AACH;;AACDwB,EAAAA,MAAM,GAAE;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlC,KAAL,CAAWI,QAAvB;AACH;;AACD+B,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADT,EACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADd,EACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADnB,EAEI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAjC,CADJ,EAEI;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA5B,CADJ,EAEI;AAAO,MAAA,KAAK,EAAE,KAAKnC,KAAL,CAAWG,SAAzB;AAAoC,MAAA,QAAQ,MAA5C;AAA6C,MAAA,QAAQ,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAO,MAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA/B,CAHJ,EAII;AAAO,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWO,IAAzB;AAA+B,MAAA,QAAQ,MAAvC;AAAwC,MAAA,QAAQ,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAKS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALT,EAKc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALd,EAKmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALnB,EAKwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALxB,EAK6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAL7B,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKP,KAAL,CAAWI,QAAX,CAAoBgC,GAApB,CAAwB,CAACC,YAAD,EAAehB,GAAf,KAAqB;AAC1C,UAAIiB,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBH,YAAY,CAACV,IAA9B,CAAjB;AACA,UAAIA,IAAI,GAAG,IAAIjB,IAAJ,CAAS4B,UAAU,CAAC3B,OAAX,GAAmB,IAA5B,CAAX;AACA,UAAI8B,aAAa,GAAEd,IAAI,CAACe,kBAAL,CAAwB,OAAxB,EAAiC;AAACC,QAAAA,IAAI,EAAE,SAAP;AAAkBC,QAAAA,MAAM,EAAE,SAA1B;AAAqCC,QAAAA,MAAM,EAAE;AAA7C,OAAjC,CAAnB;AACA,UAAIF,IAAI,GAAE,KAAGhB,IAAI,CAACmB,QAAL,EAAb;AACA,UAAIF,MAAM,GAAG,KAAGjB,IAAI,CAACoB,UAAL,EAAhB;;AACA,UAAGJ,IAAI,CAACK,MAAL,IAAe,CAAlB,EAAoB;AAChBL,QAAAA,IAAI,GAAC,MAAIA,IAAT;AACH;;AACD,UAAGC,MAAM,CAACI,MAAP,IAAiB,CAApB,EAAsB;AAClBJ,QAAAA,MAAM,GAAC,MAAIA,MAAX;AACH;;AACD,UAAIK,OAAO,GAAC,KAAGN,IAAH,GAAQ,GAAR,GAAYC,MAAZ,GAAmB,KAA/B;AAEA,UAAG,OAAOP,YAAY,CAACV,IAApB,IAA4B,QAA/B,EAEA,OACI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,aAA7B;AAA2C,QAAA,KAAK,EAAEsB,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAU,QAAA,YAAY,EAAE,KAAKjD,KAAL,CAAWI,QAAX,CAAoBiB,GAApB,EAAyBE,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAK,QAAA,OAAO,EAAE,MAAI,KAAKO,cAAL,CAAoBT,GAApB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAJ,CAHJ,CADJ;AAQH,KAxBA,CADL,CANJ,CANJ,CAFJ,EA2CI;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAsC,MAAA,OAAO,EAAE,MAAI,KAAKK,WAAL,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA3CJ,EA4CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5CJ,EA4CS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5CT,EA6CI;AAAQ,MAAA,SAAS,EAAC,sBAAlB;AAAyC,MAAA,OAAO,EAAE,MAAI,KAAKM,MAAL,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7CJ,CAFJ,CADJ;AAoDH;;AAzFsC;;AA2F3C,MAAMkB,eAAe,GAAGlD,KAAK,KAAK;AAC9BK,EAAAA,iBAAiB,EAAGL,KAAK,CAACmD,cAAN,CAAqB9C,iBADX;AAE9BH,EAAAA,aAAa,EAAEF,KAAK,CAACmD,cAAN,CAAqBjD;AAFN,CAAL,CAA7B;;AAIA,MAAMkD,SAAS,GAAGC,QAAQ,IAAI,CAAC,CAACA,QAAhC;;AACA,eAAe7D,OAAO,CAClBD,OAAO,CACL2D,eADK,EAEL;AAACxD,EAAAA,aAAD;AAAgBC,EAAAA;AAAhB,CAFK,CADW,EAIhBF,iBAAiB,CAAC2D,SAAD,CAJD,CAAP,CAKbxD,aALa,CAAf","sourcesContent":["import React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../../Session';\nimport {editItinerary, itineraryChanged} from '../../../Action/itineraryAction';\nclass ItineraryEdit extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            id:this.props.itineraryHead.id,\n            groupName: this.props.itineraryHead.groupName,\n            schedule:[...this.props.selectedItinerary.activities],\n            date: this.props.selectedItinerary.date,\n            newScheduleSet:[]\n        }\n    }\n    componentDidMount(){\n        let date= new Date(this.state.date.seconds*1000)\n        let timestamp= date.toLocaleDateString('en-US', {weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'})\n        this.setState({date:timestamp})\n    }\n    onChangeDescription(event, key){\n        let newDescription = this.state.schedule\n        newDescription[key].description= event.target.value;\n        this.setState({...this.state, newScheduleSet: newDescription});\n    }\n    addSchedule(){\n        let time = \"12:00:00\";\n        let description = \"\";\n        let scheduleSet= this.state.schedule\n        scheduleSet.push({time, description});\n        this.setState({schedule: scheduleSet})\n    }\n    removeSchedule(key){\n        let newScheduleSet = this.state.schedule;\n        newScheduleSet.splice(key, 1);\n        this.setState({...this.state,schedule: newScheduleSet})\n    }\n    submit(){\n        console.log(this.state.schedule)\n    }\n    render(){\n        return(\n            <div>\n                <br/><br/><br/><br/>\n                <div className=\"itinerary_Table_Styles\">\n                    <div className=\"editFormHeading\"><h1>Schedule Management</h1></div>\n                    <form className=\"itinerary_form\">\n                        <label htmlFor=\"group_name\"><b>Group Name: </b></label>\n                        <input value={this.state.groupName} readonly disabled/>\n                        <label htmlFor=\"ItineraryDate\"><b>Date: </b></label>\n                        <input value={this.state.date} readonly disabled></input>\n                        <br/><br/><br/><hr/><br/><br/>\n                        <table>\n                            <thead>\n                                <th>Time</th>\n                                <th>Description</th>\n                                <th>Remove</th>\n                            </thead>\n                            <tbody>\n                                {this.state.schedule.map((scheduleItem, key)=>{\n                                    let timeObject = Object.assign({},scheduleItem.time);\n                                    let time = new Date(timeObject.seconds*1000)\n                                    let timestampTime= time.toLocaleTimeString('en-US', {hour: '2-digit', minute: \"2-digit\", second: \"2-digit\"})\n                                    let hour= \"\"+time.getHours();\n                                    let minute = \"\"+time.getMinutes();\n                                    if(hour.length == 1){\n                                        hour=\"0\"+hour;\n                                    }\n                                    if(minute.length == 1){\n                                        minute=\"0\"+minute;\n                                    }\n                                    let strTime=\"\"+hour+\":\"+minute+\":00\"\n\n                                    if(typeof scheduleItem.time == \"string\")\n                                    \n                                    return (\n                                        <tr className=\"scheduleItem\">\n                                            <td><input type=\"time\" className=\"currentTime\" value={strTime}/></td>\n                                            <td><textarea defaultValue={this.state.schedule[key].description} ></textarea></td>\n                                            <td><div onClick={()=>this.removeSchedule(key)}>Remove</div></td>\n                                        </tr>\n                                        \n                                    )\n                                })}\n                            </tbody>\n                        </table>\n                    </form>\n                    <button className=\"scheduleAddButton\" onClick={()=>this.addSchedule()}>Add Schedule</button>\n                    <br/><br/>\n                    <button className=\"scheduleSubmitButton\" onClick={()=>this.submit()}>Submit</button>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => ({\n    selectedItinerary : state.itineraryState.selectedItinerary,\n    itineraryHead: state.itineraryState.itineraryHead\n});\nconst condition = authUser => !!authUser;\nexport default compose(\n    connect(\n      mapStateToProps,\n      {editItinerary, itineraryChanged}\n    ),withAuthorization(condition)\n)(ItineraryEdit);"]},"metadata":{},"sourceType":"module"}