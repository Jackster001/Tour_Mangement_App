{"ast":null,"code":"import _objectSpread from \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Pages/Alarm_Pages/add_Alarm.js\";\nimport React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../../Session';\nimport { addAlarm, alarmAdded } from '../../../Action/alarmAction';\nimport * as ROUTES from '../../../constants/routes';\n\nclass Add_Alarm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      groupName: \"\",\n      message: \"\",\n      date: \"\",\n      time: \"\"\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.props.alarmAdding) {\n      this.props.alarmAdded();\n      this.props.history.push(ROUTES.ALARMS);\n    }\n  }\n\n  onChangeGroupName(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      groupName: event.target.value\n    }));\n  }\n\n  onChangeAlarmMessage(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      message: event.target.value\n    }));\n  }\n\n  onChangeDate(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      date: event.target.value\n    }));\n  }\n\n  onChangeTime(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      time: event.target.value\n    }));\n  }\n\n  addAlarm() {\n    //getting the timestamp\n    let myDate = this.state.date;\n    myDate = myDate.split(\"-\");\n    let newDate = myDate[1] + \"/\" + myDate[2] + \"/\" + myDate[0];\n    let temp = newDate + \" \" + this.state.time;\n    let date = new Date(temp); //getting the group pin \n\n    let groupName = this.state.groupName;\n    let group = Object.assign([{}]);\n    group = this.props.groups.filter(function (group) {\n      return group.name == groupName;\n    });\n    let selectedGroup = Object.assign({}, group[0]);\n    let groupPin = selectedGroup.pin; //setting up new alarm\n\n    let newAlarm = {\n      groupPin: groupPin,\n      timestamp: date,\n      title: this.state.message //called alarm action to add to firebase\n\n    };\n    this.props.addAlarm(newAlarm);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"add_Table_Styles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"addFormHeading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Alarm Management\")), React.createElement(\"form\", {\n      className: \"add_form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Alarm Details\")), React.createElement(\"label\", {\n      htmlFor: \"group_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Group Name: \")), React.createElement(\"select\", {\n      name: \"group_name\",\n      onChange: this.onChangeGroupName.bind(this),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      defaultValue: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \" -- select an option -- \"), this.props.groups.map(function (group) {\n      return React.createElement(\"option\", {\n        value: group.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, group.name);\n    })), React.createElement(\"label\", {\n      htmlFor: \"Alarm_Date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Set Date: \")), React.createElement(\"input\", {\n      type: \"date\",\n      name: \"Alarm_Date\",\n      onChange: this.onChangeDate.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"group_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Set Time: \")), React.createElement(\"input\", {\n      type: \"time\",\n      onChange: this.onChangeTime.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"formTextField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"group_info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Alarm Message: \")), React.createElement(\"textarea\", {\n      className: \"addGroupTextArea\",\n      name: \"group_info\",\n      onChange: this.onChangeAlarmMessage.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"Submit_Button\",\n      onClick: () => this.addAlarm(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Add Alarm\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  groups: state.groupState.groups,\n  alarms: state.alarmState.alarms,\n  alarmAdding: state.alarmState.alarmAdding\n});\n\nconst condition = authUser => !!authUser;\n\nexport default compose(connect(mapStateToProps, {\n  addAlarm,\n  alarmAdded\n}), withAuthorization(condition))(Add_Alarm);","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Pages/Alarm_Pages/add_Alarm.js"],"names":["React","connect","compose","withAuthorization","addAlarm","alarmAdded","ROUTES","Add_Alarm","Component","constructor","props","state","groupName","message","date","time","componentDidUpdate","alarmAdding","history","push","ALARMS","onChangeGroupName","event","setState","target","value","onChangeAlarmMessage","onChangeDate","onChangeTime","myDate","split","newDate","temp","Date","group","Object","assign","groups","filter","name","selectedGroup","groupPin","pin","newAlarm","timestamp","title","render","bind","map","mapStateToProps","groupState","alarms","alarmState","condition","authUser"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../../Session';\nimport {addAlarm, alarmAdded} from '../../../Action/alarmAction'\nimport * as ROUTES from '../../../constants/routes';\n\nclass Add_Alarm extends React.Component {\n   constructor(props){\n      super(props);\n      this.state={\n            groupName: \"\",\n            message: \"\",\n            date: \"\",\n            time:\"\"\n         }\n    }\n    componentDidUpdate(){\n        if(this.props.alarmAdding){\n            this.props.alarmAdded()\n                this.props.history.push(ROUTES.ALARMS)\n        }\n    }\n    onChangeGroupName(event){\n        return (\n            this.setState({...this.state, groupName: event.target.value})\n        )\n    }\n    onChangeAlarmMessage(event){\n        return (\n            this.setState({...this.state, message: event.target.value})\n        )\n    }\n    onChangeDate(event){\n        return (\n            this.setState({...this.state, date: event.target.value})\n        )\n    }\n    onChangeTime(event){\n        return (\n            this.setState({...this.state, time: event.target.value})\n        )\n    }\n    addAlarm(){\n        //getting the timestamp\n        let myDate=this.state.date;\n        myDate=myDate.split(\"-\");\n        let newDate=myDate[1]+\"/\"+myDate[2]+\"/\"+myDate[0];\n        let temp= newDate + \" \" + this.state.time; \n        let date= new Date(temp)\n\n        //getting the group pin \n        let groupName= this.state.groupName;\n        let group=Object.assign([{}])\n        group= this.props.groups.filter(function(group){\n            return (group.name == groupName)\n        })\n        let selectedGroup=Object.assign({},group[0])\n        let groupPin=selectedGroup.pin;\n\n        //setting up new alarm\n        let newAlarm= {\n            groupPin: groupPin,\n            timestamp: date,\n            title: this.state.message\n        }\n\n        //called alarm action to add to firebase\n        this.props.addAlarm(newAlarm)\n    }\n    render() {\n        return (\n            <div>\n                <br/><br/><br/><br/>\n\n                <div className=\"add_Table_Styles\">\n                <div className=\"addFormHeading\"><h1>Alarm Management</h1></div>\n                <form className=\"add_form\">\n                    <center><h2>Alarm Details</h2></center>\n                    <label htmlFor=\"group_name\"><b>Group Name: </b></label>\n                    <select name=\"group_name\" onChange={this.onChangeGroupName.bind(this)} required>\n                    <option disabled selected defaultValue> -- select an option -- </option>\n                        {this.props.groups.map(function(group){\n                            return (<option value={group.name}>{group.name}</option>)\n                        })}\n                    </select>\n                    <label htmlFor=\"Alarm_Date\"><b>Set Date: </b></label>\n                    <input type=\"date\" name=\"Alarm_Date\" onChange={this.onChangeDate.bind(this)}></input>\n                    <label htmlFor=\"group_name\"><b>Set Time: </b></label>\n                    <input type=\"time\" onChange={this.onChangeTime.bind(this)}></input>\n                    <div className=\"formTextField\"><label htmlFor=\"group_info\"><b>Alarm Message: </b></label>\n                    <textarea className=\"addGroupTextArea\" name=\"group_info\" onChange={this.onChangeAlarmMessage.bind(this)}></textarea></div><br/><br/>\n                    <button type=\"button\" className=\"Submit_Button\" onClick={()=>this.addAlarm()}>Add Alarm</button>\n                </form>\n            </div>\n            </div>\n        );\n    }\n    }\nconst mapStateToProps = state => ({\n    groups: state.groupState.groups,\n    alarms: state.alarmState.alarms,\n    alarmAdding: state.alarmState.alarmAdding\n });\nconst condition = authUser => !!authUser;\nexport default compose(\n   connect(\n     mapStateToProps,\n     {addAlarm, alarmAdded}\n   ),withAuthorization(condition)\n)(Add_Alarm);"]},"metadata":{},"sourceType":"module"}