{"ast":null,"code":"import _objectSpread from \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst INITIAL_STATE = {\n  lostNotifications: [{}],\n  gettingNotifications: false\n};\n\nfunction lostReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'LOST_GET':\n      {\n        return _objectSpread({}, state, {\n          lostNotifications: action.payload,\n          gettingNotifications: true\n        });\n      }\n\n    case 'GETTING_NOTIFICATIONS':\n      {\n        return _objectSpread({}, state, {\n          gettingNotifications: false\n        });\n      }\n\n    case \"LOST_DELETE\":\n      {\n        const newlostNotifications = Object.assign([], _objectSpread({}, state.lostNotifications));\n        const index = state.lostNotifications.findIndex(lostNotification => {\n          return lostNotification.id === action.id;\n        });\n        newlostNotifications.splice(index, 1);\n        return _objectSpread({}, state, {\n          lostNotifications: newlostNotifications\n        });\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default lostReducer;","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/reducers/lost.js"],"names":["INITIAL_STATE","lostNotifications","gettingNotifications","lostReducer","state","action","type","payload","newlostNotifications","Object","assign","index","findIndex","lostNotification","id","splice"],"mappings":";AAAA,MAAMA,aAAa,GAAG;AAClBC,EAAAA,iBAAiB,EAAE,CAAC,EAAD,CADD;AAElBC,EAAAA,oBAAoB,EAAE;AAFJ,CAAtB;;AAIA,SAASC,WAAT,CAAqBC,KAAK,GAAGJ,aAA7B,EAA4CK,MAA5C,EAAoD;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AAAiB;AACf,iCAAWF,KAAX;AAAkBH,UAAAA,iBAAiB,EAAEI,MAAM,CAACE,OAA5C;AAAsDL,UAAAA,oBAAoB,EAAE;AAA5E;AACD;;AACD,SAAK,uBAAL;AAA6B;AAC3B,iCAAWE,KAAX;AAAkBF,UAAAA,oBAAoB,EAAE;AAAxC;AACD;;AACD,SAAK,aAAL;AAAoB;AAClB,cAAMM,oBAAoB,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,oBAAqBN,KAAK,CAACH,iBAA3B,EAA7B;AACA,cAAMU,KAAK,GAAEP,KAAK,CAACH,iBAAN,CAAwBW,SAAxB,CAAkCC,gBAAgB,IAAI;AAAC,iBAAOA,gBAAgB,CAACC,EAAjB,KAAwBT,MAAM,CAACS,EAAtC;AAAyC,SAAhG,CAAb;AACAN,QAAAA,oBAAoB,CAACO,MAArB,CAA4BJ,KAA5B,EAAmC,CAAnC;AACA,iCAAWP,KAAX;AAAkBH,UAAAA,iBAAiB,EAAEO;AAArC;AACD;;AACD;AACE,aAAOJ,KAAP;AAdJ;AAgBD;;AAEH,eAAeD,WAAf","sourcesContent":["const INITIAL_STATE = {\n    lostNotifications: [{}],\n    gettingNotifications: false\n};\nfunction lostReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {\n      case 'LOST_GET': {\n        return {...state, lostNotifications: action.payload , gettingNotifications: true};\n      }\n      case 'GETTING_NOTIFICATIONS':{\n        return {...state, gettingNotifications: false}\n      }\n      case \"LOST_DELETE\": {\n        const newlostNotifications = Object.assign([],{...state.lostNotifications});\n        const index= state.lostNotifications.findIndex(lostNotification => {return lostNotification.id === action.id})\n        newlostNotifications.splice(index, 1)\n        return {...state, lostNotifications: newlostNotifications};\n      }\n      default:\n        return state;\n    }\n  }\n  \nexport default lostReducer;"]},"metadata":{},"sourceType":"module"}