{"ast":null,"code":"import _objectSpread from \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { db } from \"../components/Firebase\";\n\nconst selectNotification = id => {\n  let notificationData = {};\n  let stringId = '' + id + '';\n  return dispatch => {\n    let docRef = db.collection(\"notifications\").doc(stringId);\n    docRef.get().then(function (doc) {\n      if (doc.exists) {\n        let notification = doc.data();\n        notificationData = _objectSpread({}, notification, {\n          id\n        });\n      } else {\n        console.log(\"Something went wrong!\");\n      }\n\n      dispatch({\n        type: \"NOTIFICATION_SELECT\",\n        payload: notificationData,\n        id: id\n      });\n    }).catch(function (error) {\n      console.log(\"Error getting document:\", error);\n    });\n  };\n};\n\nconst selectNotificationChanging = () => {\n  return {\n    type: \"NOTIFICATION_SELECT_CHANGED\"\n  };\n};\n\nconst getNotifications = () => {\n  let data = Object.assign([]);\n  return dispatch => {\n    db.collection(\"notifications\").get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        let notification = doc.data();\n        notification = _objectSpread({\n          id: doc.id\n        }, notification);\n        data = [notification, ...data];\n        data.sort(function (a, b) {\n          return a.timestamp.seconds - b.timestamp.seconds;\n        }).reverse();\n      });\n      dispatch({\n        type: \"NOTIFICATIONS_GET\",\n        payload: data\n      });\n    }).catch(function (error) {\n      console.log(\"Error getting document:\", error);\n    });\n  };\n};\n\nconst recievedNotifications = () => {\n  return {\n    type: \"NOTIFICATIONS_GETTING\"\n  };\n};\n\nconst sendNotification = newNotification => {\n  return dispatch => {\n    db.collection(\"notifications\").add(newNotification).then(function () {\n      dispatch({\n        type: 'NOTIFICATION_SEND',\n        payload: newNotification\n      });\n    }).catch(error => {\n      console.log({\n        error\n      });\n    });\n  };\n};\n\nconst notificationSent = () => {\n  return {\n    type: 'NOTIFICATION_SENT'\n  };\n};\n\nconst deleteNotification = id => {\n  db.collection(\"notifications\").doc(id).delete().then(function () {\n    console.log(\"Notification successfully deleted!\");\n  }).catch(function (error) {\n    console.error(\"Error removing document: \", error);\n  });\n  return {\n    type: \"NOTIFICATION_DELETE\",\n    id: id\n  };\n};\n\nconst editNotification = notification => {\n  return dispatch => {\n    db.collection(\"notifications\").doc(notification.id).set(notification).then(function () {\n      dispatch({\n        type: \"EDIT_NOTIFICATION\",\n        payload: notification\n      });\n    }).catch(function (error) {\n      console.error(\"Error writing document: \", error);\n    });\n  };\n};\n\nconst notificationChanged = () => {\n  return {\n    type: \"NOTIFICATION_CHANGED\"\n  };\n};\n\nexport { getNotifications, sendNotification, notificationSent, deleteNotification, selectNotification, selectNotificationChanging, editNotification, notificationChanged, recievedNotifications };","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/Action/notificationAction.js"],"names":["db","selectNotification","id","notificationData","stringId","dispatch","docRef","collection","doc","get","then","exists","notification","data","console","log","type","payload","catch","error","selectNotificationChanging","getNotifications","Object","assign","querySnapshot","forEach","sort","a","b","timestamp","seconds","reverse","recievedNotifications","sendNotification","newNotification","add","notificationSent","deleteNotification","delete","editNotification","set","notificationChanged"],"mappings":"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","sourcesContent":["import {db} from \"../components/Firebase\";\n\nconst selectNotification= (id)=>{\n    let notificationData={}\n    let stringId=''+id+'';\n    return (dispatch)=>{\n        let docRef=db.collection(\"notifications\").doc(stringId)\n        docRef.get().then(function(doc){\n        if(doc.exists){\n            let notification=doc.data();\n            notificationData={...notification, id}\n        } else{\n            console.log(\"Something went wrong!\")\n        }\n        dispatch({\n            type: \"NOTIFICATION_SELECT\",\n            payload: notificationData,\n            id: id\n        })\n    }).catch(function(error) {\n        console.log(\"Error getting document:\", error);\n    });\n    }\n}\nconst selectNotificationChanging=()=>{\n    return{\n        type:\"NOTIFICATION_SELECT_CHANGED\"\n    }\n}\nconst getNotifications = () =>{\n    let data=Object.assign([])\n    return (dispatch) => {\n        db.collection(\"notifications\").get().then(function(querySnapshot) {\n            querySnapshot.forEach(function(doc) {\n            let notification = doc.data();\n            notification = {id: doc.id, ...notification}\n            data=[notification, ...data]\n            data.sort(function(a,b){\n                return  a.timestamp.seconds - b.timestamp.seconds\n            }).reverse();\n            })           \n            dispatch({\n                type: \"NOTIFICATIONS_GET\",\n                payload: data\n            })\n         })\n         .catch(function(error){\n            console.log(\"Error getting document:\", error);\n         })\n    }\n}\nconst recievedNotifications = () =>{\n    return {\n        type: \"NOTIFICATIONS_GETTING\"\n    }\n}\nconst sendNotification = (newNotification)=>{\n    return(dispatch)=>{\n        db.collection(\"notifications\").add(newNotification).then(function(){\n            dispatch({\n                type: 'NOTIFICATION_SEND',\n                payload: newNotification\n            })\n        }).catch(error => {\n            console.log({ error });\n        });\n    }\n}\nconst notificationSent=()=>{\n    return {\n        type: 'NOTIFICATION_SENT'\n    }\n}\nconst deleteNotification = (id) =>{\n    db.collection(\"notifications\").doc(id).delete().then(function(){\n        console.log(\"Notification successfully deleted!\");\n    }).catch(function(error) {\n        console.error(\"Error removing document: \", error);\n    });\n    return{\n        type: \"NOTIFICATION_DELETE\",\n        id: id\n    }\n}\nconst editNotification = (notification) =>{\n    return(dispatch)=>{\n        db.collection(\"notifications\").doc(notification.id).set(notification).then(function() {\n            dispatch({\n                type:\"EDIT_NOTIFICATION\",\n                payload: notification\n            })\n        })\n        .catch(function(error) {\n            console.error(\"Error writing document: \", error);\n        });\n    } \n}\nconst notificationChanged=()=>{\n    return{\n        type: \"NOTIFICATION_CHANGED\"\n    }\n}\nexport {getNotifications, sendNotification, notificationSent, deleteNotification, selectNotification, selectNotificationChanging, editNotification, notificationChanged, recievedNotifications}"]},"metadata":{},"sourceType":"module"}