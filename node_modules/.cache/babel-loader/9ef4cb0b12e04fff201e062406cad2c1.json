{"ast":null,"code":"import _objectSpread from \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Tables/userTable/userTable.js\";\nimport React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport UserRow from \"./userRow\";\nimport { userAddedChanged, recievingUsers, getUsers } from '../../../Action';\nimport { CSVLink } from 'react-csv';\nimport { DeleteModal } from './delete_modal';\n\nclass UserTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showModal = () => {\n      this.setState(_objectSpread({}, this.state, {\n        show: true\n      }));\n    };\n\n    this.hideModal = () => {\n      this.setState(_objectSpread({}, this.state, {\n        show: false\n      }));\n    };\n\n    this.state = {\n      userList: this.props.users,\n      targetList: this.props.users,\n      csvFormat: [{}],\n      show: false,\n      groupName: \"\",\n      userType: \"\"\n    };\n  }\n\n  onChangeGroupName(event) {\n    let filteredUsers = this.props.users.filter(user => {\n      return user.groupName === event.target.value;\n    });\n    this.setState({\n      userList: filteredUsers,\n      targetList: filteredUsers,\n      groupName: event.target.value\n    });\n  }\n\n  onChangeUserType(event) {\n    let filteredUsers = this.state.userList.filter(user => {\n      return user.userType === event.target.value;\n    });\n    this.setState({\n      targetList: filteredUsers,\n      userType: event.target.value\n    });\n  }\n\n  resetUserList() {\n    this.setState({\n      userList: this.props.users,\n      targetList: this.props.users\n    });\n    document.getElementById(\"user_type\").value = \"User Type\";\n    document.getElementById(\"group_name\").value = \"Group\";\n  }\n\n  downloadCSV(users) {\n    let csvFormat = [{}];\n    users.map(function (user, i) {\n      csvFormat[i] = {\n        Group: user.GroupName,\n        Pin: user.groupPin,\n        User_Type: user.userType,\n        Username: user.userName,\n        First_Name: user.firstName,\n        Last_Name: user.lastName,\n        Phone_Number: user.phoneNumber,\n        Tour_Guide: user.tourGuide.firstName,\n        Lead_Chaperone: user.leadChaperone.firstName,\n        Emergency_Contact_Name: user.emergencyContact.name,\n        Relationship: user.emergencyContact.relationship,\n        Emergrancy_Contact_Number: user.emergencyContact.number\n      };\n    });\n    this.setState({\n      csvFormat: csvFormat\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"basicTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"filterBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      id: \"group_name\",\n      name: \"group_name\",\n      onChange: this.onChangeGroupName.bind(this),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      defaultValue: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Group\"), this.props.groups.map(function (group) {\n      return React.createElement(\"option\", {\n        value: group.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, group.name);\n    })), React.createElement(\"select\", {\n      id: \"user_type\",\n      name: \"user_type\",\n      onChange: this.onChangeUserType.bind(this),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      defaultValue: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"User Type\"), React.createElement(\"option\", {\n      value: \"Student\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Student\"), React.createElement(\"option\", {\n      value: \"Director\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Director\"), React.createElement(\"option\", {\n      value: \"Tour Guide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Tour Guide\"), React.createElement(\"option\", {\n      value: \"Lead Chaperone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Lead Chaperone\"), React.createElement(\"option\", {\n      value: \"Parent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Parent\"), \"})}\"), React.createElement(\"button\", {\n      className: \"resetFilterButton\",\n      onClick: () => this.resetUserList(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Reset\"), React.createElement(CSVLink, {\n      id: \"csv\",\n      data: this.state.csvFormat,\n      onClick: () => this.downloadCSV(this.state.targetList),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"downloadCSV\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Download CSV\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(\"table\", {\n      className: \"table1 table-dark\",\n      border: \"1\",\n      cellSpacing: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"TableHead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"User Type\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Group Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Details\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Emergency Contact\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Profile Picture\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Tour Guide\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Chaperone\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Edit\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.state.targetList.map(function (user, i) {\n      let data = Object.assign({}, user.emergencyContact);\n      let tourGuide = Object.assign({}, user.tourGuide);\n      let leadChaperone = Object.assign({}, user.leadChaperone);\n      return React.createElement(UserRow, {\n        key: i,\n        id: user.id,\n        Group_Type: user.userType,\n        Group_Name: user.groupName,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        phoneNumber: user.phoneNumber,\n        emergencyName: data.name,\n        emergencyNumber: data.phoneNumber,\n        emergencyRelationship: data.relationship,\n        tourGuideFirstName: tourGuide.firstName,\n        tourGuideLastName: tourGuide.lastName,\n        leadChaperoneFirstName: leadChaperone.firstName,\n        leadChaperoneLastName: leadChaperone.lastName,\n        profilePicture: user.profilePicture,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      });\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  users: state.userState.users,\n  userAdded: state.userState.userAdded,\n  groups: state.groupState.groups,\n  gettingUsers: state.userState.gettingUsers\n});\n\nexport default compose(connect(mapStateToProps, {\n  userAddedChanged,\n  recievingUsers,\n  getUsers\n}))(UserTable);","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Tables/userTable/userTable.js"],"names":["React","connect","compose","UserRow","userAddedChanged","recievingUsers","getUsers","CSVLink","DeleteModal","UserTable","Component","constructor","props","showModal","setState","state","show","hideModal","userList","users","targetList","csvFormat","groupName","userType","onChangeGroupName","event","filteredUsers","filter","user","target","value","onChangeUserType","resetUserList","document","getElementById","downloadCSV","map","i","Group","GroupName","Pin","groupPin","User_Type","Username","userName","First_Name","firstName","Last_Name","lastName","Phone_Number","phoneNumber","Tour_Guide","tourGuide","Lead_Chaperone","leadChaperone","Emergency_Contact_Name","emergencyContact","name","Relationship","relationship","Emergrancy_Contact_Number","number","render","bind","groups","group","data","Object","assign","id","profilePicture","mapStateToProps","userState","userAdded","groupState","gettingUsers"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport UserRow from \"./userRow\"\nimport {userAddedChanged, recievingUsers,getUsers} from '../../../Action'\nimport {CSVLink } from 'react-csv';\nimport {DeleteModal} from './delete_modal'\nclass UserTable extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      userList: this.props.users,\n      targetList: this.props.users,\n      csvFormat:[{}],\n      show: false,\n      groupName: \"\",\n      userType: \"\"\n      \n    }\n  }\n  onChangeGroupName (event){\n    let filteredUsers= this.props.users.filter(user=>{\n      return user.groupName === event.target.value\n    })\n    this.setState({userList: filteredUsers, targetList: filteredUsers, groupName: event.target.value})\n  }\n  onChangeUserType (event){\n    let filteredUsers= this.state.userList.filter(user=>{\n      return user.userType === event.target.value\n    })\n    this.setState({targetList: filteredUsers, userType:event.target.value})\n  }\n  resetUserList(){\n    this.setState({userList: this.props.users, targetList: this.props.users})\n    document.getElementById(\"user_type\").value= \"User Type\";\n    document.getElementById(\"group_name\").value= \"Group\";\n  }\n  downloadCSV(users){\n    let csvFormat= [{}]\n    users.map(function(user,i){\n      csvFormat[i]={\n        Group: user.GroupName,\n        Pin: user.groupPin,\n        User_Type: user.userType,\n        Username: user.userName,\n        First_Name: user.firstName,\n        Last_Name: user.lastName,\n        Phone_Number: user.phoneNumber,\n        Tour_Guide: user.tourGuide.firstName,\n        Lead_Chaperone: user.leadChaperone.firstName,\n        Emergency_Contact_Name: user.emergencyContact.name,\n        Relationship: user.emergencyContact.relationship,\n        Emergrancy_Contact_Number : user.emergencyContact.number\n      }\n    })\n    this.setState({csvFormat: csvFormat})\n  }\n  showModal = () => {\n    this.setState({...this.state, show: true})\n  };\n  hideModal = () => {\n    this.setState({...this.state, show: false})\n  };\n  render() {\n      return (\n          <div className=\"basicTable\">\n            <div className=\"filterBox\">\n            <select id=\"group_name\" name=\"group_name\" onChange={this.onChangeGroupName.bind(this)} required>\n              <option disabled selected defaultValue>Group</option>\n                  {this.props.groups.map(function(group){\n                    return (<option value={group.name}>{group.name}</option>)\n              })}\n            </select>\n            <select id=\"user_type\" name=\"user_type\" onChange={this.onChangeUserType.bind(this)} required>\n              <option disabled selected defaultValue>User Type</option>\n                     <option value=\"Student\">Student</option>\n                     <option value=\"Director\">Director</option>\n                     <option value=\"Tour Guide\">Tour Guide</option>\n                     <option value=\"Lead Chaperone\">Lead Chaperone</option>\n                     <option value=\"Parent\">Parent</option>\n              })}\n            </select>\n            <button className=\"resetFilterButton\" onClick={()=>this.resetUserList()}>Reset</button>\n            <CSVLink id=\"csv\" data={this.state.csvFormat} onClick={()=>this.downloadCSV(this.state.targetList)}><button className=\"downloadCSV\">Download CSV</button></CSVLink>\n            <br/><br/>\n            </div>\n            <table className=\"table1 table-dark\" border=\"1\" cellSpacing=\"0\">\n             <thead className=\"TableHead\">\n               <tr>\n                <th>User Type</th>\n                <th>Group Name</th>\n                <th>Details</th>\n                <th>Emergency Contact</th>\n                <th>Profile Picture</th>\n                <th>Tour Guide</th>\n                <th>Chaperone</th>\n                <th>Edit</th>\n               </tr>\n             </thead>\n             <tbody>\n              { this.state.targetList.map(function(user, i){\n                let data= Object.assign({},user.emergencyContact)\n                let tourGuide =Object.assign({}, user.tourGuide)\n                let leadChaperone= Object.assign({}, user.leadChaperone)\n                return(<UserRow key={i}\n                  id={user.id} \n                  Group_Type={user.userType}\n                  Group_Name={user.groupName}\n                  firstName={user.firstName}\n                  lastName={user.lastName}\n                  phoneNumber={user.phoneNumber}\n                  emergencyName={data.name}\n                  emergencyNumber={data.phoneNumber}\n                  emergencyRelationship={data.relationship}\n                  tourGuideFirstName={tourGuide.firstName}\n                  tourGuideLastName={tourGuide.lastName}\n                  leadChaperoneFirstName={leadChaperone.firstName}\n                  leadChaperoneLastName={leadChaperone.lastName}\n                  profilePicture={user.profilePicture}\n                  />)\n                })}\n              </tbody>\n            </table>\n         </div>\n      );\n   }\n}\nconst mapStateToProps = state => ({\n  users: state.userState.users,\n  userAdded: state.userState.userAdded,\n  groups: state.groupState.groups,\n  gettingUsers: state.userState.gettingUsers\n});\n \nexport default compose(\n   connect(\n     mapStateToProps,\n     {userAddedChanged, recievingUsers, getUsers}\n   ),\n)(UserTable);"]},"metadata":{},"sourceType":"module"}