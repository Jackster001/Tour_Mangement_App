{"ast":null,"code":"import _objectSpread from \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Pages/Itinerary_Pages/itinerary_Edit.js\";\nimport React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../../Session';\nimport { editItinerary, itineraryChanged } from '../../../Action/itineraryAction';\n\nclass ItineraryEdit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.itineraryHead.id,\n      groupName: this.props.itineraryHead.groupName,\n      schedule: [],\n      date: this.props.selectedItinerary.date,\n      newScheduleSet: [],\n      length: this.props.selectedItinerary.length\n    };\n  }\n\n  componentDidMount() {\n    let date = new Date(this.state.date.seconds * 1000);\n    this.setState({\n      date: date\n    });\n    let tempSchedule = this.props.selectedItinerary.activities;\n    let tempArr = [];\n\n    for (let i = 0; i < this.state.length; i++) {\n      let time = tempSchedule[i].time;\n      tempSchedule[i].time = time;\n      tempArr.push(tempSchedule[i]);\n    }\n\n    console.log(tempArr);\n    this.setState({\n      schedule: tempArr\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.props.itineraryChanging) {\n      this.props.itineraryChanged();\n      this.props.history.push('/itineraries');\n    }\n  }\n\n  onChangeDescription(event, key) {\n    let newDescription = this.state.schedule;\n    newDescription[key].description = event.target.value;\n    this.setState(_objectSpread({}, this.state, {\n      schedule: newDescription\n    }));\n  }\n\n  onChangeTime(time, key) {\n    let newDescription = this.state.schedule;\n    let timestamp = new Date(this.state.date);\n    let arrTime = time.split(\":\");\n    timestamp.setHours(arrTime[0]);\n    timestamp.setMinutes(arrTime[1]);\n    newDescription[key].time = timestamp;\n    this.setState(_objectSpread({}, this.state, {\n      schedule: newDescription\n    }));\n  }\n\n  addSchedule() {\n    let description = \"\";\n    let scheduleSet = this.state.schedule;\n    let date = new Date(); // scheduleSet[this.state.length.toString()] = {description,time:date}\n\n    scheduleSet.push({\n      description,\n      time: date\n    });\n    let length = this.state.length + 1;\n    this.setState({\n      schedule: scheduleSet,\n      length: length\n    });\n  }\n\n  removeSchedule(key) {\n    let newScheduleSet = this.state.schedule; // delete newScheduleSet[key];\n\n    newScheduleSet.splice(key, 1);\n    console.log(newScheduleSet);\n    this.setState(_objectSpread({}, this.state, {\n      schedule: newScheduleSet\n    }));\n  }\n\n  submit() {\n    let schedules = this.state.schedule;\n    let date = this.state.date;\n    let month = date.getMonth();\n    let day = date.getDate();\n    let year = date.getFullYear();\n    let scheduleObject = {};\n    let length = 0;\n\n    for (let i = 0; i < schedules.length; i++) {\n      if (schedules[i].time.seconds == undefined) {\n        schedules[i].time.setMonth(month);\n        schedules[i].time.setDate(day);\n        schedules[i].time.setFullYear(year);\n        let timestamp = schedules[i].time.getTime() / 1000;\n        schedules[i].time = {\n          seconds: timestamp,\n          nanoseconds: 0\n        };\n        scheduleObject[i] = schedules[i];\n      } else {\n        scheduleObject[i] = schedules[i];\n      }\n\n      length++;\n    }\n\n    let selectGroupItinerary = this.props.itineraryHead;\n    let index = null;\n\n    for (let i = 0; i < selectGroupItinerary.dailyData.length; i++) {\n      let tempDate;\n\n      if (schedules[i] == undefined || schedules[i].time == undefined) {\n        tempDate = new Date(selectGroupItinerary.dailyData[i].date.seconds * 1000);\n      } else {\n        tempDate = new Date(selectGroupItinerary.dailyData[i].date.seconds * 1000);\n      }\n\n      let tempYear = tempDate.getFullYear();\n      let tempDay = tempDate.getDate();\n      let tempMonth = tempDate.getMonth();\n\n      if (year == tempYear && day == tempDay && tempMonth == month) {\n        index = i;\n        break;\n      }\n    }\n\n    selectGroupItinerary.dailyData[index].activities = scheduleObject;\n    selectGroupItinerary.dailyData[index].length = length;\n    this.props.editItinerary(selectGroupItinerary);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"itinerary_Table_Styles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"editFormHeading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Schedule Management\")), React.createElement(\"form\", {\n      className: \"itinerary_form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"group_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Group Name: \")), React.createElement(\"input\", {\n      value: this.state.groupName,\n      readonly: true,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"ItineraryDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Date: \")), React.createElement(\"input\", {\n      value: this.state.date,\n      readonly: true,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Time\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Remove\")), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.state.schedule.map((scheduleItem, key) => {\n      let timeObject = Object.assign({}, scheduleItem.time);\n      let time = scheduleItem.time;\n\n      if (scheduleItem.time.seconds) {\n        time = new Date(timeObject.seconds * 1000);\n      }\n\n      let timestampTime = \"\";\n\n      if (scheduleItem.time != null && time) {\n        timestampTime = time.toLocaleTimeString('en-US', {\n          hour: '2-digit',\n          minute: \"2-digit\"\n        });\n      }\n\n      return React.createElement(\"tr\", {\n        className: \"scheduleItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, timestampTime ? timestampTime : \"\"), React.createElement(\"input\", {\n        type: \"time\",\n        className: \"currentTime\",\n        onChange: time => {\n          if (time.target.value) this.onChangeTime(time.target.value, key);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"scheduleDescription\",\n        key: key,\n        defaultValue: this.state.schedule[key].description,\n        onChange: e => this.onChangeDescription(e, key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"removeButton\",\n        onClick: () => this.removeSchedule(key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Remove\")));\n    })))), React.createElement(\"button\", {\n      className: \"scheduleAddButton\",\n      onClick: () => this.addSchedule(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Add Schedule\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"scheduleSubmitButton\",\n      onClick: () => this.submit(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  selectedItinerary: state.itineraryState.selectedItinerary,\n  itineraries: state.itineraryState.itineraries,\n  itineraryHead: state.itineraryState.itineraryHead,\n  itineraryChanging: state.itineraryState.itineraryChanging\n});\n\nconst condition = authUser => !!authUser;\n\nexport default compose(connect(mapStateToProps, {\n  editItinerary,\n  itineraryChanged\n}), withAuthorization(condition))(ItineraryEdit);","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Pages/Itinerary_Pages/itinerary_Edit.js"],"names":["React","connect","compose","withAuthorization","editItinerary","itineraryChanged","ItineraryEdit","Component","constructor","props","state","id","itineraryHead","groupName","schedule","date","selectedItinerary","newScheduleSet","length","componentDidMount","Date","seconds","setState","tempSchedule","activities","tempArr","i","time","push","console","log","componentDidUpdate","itineraryChanging","history","onChangeDescription","event","key","newDescription","description","target","value","onChangeTime","timestamp","arrTime","split","setHours","setMinutes","addSchedule","scheduleSet","removeSchedule","splice","submit","schedules","month","getMonth","day","getDate","year","getFullYear","scheduleObject","undefined","setMonth","setDate","setFullYear","getTime","nanoseconds","selectGroupItinerary","index","dailyData","tempDate","tempYear","tempDay","tempMonth","render","map","scheduleItem","timeObject","Object","assign","timestampTime","toLocaleTimeString","hour","minute","e","mapStateToProps","itineraryState","itineraries","condition","authUser"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../../Session';\nimport {editItinerary, itineraryChanged} from '../../../Action/itineraryAction';\nclass ItineraryEdit extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            id:this.props.itineraryHead.id,\n            groupName: this.props.itineraryHead.groupName,\n            schedule:[],\n            date: this.props.selectedItinerary.date,\n            newScheduleSet:[],\n            length: this.props.selectedItinerary.length\n        }\n    }\n    componentDidMount(){\n        let date= new Date(this.state.date.seconds*1000)\n        this.setState({date:date})\n        let tempSchedule= this.props.selectedItinerary.activities;\n        let tempArr=[]\n        for(let i=0; i< this.state.length; i++){\n            let time=tempSchedule[i].time\n            tempSchedule[i].time=time\n            tempArr.push(tempSchedule[i])\n        }\n        console.log(tempArr)\n        this.setState({schedule: tempArr})\n    }\n    componentDidUpdate(){\n        if(this.props.itineraryChanging){\n            this.props.itineraryChanged();\n            this.props.history.push('/itineraries');\n        }\n    }\n    onChangeDescription(event, key){\n        let newDescription = this.state.schedule\n\n        newDescription[key].description= event.target.value;\n\n        this.setState({...this.state, schedule: newDescription});\n    }\n    onChangeTime(time, key){\n        let newDescription = this.state.schedule\n        let timestamp= new Date(this.state.date)\n        let arrTime= time.split(\":\") \n        timestamp.setHours(arrTime[0])\n        timestamp.setMinutes(arrTime[1])\n        newDescription[key].time= timestamp;\n        this.setState({...this.state, schedule: newDescription});\n    }\n    addSchedule(){\n        let description = \"\";\n        let scheduleSet= this.state.schedule;\n        let date= new Date();\n        // scheduleSet[this.state.length.toString()] = {description,time:date}\n        scheduleSet.push({description,time:date})\n        let length=this.state.length + 1;\n        this.setState({schedule: scheduleSet, length: length});\n    }\n    removeSchedule(key){\n        let newScheduleSet = this.state.schedule;\n        // delete newScheduleSet[key];\n        newScheduleSet.splice(key,1)\n        console.log(newScheduleSet)\n        this.setState({...this.state,schedule: newScheduleSet})\n    }\n\n    submit(){\n        let schedules= this.state.schedule;\n        let date = this.state.date;\n        let month = date.getMonth();\n        let day = date.getDate();\n        let year= date.getFullYear();\n        let scheduleObject={}\n        let length=0;\n        for(let i=0; i<schedules.length;i++){\n            if(schedules[i].time.seconds==undefined){\n                schedules[i].time.setMonth(month)\n                schedules[i].time.setDate(day)\n                schedules[i].time.setFullYear(year)\n                let timestamp=schedules[i].time.getTime()/1000\n                schedules[i].time={seconds:timestamp, nanoseconds: 0}\n                scheduleObject[i]= schedules[i]\n            }\n            else{\n                scheduleObject[i]= schedules[i]\n            }\n            length++;\n        }\n        let selectGroupItinerary=this.props.itineraryHead;\n        let index=null;\n        for(let i=0; i< selectGroupItinerary.dailyData.length; i++)\n        {\n            let tempDate;\n            if(schedules[i] ==undefined || schedules[i].time==undefined){\n                tempDate=new Date(selectGroupItinerary.dailyData[i].date.seconds*1000);\n            }\n            else{\n                tempDate=new Date(selectGroupItinerary.dailyData[i].date.seconds*1000)\n            }\n            \n            let tempYear=tempDate.getFullYear();\n            let tempDay=tempDate.getDate();\n            let tempMonth= tempDate.getMonth();\n            if(year==tempYear && day==tempDay && tempMonth == month){\n                index=i;\n                break;\n            }\n        }\n        selectGroupItinerary.dailyData[index].activities=scheduleObject\n        selectGroupItinerary.dailyData[index].length=length\n        this.props.editItinerary(selectGroupItinerary)\n    }\n    render(){\n        return(\n            <div>\n                <br/><br/><br/><br/>\n                <div className=\"itinerary_Table_Styles\">\n                    <div className=\"editFormHeading\"><h1>Schedule Management</h1></div>\n                    <form className=\"itinerary_form\">\n                        <label htmlFor=\"group_name\"><b>Group Name: </b></label>\n                        <input value={this.state.groupName} readonly disabled/>\n                        <label htmlFor=\"ItineraryDate\"><b>Date: </b></label>\n                        <input value={this.state.date} readonly disabled></input>\n                        <br/><br/><br/><hr/><br/><br/>\n                        <table>\n                            <tr>\n                                <th>Time</th>\n                                <th>Description</th>\n                                <th>Remove</th>\n                            </tr>\n                            <tbody>\n                                {/* {this.activityList()} */}\n                                {this.state.schedule.map((scheduleItem, key)=>{\n                                    let timeObject = Object.assign({},scheduleItem.time);\n                                    let time=scheduleItem.time;\n                                    if(scheduleItem.time.seconds){\n                                        time = new Date(timeObject.seconds*1000);\n                                    }\n                                    let timestampTime = \"\"\n                                    if(scheduleItem.time != null && time){\n                                        timestampTime=time.toLocaleTimeString('en-US', {hour: '2-digit', minute: \"2-digit\"});\n                                    }\n                                    return (\n                                        <tr className=\"scheduleItem\">\n                                            <td><p>{timestampTime ? timestampTime: \"\"}</p><input type=\"time\" className=\"currentTime\" onChange={(time)=> {\n                                                if(time.target.value)this.onChangeTime(time.target.value, key)}\n                                            }/></td>\n                                            <td><textarea className=\"scheduleDescription\" key={key} defaultValue={this.state.schedule[key].description} onChange={(e)=>this.onChangeDescription(e,key)}/></td>\n                                            <td><div className=\"removeButton\" onClick={()=>this.removeSchedule(key)}>Remove</div></td>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </table>\n                    </form>\n                    <button className=\"scheduleAddButton\" onClick={()=>this.addSchedule()}>Add Schedule</button>\n                    <br/><br/>\n                    <button className=\"scheduleSubmitButton\" onClick={()=>this.submit()}>Submit</button>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => ({\n    selectedItinerary : state.itineraryState.selectedItinerary,\n    itineraries: state.itineraryState.itineraries,\n    itineraryHead: state.itineraryState.itineraryHead,\n    itineraryChanging: state.itineraryState.itineraryChanging\n});\nconst condition = authUser => !!authUser;\nexport default compose(\n    connect(\n      mapStateToProps,\n      {editItinerary, itineraryChanged}\n    ),withAuthorization(condition)\n)(ItineraryEdit);"]},"metadata":{},"sourceType":"module"}