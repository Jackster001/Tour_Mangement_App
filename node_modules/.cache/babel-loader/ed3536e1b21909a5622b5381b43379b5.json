{"ast":null,"code":"import _objectSpread from \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Pages/Group_Pages/groupEdit.js\";\nimport React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../../Session';\nimport { editGroup, groupChanged } from '../../../Action/groupAction';\nimport * as ROUTES from '../../../constants/routes';\n\nclass Group_Edit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setRef = ref => {\n      this.file = ref;\n    };\n\n    this.state = {\n      selectedGroup: this.props.selectedGroup,\n      id: this.props.selectedGroup.id,\n      Group_Name: this.props.selectedGroup.name,\n      Group_Pin: this.props.selectedGroup.pin,\n      groupLogo: this.props.selectedGroup.groupLogo,\n      startDate: this.props.selectedGroup.startDate,\n      endDate: this.props.selectedGroup.endDate,\n      logoChanged: false\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.props.groupChanging) {\n      this.props.groupChanged();\n      this.props.history.push('/groups');\n    }\n  }\n\n  onChangeGroupName(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      Group_Name: event.target.value\n    }));\n  }\n\n  onChangeGroupPin(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      Group_Pin: event.target.value\n    }));\n  }\n\n  onChangeGroupInformation(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      Group_Information: event.target.value\n    }));\n  }\n\n  onChangeStartDate(event) {\n    let utcDate = new Date(event.target.value);\n    utcDate = new Date(utcDate.getTime() + utcDate.getTimezoneOffset() * 60000);\n    let startDate = {\n      seconds: utcDate.getTime() / 1000,\n      nanoseconds: 0\n    };\n    console.log(startDate);\n    return this.setState(_objectSpread({}, this.state, {\n      startDate\n    }));\n  }\n\n  onChangeEndDate(event) {\n    let utcDate = new Date(event.target.value);\n    utcDate = new Date(utcDate.getTime() + utcDate.getTimezoneOffset() * 60000);\n    let endDate = {\n      seconds: utcDate.getTime() / 1000,\n      nanoseconds: 0\n    };\n    return this.setState(_objectSpread({}, this.state, {\n      endDate\n    }));\n  }\n\n  onChangeRef() {\n    const file = this.file.files[0];\n    return this.setState({\n      groupLogo: file,\n      logoChanged: true\n    });\n  }\n\n  onHandleEdit() {\n    let newGroup = _objectSpread({}, this.state.selectedGroup, {\n      id: this.state.id,\n      name: this.state.Group_Name,\n      pin: this.state.Group_Pin,\n      groupLogo: this.state.groupLogo,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate\n    });\n\n    console.log(newGroup);\n    this.props.editGroup(newGroup, this.state.logoChanged);\n  }\n\n  render() {\n    let startDate = new Date(this.state.startDate.seconds * 1000);\n    let endDate = new Date(this.state.endDate.seconds * 1000);\n    startDate = startDate.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n    endDate = endDate.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"add_Table_Styles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"editFormHeading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Group Management\")), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, startDate + \" - \" + endDate), React.createElement(\"img\", {\n      className: \"group_Logo_Edit\",\n      src: this.props.selectedGroup.groupLogo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      className: \"add_form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Edit Group Information\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"group_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Group Name: \")), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: this.props.selectedGroup.name,\n      onChange: this.onChangeGroupName.bind(this),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"group_pin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Group Pin: \")), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"group_pin\",\n      placeholder: this.props.selectedGroup.pin,\n      onChange: this.onChangeGroupPin.bind(this),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"start_date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Start Date:\")), React.createElement(\"input\", {\n      type: \"date\",\n      name: \"start_date\",\n      onChange: this.onChangeStartDate.bind(this),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"end_date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"End Date: \")), React.createElement(\"input\", {\n      type: \"date\",\n      name: \"end_date\",\n      onChange: this.onChangeEndDate.bind(this),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"group_Logo logo_add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"group_Logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Group Logo: \")), React.createElement(\"input\", {\n      type: \"file\",\n      name: \"group_Logo\",\n      ref: this.setRef,\n      onChange: this.onChangeRef.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"update_Button\",\n      onClick: () => this.onHandleEdit(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Update Group\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  groups: state.groupState.users,\n  selectedGroup: state.groupState.selectedGroup,\n  groupChanging: state.groupState.groupChanging\n});\n\nconst condition = authUser => !!authUser;\n\nexport default compose(connect(mapStateToProps, {\n  editGroup,\n  groupChanged\n}), withAuthorization(condition))(Group_Edit);","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Pages/Group_Pages/groupEdit.js"],"names":["React","connect","compose","withAuthorization","editGroup","groupChanged","ROUTES","Group_Edit","Component","constructor","props","setRef","ref","file","state","selectedGroup","id","Group_Name","name","Group_Pin","pin","groupLogo","startDate","endDate","logoChanged","componentDidUpdate","groupChanging","history","push","onChangeGroupName","event","setState","target","value","onChangeGroupPin","onChangeGroupInformation","Group_Information","onChangeStartDate","utcDate","Date","getTime","getTimezoneOffset","seconds","nanoseconds","console","log","onChangeEndDate","onChangeRef","files","onHandleEdit","newGroup","render","toLocaleDateString","weekday","year","month","day","bind","mapStateToProps","groups","groupState","users","condition","authUser"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../../Session';\nimport {editGroup, groupChanged} from '../../../Action/groupAction'\nimport * as ROUTES from '../../../constants/routes';\nclass Group_Edit extends React.Component {\n   constructor(props){\n      super(props);\n      this.state={\n         selectedGroup: this.props.selectedGroup,\n         id: this.props.selectedGroup.id,\n         Group_Name: this.props.selectedGroup.name,\n         Group_Pin: this.props.selectedGroup.pin,\n         groupLogo: this.props.selectedGroup.groupLogo,\n         startDate: this.props.selectedGroup.startDate,\n         endDate: this.props.selectedGroup.endDate,\n         logoChanged: false\n         }\n      }\n   componentDidUpdate(){\n      if(this.props.groupChanging){\n            this.props.groupChanged()\n            this.props.history.push('/groups');\n      }\n   }\n   onChangeGroupName(event){\n      return (\n         this.setState({...this.state, Group_Name: event.target.value})\n      )\n   }\n   onChangeGroupPin(event){\n      return (\n         this.setState({...this.state, Group_Pin: event.target.value})\n      )\n   }\n   onChangeGroupInformation(event){\n      return (\n         this.setState({...this.state, Group_Information: event.target.value})\n      )\n   }\n   onChangeStartDate(event){\n      let utcDate= new Date(event.target.value)\n      utcDate = new Date(utcDate.getTime() + utcDate.getTimezoneOffset() * 60000)\n      let startDate={\n         seconds: utcDate.getTime()/1000,\n         nanoseconds:0\n      }\n      console.log(startDate)\n      return(\n         this.setState({...this.state, startDate})\n      )\n   }\n   onChangeEndDate(event){\n      let utcDate= new Date(event.target.value)\n      utcDate = new Date(utcDate.getTime() + utcDate.getTimezoneOffset() * 60000)\n      let endDate={\n         seconds: utcDate.getTime()/1000,\n         nanoseconds:0\n      }\n      return(\n         this.setState({...this.state, endDate})\n      )\n   }\n   onChangeRef(){\n      const file = this.file.files[0];\n      return(\n      this.setState({groupLogo: file, logoChanged: true}) \n      )\n   }\n   setRef = ref =>{\n      this.file = ref\n   }\n   onHandleEdit(){\n      let newGroup= {...this.state.selectedGroup,\n         id: this.state.id,\n         name: this.state.Group_Name,\n         pin: this.state.Group_Pin,\n         groupLogo: this.state.groupLogo,\n         startDate: this.state.startDate,\n         endDate: this.state.endDate\n      }\n      console.log(newGroup)\n      this.props.editGroup(newGroup, this.state.logoChanged);\n   }\n   render() {\n      let startDate = new Date(this.state.startDate.seconds*1000);\n      let endDate = new Date(this.state.endDate.seconds*1000);\n      startDate = startDate.toLocaleDateString('en-US', {weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'})\n      endDate= endDate.toLocaleDateString('en-US', {weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'})\n      return (\n         <div>\n            <br/><br/><br/><br/>\n            <div className=\"add_Table_Styles\">\n            <div className=\"editFormHeading\"><h1>Group Management</h1></div>\n            <h4>{startDate + \" - \"+endDate}</h4>\n            <img className=\"group_Logo_Edit\" src={this.props.selectedGroup.groupLogo}/>\n               <form className=\"add_form\">\n                  <center><h2>Edit Group Information</h2></center><br/>\n                  <label htmlFor=\"group_name\"><b>Group Name: </b></label>\n                  <input type=\"text\" name=\"name\" placeholder={this.props.selectedGroup.name} onChange={this.onChangeGroupName.bind(this)} required/><br/><br/>\n                  <label htmlFor=\"group_pin\"><b>Group Pin: </b></label>\n                  <input type=\"text\" name=\"group_pin\" placeholder={this.props.selectedGroup.pin} onChange={this.onChangeGroupPin.bind(this)} required/><br/><br/>\n                  <label htmlFor=\"start_date\"><b>Start Date:</b></label>\n                  <input type=\"date\" name=\"start_date\" onChange={this.onChangeStartDate.bind(this)} required/><br/><br/>\n                  <label htmlFor=\"end_date\"><b>End Date: </b></label>\n                  <input type=\"date\" name=\"end_date\" onChange={this.onChangeEndDate.bind(this)} required/><br/><br/>\n                  <div className=\"group_Logo logo_add\"><label htmlFor=\"group_Logo\"><b>Group Logo: </b></label>\n                  <input type=\"file\" name=\"group_Logo\" ref={this.setRef} onChange={this.onChangeRef.bind(this)}/></div>\n                  <button type=\"button\" className=\"update_Button\" onClick={()=>this.onHandleEdit()}>Update Group</button>\n               </form>\n            </div>\n         </div>\n      );\n   }\n}\nconst mapStateToProps = state => ({\n   groups: state.groupState.users,\n   selectedGroup: state.groupState.selectedGroup,\n   groupChanging: state.groupState.groupChanging\n });\nconst condition = authUser => !!authUser;\nexport default compose(\n   connect(\n     mapStateToProps,\n     {editGroup, groupChanged}\n   ),withAuthorization(condition)\n)(Group_Edit);\n\n"]},"metadata":{},"sourceType":"module"}