{"ast":null,"code":"import _objectSpread from \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Tables/groupTable/groupRow.js\";\nimport React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { deleteGroup, selectGroup, selectGroupChanging } from '../../../Action/groupAction';\nimport withAuthorization from '../../Session/withAuthorization';\nimport { GroupModal } from './group_modal';\nimport { UserList } from './group_userList';\n\nclass GroupRow extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.showModal = () => {\n      this.setState(_objectSpread({}, this.state, {\n        forAssign: true\n      }));\n      let show = true;\n      this.setState({\n        show: show\n      });\n\n      if (this.state.forAssign === true) {\n        this.props.selectGroup(this.props.id);\n      }\n    };\n\n    this.hideModal = () => {\n      this.setState(_objectSpread({}, this.state, {\n        forAssign: false\n      }));\n      this.setState({\n        show: false,\n        listShow: false\n      });\n    };\n\n    this.state = {\n      selected: {},\n      show: false,\n      listShow: false,\n      showList: \"\",\n      tourGuides: [],\n      leadChaperones: [],\n      radioSelected: \"\",\n      targetList: [],\n      avaliableTourGuides: [],\n      avaliableLeadChaperones: [],\n      assignedTourGuides: [],\n      assignedLeadChaperones: [],\n      forAssign: false\n    };\n  }\n\n  componentDidMount() {\n    let tourguides = this.props.avaliableTourGuides.map(guide => {\n      return {\n        id: guide.id,\n        firstName: guide.firstName,\n        lastName: guide.lastName\n      };\n    });\n    let leadChaperones = this.props.avaliableLeadChaperones.map(guide => {\n      return {\n        id: guide.id,\n        firstName: guide.firstName,\n        lastName: guide.lastName\n      };\n    });\n    this.setState(_objectSpread({}, this.state, {\n      avaliableTourGuides: tourguides,\n      avaliableLeadChaperones: leadChaperones\n    }));\n\n    if (this.props.subgroup[0]) {\n      let subgroup = Object.assign([], this.props.subgroup);\n      let leadChaps = [];\n      let tourGuides = [];\n      subgroup.map(group => {\n        if (group.leadChaperone) {\n          leadChaps.push(\"\" + group.leadChaperone.firstName + \" \" + group.leadChaperone.lastName);\n        }\n\n        if (group.tourGuide) {\n          tourGuides.push(\"\" + group.tourGuide.firstName + \" \" + group.tourGuide.lastName);\n        }\n      });\n      this.setState({\n        tourGuides: tourGuides,\n        leadChaperones: leadChaps\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.selectGroupChanged && this.state.forAssign === false) {\n      this.props.selectGroupChanging();\n      this.props.history.push('/group/' + this.props.id);\n    }\n  }\n\n  handleDelete(id) {\n    alert(\"User with id:\" + this.props.id + \" has been deleted from the database\");\n    this.props.deleteGroup(id);\n  }\n\n  selected(id) {\n    this.props.selectGroup(id);\n  }\n\n  onHandleEdit() {\n    let newItem = {\n      id: this.props.selected.id,\n      Date: this.props.selected.Date,\n      Time: this.props.selected.Time,\n      Description: this.props.selected.Description\n    };\n    let current = this.state.selectedActivity;\n\n    if (current.Date != null) {\n      newItem.Date = current.Date;\n    }\n\n    if (current.Time != null) {\n      newItem.Time = current.Time;\n    }\n\n    if (current.Description != null) {\n      newItem.Description = current.Description;\n    }\n\n    this.props.editItem(newItem);\n    this.hideModal();\n  }\n\n  onChangeTourGuidesSelected(event) {\n    let temp = [...event.target.options].filter(o => o.selected).map(o => o.value);\n    let tourguides = this.state.avaliableTourGuides.filter(guide => {\n      for (let i = 0; i < temp.length; i++) {\n        if (guide.id === temp[i]) {\n          return guide;\n        }\n      }\n    });\n    return this.setState(_objectSpread({}, this.state, {\n      assignedTourGuides: tourguides\n    }));\n  }\n\n  onChangeLeadChaperonesSelected(event) {\n    let temp = [...event.target.options].filter(o => o.selected).map(o => o.value);\n    let leadChaperones = this.state.avaliableLeadChaperones.filter(chap => {\n      for (let i = 0; i < temp.length; i++) {\n        if (chap.id === temp[i]) {\n          return chap;\n        }\n      }\n    });\n    return this.setState(_objectSpread({}, this.state, {\n      assignedLeadChaperones: leadChaperones\n    }));\n  }\n\n  assign() {\n    let subgroup = _objectSpread({}, this.props.selectedGroup.subGroup);\n\n    let tourguides = this.state.assignedTourGuides;\n\n    for (let i = 0; i < tourguides.length; i++) {\n      subgroup.push(tourguides[i]);\n    }\n\n    console.log();\n\n    let newGroup = _objectSpread({}, this.props.selectedGroup); // this.props.editGroup(newGroup, this.state.logoChanged);\n\n  }\n\n  render() {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, this.props.groupName)), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Group Pin: \", this.props.groupPin))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"Group_Logo_Table\",\n      src: this.props.groupLogo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, this.state.tourGuides.map((name, i) => {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Bus \", i + 1, \" - \", name);\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, this.state.leadChaperones.map((name, i) => {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Bus \", i + 1, \" - \", name);\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"edit_button\",\n      onClick: () => this.selected(this.props.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"assignButton\",\n      onClick: () => this.showModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Assign\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })), React.createElement(GroupModal, {\n      show: this.state.show,\n      handleClose: () => this.hideModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modalContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Assign Tour Guides and Chaperones to\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, this.props.groupName)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"assignemntSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Tour Guides\"), React.createElement(\"select\", {\n      name: \"tourGuides\",\n      className: \"selectBox\",\n      onChange: this.onChangeTourGuidesSelected.bind(this),\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, this.state.avaliableTourGuides.map(guide => {\n      return React.createElement(\"option\", {\n        value: (guide.firstName, guide.lastName, guide.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, guide.firstName, \" \", guide.lastName);\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Lead Chaperones\"), React.createElement(\"select\", {\n      name: \"leadChaperones\",\n      className: \"selectBox\",\n      onChange: this.onChangeLeadChaperonesSelected.bind(this),\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, this.state.avaliableLeadChaperones.map(chap => {\n      return React.createElement(\"option\", {\n        value: (chap.firstName, chap.lastName, chap.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, chap.firstName, \" \", chap.lastName);\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"assignBottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"Submit_Button\",\n      onClick: () => this.assign(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Assign\"))))), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"delete_button\",\n      id: this.props.id,\n      onClick: () => this.handleDelete(this.props.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Delete\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  groups: state.groupState.groups,\n  selectedGroup: state.groupState.selectedGroup,\n  selectGroupChanged: state.groupState.selectGroupChanged\n});\n\nconst condition = authUser => !!authUser;\n\nexport default compose(connect(mapStateToProps, {\n  deleteGroup,\n  selectGroup,\n  selectGroupChanging\n}), withAuthorization(condition))(GroupRow);","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Tables/groupTable/groupRow.js"],"names":["React","connect","compose","deleteGroup","selectGroup","selectGroupChanging","withAuthorization","GroupModal","UserList","GroupRow","PureComponent","constructor","props","showModal","setState","state","forAssign","show","id","hideModal","listShow","selected","showList","tourGuides","leadChaperones","radioSelected","targetList","avaliableTourGuides","avaliableLeadChaperones","assignedTourGuides","assignedLeadChaperones","componentDidMount","tourguides","map","guide","firstName","lastName","subgroup","Object","assign","leadChaps","group","leadChaperone","push","tourGuide","componentDidUpdate","selectGroupChanged","history","handleDelete","alert","onHandleEdit","newItem","Date","Time","Description","current","selectedActivity","editItem","onChangeTourGuidesSelected","event","temp","target","options","filter","o","value","i","length","onChangeLeadChaperonesSelected","chap","selectedGroup","subGroup","console","log","newGroup","render","groupName","groupPin","groupLogo","name","bind","mapStateToProps","groups","groupState","condition","authUser"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport {deleteGroup, selectGroup, selectGroupChanging} from '../../../Action/groupAction'\nimport withAuthorization from '../../Session/withAuthorization';\nimport {GroupModal} from './group_modal';\nimport {UserList} from './group_userList'\n\nclass GroupRow extends React.PureComponent{\n    constructor(props){\n        super(props);\n        this.state={\n            selected : {}, \n            show:false,\n            listShow:false,\n            showList: \"\",\n            tourGuides:[],\n            leadChaperones:[],\n            radioSelected: \"\",\n            targetList:[],\n            avaliableTourGuides:[],\n            avaliableLeadChaperones:[],\n            assignedTourGuides:[],\n            assignedLeadChaperones:[],\n            forAssign: false\n        }\n    }\n    componentDidMount(){\n        let tourguides = this.props.avaliableTourGuides.map( guide=>{\n            return {\n                id: guide.id,\n                firstName:guide.firstName, \n                lastName: guide.lastName\n            }\n        })\n        let leadChaperones = this.props.avaliableLeadChaperones.map( guide=>{\n            return {\n                id: guide.id,\n                firstName:guide.firstName, \n                lastName: guide.lastName\n            }\n        })\n        this.setState({...this.state, avaliableTourGuides: tourguides, avaliableLeadChaperones: leadChaperones})\n        if(this.props.subgroup[0]){\n            let subgroup= Object.assign([],this.props.subgroup);\n            let leadChaps= [];\n            let tourGuides=[];\n            subgroup.map(group=>{\n                if(group.leadChaperone){\n                    leadChaps.push(\"\"+group.leadChaperone.firstName+\" \"+group.leadChaperone.lastName)\n                }\n                if(group.tourGuide){\n                    tourGuides.push(\"\"+group.tourGuide.firstName+\" \"+group.tourGuide.lastName)\n                }\n            })\n            this.setState({tourGuides: tourGuides, leadChaperones: leadChaps});\n        }\n    }\n    componentDidUpdate(){\n        if(this.props.selectGroupChanged && this.state.forAssign === false){\n            this.props.selectGroupChanging()\n            this.props.history.push('/group/'+this.props.id);        \n        } \n    }\n    handleDelete(id){\n        alert(\"User with id:\"+this.props.id+\" has been deleted from the database\");\n        this.props.deleteGroup(id);\n    }\n    selected(id){\n        this.props.selectGroup(id);\n    }\n    showModal = () => {\n        this.setState({...this.state, forAssign: true})\n        let show=true\n        this.setState({show: show});\n        if(this.state.forAssign === true){\n            this.props.selectGroup(this.props.id);\n        }\n        \n    };\n    hideModal = () => {\n        this.setState({...this.state, forAssign: false})\n        this.setState({ show: false, listShow: false });\n     };\n    onHandleEdit(){\n        let newItem={\n           id: this.props.selected.id,\n           Date: this.props.selected.Date,\n           Time: this.props.selected.Time,\n           Description: this.props.selected.Description\n        }\n        let current= this.state.selectedActivity\n        if(current.Date != null){\n           newItem.Date=current.Date \n        }\n        if(current.Time != null){\n           newItem.Time =current.Time \n        }\n        if(current.Description != null){\n           newItem.Description=current.Description \n        }\n        \n        this.props.editItem(newItem)\n        this.hideModal();\n    }\n    onChangeTourGuidesSelected(event){\n        let temp = [...event.target.options].filter(o=>o.selected).map(o=>o.value);\n        let tourguides = this.state.avaliableTourGuides.filter(guide=>{\n            for(let i=0; i<temp.length; i++){\n                if(guide.id === temp[i]){\n                    return guide\n                }\n            }\n        })\n        return this.setState({...this.state, assignedTourGuides: tourguides});\n    }\n    onChangeLeadChaperonesSelected(event){\n        let temp = [...event.target.options].filter(o=>o.selected).map(o=>o.value);\n        let leadChaperones = this.state.avaliableLeadChaperones.filter(chap=>{\n            for(let i=0; i<temp.length; i++){\n                if(chap.id === temp[i]){\n                    return chap\n                }\n            }\n        })\n        return this.setState({...this.state, assignedLeadChaperones: leadChaperones});\n    }\n    assign(){\n        let subgroup = {...this.props.selectedGroup.subGroup};\n        let tourguides = this.state.assignedTourGuides;\n        for(let i=0; i<tourguides.length; i++){\n            subgroup.push(tourguides[i]);\n        }\n        console.log();\n        let newGroup= {...this.props.selectedGroup,\n\n            \n        }\n        // this.props.editGroup(newGroup, this.state.logoChanged);\n    }\n    render(){\n        return(\n            <tr>\n                <td><center><h2><b>{this.props.groupName}</b></h2><h4>Group Pin: {this.props.groupPin}</h4></center></td>\n                <td><center><img className=\"Group_Logo_Table\" src={this.props.groupLogo} /></center></td>\n                <td>\n                    {this.state.tourGuides.map((name,i)=>{\n                        return <p>Bus {i+1} - {name}</p>\n                    })} \n                </td>\n                <td>      \n                    {this.state.leadChaperones.map((name,i)=>{\n                        return <p>Bus {i+1} - {name}</p>\n                    })}          \n                </td>\n                <td>\n                <center><button className=\"edit_button\" onClick={()=>this.selected(this.props.id)}>Edit</button><br/>\n                    <button className=\"assignButton\" onClick={()=>this.showModal()}>Assign</button><br/><br/></center>\n                    <GroupModal show={this.state.show} handleClose={()=>this.hideModal()}>\n                        <div className=\"modalContent\">\n                            <center><h2>Assign Tour Guides and Chaperones to</h2><h1>{this.props.groupName}</h1></center><br/>\n                                <div className=\"assignemntSection\">\n                                    <div>\n                                        <h2>Tour Guides</h2>\n                                        <select name=\"tourGuides\" className=\"selectBox\" onChange={this.onChangeTourGuidesSelected.bind(this)} multiple>\n                                            {this.state.avaliableTourGuides.map(guide=>{\n                                                return <option value={guide.firstName, guide.lastName, guide.id}>{guide.firstName} {guide.lastName}</option>\n                                            })} \n                                        </select>\n                                    </div>\n                                    <div>\n                                        <h2>Lead Chaperones</h2>\n                                        <select name=\"leadChaperones\" className=\"selectBox\" onChange={this.onChangeLeadChaperonesSelected.bind(this)} multiple>\n                                            {this.state.avaliableLeadChaperones.map(chap=>{\n                                                return <option value={chap.firstName, chap.lastName, chap.id}>{chap.firstName} {chap.lastName}</option>\n                                            })} \n                                        </select>\n                                        \n                                    </div>\n                                </div>\n                                <br/>\n                                <div className=\"assignBottom\"><center><button className=\"Submit_Button\" onClick={()=>this.assign()}>Assign</button></center></div>\n                        </div>\n                    </GroupModal>\n                    <center><button className=\"delete_button\" id={this.props.id} onClick={()=>this.handleDelete(this.props.id)}>Delete</button></center>\n                </td>\n            </tr>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    groups: state.groupState.groups,\n    selectedGroup: state.groupState.selectedGroup,\n    selectGroupChanged: state.groupState.selectGroupChanged\n});\nconst condition = authUser => !!authUser;\nexport default compose(\n    connect(\n      mapStateToProps,\n      {deleteGroup, selectGroup, selectGroupChanging}\n    ),withAuthorization(condition)\n)(GroupRow);"]},"metadata":{},"sourceType":"module"}