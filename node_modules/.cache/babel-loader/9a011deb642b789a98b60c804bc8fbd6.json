{"ast":null,"code":"import _objectSpread from \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Pages/Contact_Pages/add_Contact.js\";\nimport React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../../Session';\nimport { addContact, contactAdded } from '../../../Action/contactAction';\nimport * as ROUTES from '../../../constants/routes';\n\nclass Add_Contact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      groupName: \"\",\n      hotelName: \"\",\n      hotelAddress: \"\",\n      phoneNumber: \"\"\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.props.contactAdding) {\n      console.log(this.props.contactAdding);\n      this.props.contactAdded();\n      this.props.history.push(ROUTES.CONTACT);\n    }\n  }\n\n  onChangeGroupName(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      groupName: event.target.value\n    }));\n  }\n\n  onChangeHotelName(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      hotelName: event.target.value\n    }));\n  }\n\n  onChangeHotelAddress(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      hotelAddress: event.target.value\n    }));\n  }\n\n  onChangePhoneNumber(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      phoneNumber: event.target.value\n    }));\n  }\n\n  addContact() {\n    //getting the current date and time\n    let date = new Date(); //getting the group pin \n\n    let groupName = this.state.groupName;\n    let group = Object.assign([{}]);\n    group = this.props.groups.filter(function (group) {\n      return group.name == groupName;\n    });\n    let selectedGroup = Object.assign({}, group[0]);\n    let groupPin = selectedGroup.pin; //setting up new contact\n\n    let newContactInfo = {\n      groupPin: groupPin,\n      groupName: this.state.groupName,\n      hotelName: this.state.hotelName,\n      phoneNumber: this.state.phoneNumber,\n      address: this.state.hotelAddress,\n      timestamp: date //called contact action to add to firebase\n\n    };\n    this.props.addContact(newContactInfo);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"add_Table_Styles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"addFormHeading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Contact Management\")), React.createElement(\"form\", {\n      className: \"add_form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Contact Details\")), React.createElement(\"label\", {\n      htmlFor: \"group_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Group Name: \")), React.createElement(\"select\", {\n      name: \"group_name\",\n      onChange: this.onChangeGroupName.bind(this),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      defaultValue: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" -- select an option -- \"), this.props.groups.map(function (group) {\n      return React.createElement(\"option\", {\n        value: group.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, group.name);\n    })), React.createElement(\"label\", {\n      htmlFor: \"Hotel_Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Hotel Name: \")), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Hotel_Name\",\n      onChange: this.onChangeHotelName.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"Hotel_Address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Hotel Address: \")), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Hotel_Address\",\n      onChange: this.onChangeHotelAddress.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"Hotel_Phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Phone Number: \")), React.createElement(\"input\", {\n      type: \"tel\",\n      name: \"Hotel_Phone\",\n      onChange: this.onChangePhoneNumber.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"Submit_Button\",\n      onClick: () => this.addContact(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Add Contact Information\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  groups: state.groupState.groups,\n  contacts: state.contactState.contacts,\n  contactAdding: state.contactState.contactAdding\n});\n\nconst condition = authUser => !!authUser;\n\nexport default compose(connect(mapStateToProps, {\n  addContact,\n  contactAdded\n}), withAuthorization(condition))(Add_Contact);","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Pages/Contact_Pages/add_Contact.js"],"names":["React","connect","compose","withAuthorization","addContact","contactAdded","ROUTES","Add_Contact","Component","constructor","props","state","groupName","hotelName","hotelAddress","phoneNumber","componentDidUpdate","contactAdding","console","log","history","push","CONTACT","onChangeGroupName","event","setState","target","value","onChangeHotelName","onChangeHotelAddress","onChangePhoneNumber","date","Date","group","Object","assign","groups","filter","name","selectedGroup","groupPin","pin","newContactInfo","address","timestamp","render","bind","map","mapStateToProps","groupState","contacts","contactState","condition","authUser"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../../Session';\nimport {addContact, contactAdded} from '../../../Action/contactAction';\nimport * as ROUTES from '../../../constants/routes';\n\nclass Add_Contact extends React.Component {\n   constructor(props){\n      super(props);\n      this.state={\n            groupName: \"\",\n            hotelName: \"\",\n            hotelAddress: \"\",\n            phoneNumber: \"\",\n         }\n    }\n    componentDidUpdate(){\n        if(this.props.contactAdding){\n            console.log(this.props.contactAdding)\n            this.props.contactAdded()\n                this.props.history.push(ROUTES.CONTACT)\n        }\n    }\n    onChangeGroupName(event){\n        return (\n            this.setState({...this.state, groupName: event.target.value})\n        )\n    }\n    onChangeHotelName(event){\n        return (\n            this.setState({...this.state, hotelName: event.target.value})\n        )\n    }\n    onChangeHotelAddress(event){\n        return (\n            this.setState({...this.state, hotelAddress: event.target.value})\n        )\n    }\n    onChangePhoneNumber(event){\n        return (\n            this.setState({...this.state, phoneNumber: event.target.value})\n        )\n    }\n    addContact(){\n        //getting the current date and time\n        let date=new Date();\n\n        //getting the group pin \n        let groupName= this.state.groupName;\n        let group=Object.assign([{}])\n        group= this.props.groups.filter(function(group){\n            return (group.name == groupName)\n        })\n        let selectedGroup=Object.assign({},group[0])\n        let groupPin=selectedGroup.pin;\n\n        //setting up new contact\n        let newContactInfo= {\n            groupPin: groupPin,\n            groupName: this.state.groupName,\n            hotelName: this.state.hotelName,\n            phoneNumber: this.state.phoneNumber,\n            address: this.state.hotelAddress,\n            timestamp: date\n        }\n        //called contact action to add to firebase\n        this.props.addContact(newContactInfo)\n    }\n    render() {\n        return (\n            <div>\n                <br/><br/><br/><br/>\n                <div className=\"add_Table_Styles\">\n                <div className=\"addFormHeading\"><h1>Contact Management</h1></div>\n                <form className=\"add_form\">\n                    <center><h2>Contact Details</h2></center>\n                    <label htmlFor=\"group_name\"><b>Group Name: </b></label>\n                    <select name=\"group_name\" onChange={this.onChangeGroupName.bind(this)} required>\n                    <option disabled selected defaultValue> -- select an option -- </option>\n                        {this.props.groups.map(function(group){\n                            return (<option value={group.name}>{group.name}</option>)\n                        })}\n                    </select>\n                    <label htmlFor=\"Hotel_Name\"><b>Hotel Name: </b></label>\n                    <input type=\"text\" name=\"Hotel_Name\" onChange={this.onChangeHotelName.bind(this)}></input>\n                    <label htmlFor=\"Hotel_Address\"><b>Hotel Address: </b></label>\n                    <input type=\"text\" name=\"Hotel_Address\" onChange={this.onChangeHotelAddress.bind(this)}></input>\n                    <label htmlFor=\"Hotel_Phone\"><b>Phone Number: </b></label>\n                    <input type=\"tel\" name=\"Hotel_Phone\" onChange={this.onChangePhoneNumber.bind(this)}></input>\n                    <br/><br/>\n                    <button type=\"button\" className=\"Submit_Button\" onClick={()=>this.addContact()}>Add Contact Information</button>\n                </form>\n            </div>\n            </div>\n        );\n    }\n    }\nconst mapStateToProps = state => ({\n    groups: state.groupState.groups,\n    contacts: state.contactState.contacts,\n    contactAdding: state.contactState.contactAdding\n });\nconst condition = authUser => !!authUser;\nexport default compose(\n   connect(\n     mapStateToProps,\n     {addContact, contactAdded}\n   ),withAuthorization(condition)\n)(Add_Contact);"]},"metadata":{},"sourceType":"module"}