{"ast":null,"code":"import _objectSpread from \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Pages/Notification_Pages/send_Notification.js\";\nimport React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../../Session';\nimport { sendNotification, notificationSent } from '../../../Action/notificationAction';\nimport * as ROUTES from '../../../constants/routes';\nimport * as firebase from \"firebase\";\n\nclass Send_Notification extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userAccounts: [{\n        userType: \"Director\",\n        firstName: \"Tour\",\n        lastName: \"Management\",\n        profilePicture: \"\"\n      }, {\n        userType: \"Tour Guide\",\n        firstName: \"Tour\",\n        lastName: \"Management\",\n        profilePicture: \"\"\n      }, {\n        userType: \"Lead Chaperone\",\n        firstName: \"Tour\",\n        lastName: \"Management\",\n        profilePicture: \"\"\n      }],\n      groupName: \"\",\n      sender: 0,\n      message: \"\"\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.props.notificationSending) {\n      this.props.notificationSent();\n      this.props.history.push(ROUTES.NOTIFICATIONS);\n    }\n  }\n\n  onChangeGroupName(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      groupName: event.target.value\n    }));\n  }\n\n  onChangeSender(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      sender: event.target.value\n    }));\n  }\n\n  onChangeMessage(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      message: event.target.value\n    }));\n  }\n\n  addNotification() {\n    let date = firebase.firestore.Timestamp.fromDate(new Date());\n    let sender = this.state.userAccounts[this.state.sender];\n    sender = _objectSpread({}, sender, {\n      GroupName: this.state.groupName\n    });\n    let selectedGroup = this.props.groups.filter(group => {\n      return group.name === this.state.groupName;\n    });\n    let pin = \"\";\n\n    if (selectedGroup) {\n      pin = selectedGroup[0].pin;\n    }\n\n    let newNotification = {\n      groupPin: pin,\n      notifType: \"message\",\n      message: this.state.message,\n      sender: sender,\n      timestamp: date\n    };\n    this.props.sendNotification(newNotification);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"add_Table_Styles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"addFormHeading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Send a Notification\")), React.createElement(\"form\", {\n      className: \"add_form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Notification Details\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"group_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Group Name: \")), React.createElement(\"select\", {\n      name: \"group_name\",\n      onChange: this.onChangeGroupName.bind(this),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      defaultValue: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \" -- select an option -- \"), this.props.groups.map(function (group) {\n      return React.createElement(\"option\", {\n        value: group.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, group.name);\n    })), React.createElement(\"label\", {\n      htmlFor: \"sender\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Sender: \")), React.createElement(\"select\", {\n      name: \"sender\",\n      onChange: this.onChangeSender.bind(this),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      defaultValue: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \" -- select an option -- \"), this.state.userAccounts.map(function (user, key) {\n      return React.createElement(\"option\", {\n        value: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, user.userType, \": \", user.firstName, \" \", user.lastName);\n    })), React.createElement(\"div\", {\n      className: \"formTextField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"notification\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Notification: \")), React.createElement(\"textarea\", {\n      className: \"addTextArea\",\n      name: \"notification\",\n      onChange: this.onChangeMessage.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"Submit_Button\",\n      onClick: () => this.addNotification(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Send Notification\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  groups: state.groupState.groups,\n  alarms: state.alarmState.alarms,\n  alarmAdding: state.alarmState.alarmAdding,\n  notificationSending: state.notificationState.notificationSending\n});\n\nconst condition = authUser => !!authUser;\n\nexport default compose(connect(mapStateToProps, {\n  sendNotification,\n  notificationSent\n}), withAuthorization(condition))(Send_Notification);","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Pages/Notification_Pages/send_Notification.js"],"names":["React","connect","compose","withAuthorization","sendNotification","notificationSent","ROUTES","firebase","Send_Notification","Component","constructor","props","state","userAccounts","userType","firstName","lastName","profilePicture","groupName","sender","message","componentDidUpdate","notificationSending","history","push","NOTIFICATIONS","onChangeGroupName","event","setState","target","value","onChangeSender","onChangeMessage","addNotification","date","firestore","Timestamp","fromDate","Date","GroupName","selectedGroup","groups","filter","group","name","pin","newNotification","groupPin","notifType","timestamp","render","bind","map","user","key","mapStateToProps","groupState","alarms","alarmState","alarmAdding","notificationState","condition","authUser"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../../Session';\nimport {sendNotification, notificationSent} from '../../../Action/notificationAction'\nimport * as ROUTES from '../../../constants/routes';\nimport * as firebase from \"firebase\";\n\nclass Send_Notification extends React.Component {\n   constructor(props){\n      super(props);\n      this.state={\n            userAccounts:[{\n                userType: \"Director\",\n                firstName: \"Tour\",\n                lastName: \"Management\",\n                profilePicture:\"\"\n            },{\n                userType: \"Tour Guide\",\n                firstName: \"Tour\",\n                lastName: \"Management\",\n                profilePicture:\"\"\n            },{\n                userType: \"Lead Chaperone\",\n                firstName: \"Tour\",\n                lastName: \"Management\",\n                profilePicture:\"\"\n            }],\n            groupName: \"\",\n            sender: 0,\n            message: \"\"\n         }\n    }\n    componentDidUpdate(){\n        if(this.props.notificationSending){\n            this.props.notificationSent()\n                this.props.history.push(ROUTES.NOTIFICATIONS)\n        }\n    }\n    onChangeGroupName(event){\n        return (\n            this.setState({...this.state, groupName: event.target.value})\n        )\n    }\n    onChangeSender(event){\n        return (\n            this.setState({...this.state, sender: event.target.value})\n        )\n    }\n    onChangeMessage(event){\n        return (\n            this.setState({...this.state, message: event.target.value})\n        )\n    }\n    addNotification(){\n        let date= firebase.firestore.Timestamp.fromDate(new Date());\n\n        let sender = this.state.userAccounts[this.state.sender]\n        sender= {...sender, GroupName: this.state.groupName}\n        let selectedGroup = this.props.groups.filter(group=>{\n            return group.name === this.state.groupName\n        })\n        let pin=\"\";\n        if(selectedGroup){\n            pin = selectedGroup[0].pin;\n        }\n        \n        let newNotification={\n            groupPin: pin,\n            notifType: \"message\",\n            message: this.state.message,\n            sender: sender,\n            timestamp: date\n        }\n        this.props.sendNotification(newNotification)\n    }\n    render() {\n        return (\n            <div>\n                <br/><br/><br/><br/>\n                <div className=\"add_Table_Styles\">\n                <div className=\"addFormHeading\"><h1>Send a Notification</h1></div>\n                <form className=\"add_form\">\n                    <center><h2>Notification Details</h2></center><br/>\n                    <label htmlFor=\"group_name\"><b>Group Name: </b></label>\n                    <select name=\"group_name\" onChange={this.onChangeGroupName.bind(this)} required>\n                    <option disabled selected defaultValue> -- select an option -- </option>\n                        {this.props.groups.map(function(group){\n                            return (<option value={group.name}>{group.name}</option>)\n                        })}\n                    </select>\n                    <label htmlFor=\"sender\"><b>Sender: </b></label>\n                    <select name=\"sender\" onChange={this.onChangeSender.bind(this)} required>\n                    <option disabled selected defaultValue> -- select an option -- </option>\n                        {this.state.userAccounts.map(function(user, key){\n                            return (<option value={key}>{user.userType}{\": \"}{user.firstName}{\" \"}{user.lastName}</option>)\n                        })}\n                    </select>\n                    <div className=\"formTextField\"><label htmlFor=\"notification\"><b>Notification: </b></label>\n                    <textarea className=\"addTextArea\" name=\"notification\" onChange={this.onChangeMessage.bind(this)}></textarea></div><br/><br/>\n                    <button type=\"button\" className=\"Submit_Button\" onClick={()=>this.addNotification()}>Send Notification</button>\n                </form>\n            </div>\n            </div>\n        );\n    }\n    }\nconst mapStateToProps = state => ({\n    groups: state.groupState.groups,\n    alarms: state.alarmState.alarms,\n    alarmAdding: state.alarmState.alarmAdding,\n    notificationSending: state.notificationState.notificationSending\n });\nconst condition = authUser => !!authUser;\nexport default compose(\n   connect(\n     mapStateToProps,\n     {sendNotification, notificationSent}\n   ),withAuthorization(condition)\n)(Send_Notification);"]},"metadata":{},"sourceType":"module"}