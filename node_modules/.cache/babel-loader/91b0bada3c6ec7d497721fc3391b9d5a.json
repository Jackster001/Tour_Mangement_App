{"ast":null,"code":"import _objectSpread from \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Pages/Notification_Pages/send_Notification.js\";\nimport React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../../Session';\nimport { addAlarm, alarmAdded } from '../../../Action/alarmAction';\nimport * as ROUTES from '../../../constants/routes';\n\nclass Send_Notification extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userAccounts: [{\n        userType: \"Director\",\n        firstName: \"Tour\",\n        lastName: \"Management\"\n      }, {\n        userType: \"Tour Guide\",\n        firstName: \"Tour\",\n        lastName: \"Management\"\n      }, {\n        userType: \"Lead Chaperone\",\n        firstName: \"Tour\",\n        lastName: \"Management\"\n      }],\n      groupName: \"\",\n      sender: {},\n      message: \"\"\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.props.alarmAdding) {\n      this.props.alarmAdded();\n      this.props.history.push(ROUTES.ALARMS);\n    }\n  }\n\n  onChangeGroupName(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      groupName: event.target.value\n    }));\n  }\n\n  onChangeAlarmMessage(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      message: event.target.value\n    }));\n  }\n\n  onChangeDate(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      date: event.target.value\n    }));\n  }\n\n  onChangeTime(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      time: event.target.value\n    }));\n  }\n\n  addNotification() {\n    //setting the current timestamp\n    // let myDate=this.state.date;\n    // myDate=myDate.split(\"-\");\n    // let newDate=myDate[1]+\"/\"+myDate[2]+\"/\"+myDate[0];\n    // let temp= newDate + \" \" + this.state.time; \n    // let date= new Date(temp)\n    let timeStamp = Math.floor(Date.now() / 1000);\n    let date = new Date(timeStamp); //called alarm action to add to firebase\n    // this.props.addAlarm(newAlarm)\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"add_Table_Styles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"addFormHeading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Send a Notification\")), React.createElement(\"form\", {\n      className: \"add_form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Notification Details\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"group_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Group Name: \")), React.createElement(\"select\", {\n      name: \"group_name\",\n      onChange: this.onChangeGroupName.bind(this),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      defaultValue: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \" -- select an option -- \"), this.props.groups.map(function (group) {\n      return React.createElement(\"option\", {\n        value: group.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, group.name);\n    })), React.createElement(\"label\", {\n      htmlFor: \"sender\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Sender: \")), React.createElement(\"select\", {\n      name: \"sender\",\n      onChange: this.onChangeGroupName.bind(this),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      defaultValue: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \" -- select an option -- \"), this.state.userAccounts.map(function (user) {\n      return React.createElement(\"option\", {\n        value: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, user.userType, \": \", user.firstName, \" \", user.lastName);\n    })), React.createElement(\"div\", {\n      className: \"formTextField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"notification\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Notification: \")), React.createElement(\"textarea\", {\n      className: \"addTextArea\",\n      name: \"notification\",\n      onChange: this.onChangeAlarmMessage.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"Submit_Button\",\n      onClick: () => this.addNotification(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Send Notification\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  groups: state.groupState.groups,\n  alarms: state.alarmState.alarms,\n  alarmAdding: state.alarmState.alarmAdding\n});\n\nconst condition = authUser => !!authUser;\n\nexport default compose(connect(mapStateToProps, {\n  addAlarm,\n  alarmAdded\n}), withAuthorization(condition))(Send_Notification);","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Pages/Notification_Pages/send_Notification.js"],"names":["React","connect","compose","withAuthorization","addAlarm","alarmAdded","ROUTES","Send_Notification","Component","constructor","props","state","userAccounts","userType","firstName","lastName","groupName","sender","message","componentDidUpdate","alarmAdding","history","push","ALARMS","onChangeGroupName","event","setState","target","value","onChangeAlarmMessage","onChangeDate","date","onChangeTime","time","addNotification","timeStamp","Math","floor","Date","now","render","bind","groups","map","group","name","user","mapStateToProps","groupState","alarms","alarmState","condition","authUser"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../../Session';\nimport {addAlarm, alarmAdded} from '../../../Action/alarmAction'\nimport * as ROUTES from '../../../constants/routes';\n\nclass Send_Notification extends React.Component {\n   constructor(props){\n      super(props);\n      this.state={\n            userAccounts:[{\n                userType: \"Director\",\n                firstName: \"Tour\",\n                lastName: \"Management\"\n            },{\n                userType: \"Tour Guide\",\n                firstName: \"Tour\",\n                lastName: \"Management\"\n            },{\n                userType: \"Lead Chaperone\",\n                firstName: \"Tour\",\n                lastName: \"Management\"\n            }],\n            groupName: \"\",\n            sender: {},\n            message: \"\"\n         }\n    }\n    componentDidUpdate(){\n        if(this.props.alarmAdding){\n            this.props.alarmAdded()\n                this.props.history.push(ROUTES.ALARMS)\n        }\n    }\n    onChangeGroupName(event){\n        return (\n            this.setState({...this.state, groupName: event.target.value})\n        )\n    }\n    onChangeAlarmMessage(event){\n        return (\n            this.setState({...this.state, message: event.target.value})\n        )\n    }\n    onChangeDate(event){\n        return (\n            this.setState({...this.state, date: event.target.value})\n        )\n    }\n    onChangeTime(event){\n        return (\n            this.setState({...this.state, time: event.target.value})\n        )\n    }\n    addNotification(){\n        //setting the current timestamp\n        // let myDate=this.state.date;\n        // myDate=myDate.split(\"-\");\n        // let newDate=myDate[1]+\"/\"+myDate[2]+\"/\"+myDate[0];\n        // let temp= newDate + \" \" + this.state.time; \n        // let date= new Date(temp)\n        let timeStamp = Math.floor(Date.now() / 1000);\n        let date= new Date(timeStamp);\n\n        //called alarm action to add to firebase\n        // this.props.addAlarm(newAlarm)\n    }\n    render() {\n        return (\n            <div>\n                <br/><br/><br/><br/>\n                <div className=\"add_Table_Styles\">\n                <div className=\"addFormHeading\"><h1>Send a Notification</h1></div>\n                <form className=\"add_form\">\n                    <center><h2>Notification Details</h2></center><br/>\n                    <label htmlFor=\"group_name\"><b>Group Name: </b></label>\n                    <select name=\"group_name\" onChange={this.onChangeGroupName.bind(this)} required>\n                    <option disabled selected defaultValue> -- select an option -- </option>\n                        {this.props.groups.map(function(group){\n                            return (<option value={group.name}>{group.name}</option>)\n                        })}\n                    </select>\n                    <label htmlFor=\"sender\"><b>Sender: </b></label>\n                    <select name=\"sender\" onChange={this.onChangeGroupName.bind(this)} required>\n                    <option disabled selected defaultValue> -- select an option -- </option>\n                        {this.state.userAccounts.map(function(user){\n                            return (<option value={user}>{user.userType}{\": \"}{user.firstName}{\" \"}{user.lastName}</option>)\n                        })}\n                    </select>\n                    <div className=\"formTextField\"><label htmlFor=\"notification\"><b>Notification: </b></label>\n                    <textarea className=\"addTextArea\" name=\"notification\" onChange={this.onChangeAlarmMessage.bind(this)}></textarea></div><br/><br/>\n                    <button type=\"button\" className=\"Submit_Button\" onClick={()=>this.addNotification()}>Send Notification</button>\n                </form>\n            </div>\n            </div>\n        );\n    }\n    }\nconst mapStateToProps = state => ({\n    groups: state.groupState.groups,\n    alarms: state.alarmState.alarms,\n    alarmAdding: state.alarmState.alarmAdding\n });\nconst condition = authUser => !!authUser;\nexport default compose(\n   connect(\n     mapStateToProps,\n     {addAlarm, alarmAdded}\n   ),withAuthorization(condition)\n)(Send_Notification);"]},"metadata":{},"sourceType":"module"}