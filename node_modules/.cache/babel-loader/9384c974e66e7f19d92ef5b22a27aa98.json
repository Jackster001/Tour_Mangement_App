{"ast":null,"code":"var _jsxFileName = \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Tables/groupTable/groupRow.js\";\nimport React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { deleteGroup, selectGroup, selectGroupChanging } from '../../../Action/groupAction';\nimport withAuthorization from '../../Session/withAuthorization';\nimport { Link } from 'react-router-dom';\n\nclass GroupRow extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: {}\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.props.selectGroupChanged) {\n      this.props.selectGroupChanging();\n      this.props.history.push('/group/' + this.props.id);\n    }\n  }\n\n  handleDelete(id) {\n    alert(\"User with id:\" + this.props.id + \" has been deleted from the database\");\n    this.props.deleteGroup(id);\n  }\n\n  selected(id) {\n    this.props.selectGroup(id);\n  }\n\n  render() {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, this.props.groupName)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.props.groupPin)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"Group_Logo_Table\",\n      src: this.props.groupLogo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"edit_button\",\n      onClick: () => this.selected(this.props.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"delete_button\",\n      id: this.props.id,\n      onClick: () => this.handleDelete(this.props.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Delete\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  groups: state.groupState.groups,\n  selectedGroup: state.groupState.selectedGroup,\n  selectGroupChanged: state.groupState.selectGroupChanged\n});\n\nconst condition = authUser => !!authUser;\n\nexport default compose(connect(mapStateToProps, {\n  deleteGroup,\n  selectGroup,\n  selectGroupChanging\n}), withAuthorization(condition))(GroupRow);","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Tables/groupTable/groupRow.js"],"names":["React","connect","compose","deleteGroup","selectGroup","selectGroupChanging","withAuthorization","Link","GroupRow","PureComponent","constructor","props","state","selected","componentDidUpdate","selectGroupChanged","history","push","id","handleDelete","alert","render","groupName","groupPin","groupLogo","mapStateToProps","groups","groupState","selectedGroup","condition","authUser"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAAQC,WAAR,EAAqBC,WAArB,EAAkCC,mBAAlC,QAA4D,6BAA5D;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,SAASC,IAAT,QAAoB,kBAApB;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,aAA7B,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AAACC,MAAAA,QAAQ,EAAG;AAAZ,KAAX;AACH;;AACDC,EAAAA,kBAAkB,GAAE;AAChB,QAAG,KAAKH,KAAL,CAAWI,kBAAd,EAAiC;AAC7B,WAAKJ,KAAL,CAAWN,mBAAX;AACA,WAAKM,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwB,YAAU,KAAKN,KAAL,CAAWO,EAA7C;AACH;AACJ;;AACDC,EAAAA,YAAY,CAACD,EAAD,EAAI;AACZE,IAAAA,KAAK,CAAC,kBAAgB,KAAKT,KAAL,CAAWO,EAA3B,GAA8B,qCAA/B,CAAL;AACA,SAAKP,KAAL,CAAWR,WAAX,CAAuBe,EAAvB;AACH;;AACDL,EAAAA,QAAQ,CAACK,EAAD,EAAI;AACR,SAAKP,KAAL,CAAWP,WAAX,CAAuBc,EAAvB;AACH;;AACDG,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS,KAAKV,KAAL,CAAWW,SAApB,CAAJ,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS,KAAKX,KAAL,CAAWY,QAApB,CAAJ,CAFJ,EA0BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,GAAG,EAAE,KAAKZ,KAAL,CAAWa,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR,CAAJ,CA1BJ,EA2BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,OAAO,EAAE,MAAK,KAAKX,QAAL,CAAc,KAAKF,KAAL,CAAWO,EAAzB,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EACyF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADzF,EAEA;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,EAAE,EAAE,KAAKP,KAAL,CAAWO,EAAjD;AAAqD,MAAA,OAAO,EAAE,MAAI,KAAKC,YAAL,CAAkB,KAAKR,KAAL,CAAWO,EAA7B,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,CAAJ,CA3BJ,CADJ;AAkCH;;AArDqC;;AAwD1C,MAAMO,eAAe,GAAGb,KAAK,KAAK;AAC9Bc,EAAAA,MAAM,EAAEd,KAAK,CAACe,UAAN,CAAiBD,MADK;AAE9BE,EAAAA,aAAa,EAAEhB,KAAK,CAACe,UAAN,CAAiBC,aAFF;AAG9Bb,EAAAA,kBAAkB,EAAEH,KAAK,CAACe,UAAN,CAAiBZ;AAHP,CAAL,CAA7B;;AAKA,MAAMc,SAAS,GAAGC,QAAQ,IAAI,CAAC,CAACA,QAAhC;;AACA,eAAe5B,OAAO,CAClBD,OAAO,CACLwB,eADK,EAEL;AAACtB,EAAAA,WAAD;AAAcC,EAAAA,WAAd;AAA2BC,EAAAA;AAA3B,CAFK,CADW,EAIhBC,iBAAiB,CAACuB,SAAD,CAJD,CAAP,CAKbrB,QALa,CAAf","sourcesContent":["import React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport {deleteGroup, selectGroup, selectGroupChanging} from '../../../Action/groupAction'\nimport withAuthorization from '../../Session/withAuthorization';\nimport { Link} from 'react-router-dom'\n\nclass GroupRow extends React.PureComponent{\n    constructor(props){\n        super(props);\n        this.state={selected : {}}\n    }\n    componentDidUpdate(){\n        if(this.props.selectGroupChanged){\n            this.props.selectGroupChanging()\n            this.props.history.push('/group/'+this.props.id);        \n        } \n    }\n    handleDelete(id){\n        alert(\"User with id:\"+this.props.id+\" has been deleted from the database\");\n        this.props.deleteGroup(id);\n    }\n    selected(id){\n        this.props.selectGroup(id);\n    }\n    render(){\n        return(\n            <tr>\n                <td><center>{this.props.groupName}</center></td>\n                <td><center>{this.props.groupPin}</center></td>\n                {/* <td>\n                    <center>\n                        {this.props.TourGuides.map(function(tourGuide){\n                            return <p>{tourGuide.firstName}</p>\n                        })}<br/><br/>\n                    </center>\n                </td>\n                <td>\n                    <center>\n                        {this.props.LeadChaperones.map(function(leadChaperone){\n                            return <p>{leadChaperone.firstName}</p>\n                        })}<br/><br/>\n                    </center>\n                </td> */}\n                {/* <td><center><button className=\"assignButton\" onClick={()=>this.showModal()}>Assign</button>\n                <GroupModal show={this.state.show} handleClose={()=>this.hideModal()}>\n                    <div className=\"modalContent\">\n                        <center><h2>Assign Team Members to Group</h2></center>\n                        <br/>\n                        <h4>Select type of team member to </h4>\n                    </div>\n                </GroupModal>\n                </center></td> */}\n                <td><center><img className=\"Group_Logo_Table\" src={this.props.groupLogo} /></center></td>\n                <td><center>\n                    <button className=\"edit_button\" onClick={()=> this.selected(this.props.id)}>Edit</button><br/>\n                    <button className=\"delete_button\" id={this.props.id} onClick={()=>this.handleDelete(this.props.id)}>Delete</button></center>\n                </td>\n            </tr>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    groups: state.groupState.groups,\n    selectedGroup: state.groupState.selectedGroup,\n    selectGroupChanged: state.groupState.selectGroupChanged\n});\nconst condition = authUser => !!authUser;\nexport default compose(\n    connect(\n      mapStateToProps,\n      {deleteGroup, selectGroup, selectGroupChanging}\n    ),withAuthorization(condition)\n)(GroupRow);"]},"metadata":{},"sourceType":"module"}