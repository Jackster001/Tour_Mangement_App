{"ast":null,"code":"import _objectSpread from \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Tables/groupTable/groupRow.js\";\nimport React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { deleteGroup, selectGroup, selectGroupChanging, selectGroupForModal, groupChanged, editGroup, getGroups, groupModalSelecting } from '../../../Action/groupAction';\nimport withAuthorization from '../../Session/withAuthorization';\nimport { GroupModal } from './group_modal';\nimport { UserList } from './group_userList';\n\nclass GroupRow extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.showModal = () => {\n      this.setState(_objectSpread({}, this.state, {\n        show: true\n      }));\n      this.props.selectGroupForModal(this.props.id);\n    };\n\n    this.hideModal = () => {\n      this.setState(_objectSpread({}, this.state, {\n        forAssign: false\n      }));\n      this.setState({\n        show: false,\n        listShow: false\n      });\n    };\n\n    this.state = {\n      selected: {},\n      show: false,\n      listShow: false,\n      showList: \"\",\n      tourGuides: [],\n      leadChaperones: [],\n      radioSelected: \"\",\n      targetList: [],\n      avaliableTourGuides: [],\n      avaliableLeadChaperones: [],\n      assignedTourGuide: {},\n      assignedLeadChaperone: {},\n      selectedGroupLength: 0,\n      condition: false\n    };\n  }\n\n  componentDidMount() {\n    let tourguides = this.props.avaliableTourGuides.map(guide => {\n      return {\n        id: guide.id,\n        firstName: guide.firstName,\n        lastName: guide.lastName\n      };\n    });\n    let leadChaperones = this.props.avaliableLeadChaperones.map(guide => {\n      return {\n        id: guide.id,\n        firstName: guide.firstName,\n        lastName: guide.lastName\n      };\n    });\n    this.setState(_objectSpread({}, this.state, {\n      avaliableTourGuides: tourguides,\n      avaliableLeadChaperones: leadChaperones\n    }));\n\n    if (this.props.subgroup[0]) {\n      let subgroup = Object.assign([], this.props.subgroup);\n      let leadChaps = [];\n      let tourGuides = [];\n      subgroup.map(group => {\n        if (group.leadChaperone) {\n          leadChaps.push(\"\" + group.leadChaperone.firstName + \" \" + group.leadChaperone.lastName);\n        }\n\n        if (group.tourGuide) {\n          tourGuides.push(\"\" + group.tourGuide.firstName + \" \" + group.tourGuide.lastName);\n        }\n      });\n      this.setState({\n        tourGuides: tourGuides,\n        leadChaperones: leadChaps\n      });\n    }\n\n    console.log(this.state.subgroups);\n  }\n\n  componentDidUpdate() {\n    if (this.props.selectGroupChanged) {\n      this.props.selectGroupChanging();\n      this.props.history.push('/group/' + this.props.id);\n    }\n\n    if (this.props.groupChanging) {\n      this.props.groupChanged();\n      window.location.reload();\n      this.hideModal();\n    } // if(this.props.groupModalSelectProcess){\n    //     this.props.groupModalSelecting();\n    //     this.setState({...this.state, show:true});\n    // }\n\n  }\n\n  handleDelete(id) {\n    alert(\"User with id:\" + this.props.id + \" has been deleted from the database\");\n    this.props.deleteGroup(id);\n  }\n\n  selected(id) {\n    this.props.selectGroup(id);\n  }\n\n  onHandleEdit() {\n    let newItem = {\n      id: this.props.selected.id,\n      Date: this.props.selected.Date,\n      Time: this.props.selected.Time,\n      Description: this.props.selected.Description\n    };\n    let current = this.state.selectedActivity;\n\n    if (current.Date != null) {\n      newItem.Date = current.Date;\n    }\n\n    if (current.Time != null) {\n      newItem.Time = current.Time;\n    }\n\n    if (current.Description != null) {\n      newItem.Description = current.Description;\n    }\n\n    this.props.editItem(newItem);\n    this.hideModal();\n  }\n\n  onChangeTourGuidesSelected(event) {\n    let tourguide = this.state.avaliableTourGuides.find(guide => guide.id === event.target.value);\n    return this.setState(_objectSpread({}, this.state, {\n      assignedTourGuide: tourguide\n    }));\n  }\n\n  onChangeLeadChaperonesSelected(event) {\n    let leadChaperone = this.state.avaliableLeadChaperones.find(chap => chap.id === event.target.value);\n    return this.setState(_objectSpread({}, this.state, {\n      assignedLeadChaperone: leadChaperone\n    }));\n  }\n\n  onHandleReset() {\n    // let subgroups = this.props.selectedGroup.subGroups;\n    // let tourguide = this.state.assignedTourGuide;\n    // let leadChaperone = this.state.assignedLeadChaperone;\n    // let bus= {\n    //     leadChaperone : {...leadChaperone},\n    //     tourGuide : {...tourguide}\n    // }\n    // subgroups.push(bus);\n    this.setState(_objectSpread({}, this.state));\n\n    let updateGroup = _objectSpread({}, this.props.selectedGroup, {\n      subGroups: []\n    });\n\n    this.props.editGroup(updateGroup);\n  }\n\n  assign() {\n    let subgroups = this.props.selectedGroup.subGroups;\n\n    if (!subgroups) {\n      subgroups = [];\n    }\n\n    let tourguide = this.state.assignedTourGuide;\n    let leadChaperone = this.state.assignedLeadChaperone;\n    let bus = {\n      leadChaperone: _objectSpread({}, leadChaperone),\n      tourGuide: _objectSpread({}, tourguide)\n    };\n    subgroups.push(bus);\n\n    let updateGroup = _objectSpread({}, this.props.selectedGroup, {\n      subGroups: subgroups\n    });\n\n    this.props.editGroup(updateGroup);\n  }\n\n  render() {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, this.props.groupName)), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Group Pin: \", this.props.groupPin))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"Group_Logo_Table\",\n      src: this.props.groupLogo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.state.tourGuides.map((name, i) => {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, name);\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, this.state.leadChaperones.map((name, i) => {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, name);\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"edit_button\",\n      onClick: () => this.selected(this.props.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"assignButton\",\n      onClick: () => this.showModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Assign\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })), React.createElement(GroupModal, {\n      show: this.state.show,\n      handleClose: () => this.hideModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modalContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Assign Tour Guides and Chaperones to\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, this.props.groupName)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"assignemntSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Tour Guides\"), React.createElement(\"select\", {\n      name: \"tourGuides\",\n      className: \"selectBox\",\n      onChange: this.onChangeTourGuidesSelected.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      defaultValue: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \" -- Select Tour Guide -- \"), this.state.avaliableTourGuides.map(guide => {\n      return React.createElement(\"option\", {\n        value: (guide.firstName, guide.lastName, guide.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, guide.firstName, \" \", guide.lastName);\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Lead Chaperones\"), React.createElement(\"select\", {\n      name: \"leadChaperones\",\n      className: \"selectBox\",\n      onChange: this.onChangeLeadChaperonesSelected.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      defaultValue: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \" -- Select Chaperone -- \"), this.state.avaliableLeadChaperones.map(chap => {\n      return React.createElement(\"option\", {\n        value: (chap.firstName, chap.lastName, chap.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, chap.firstName, \" \", chap.lastName);\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"assignBottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"Submit_Button\",\n      onClick: () => this.assign(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Assign\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"resetBottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"resetAssignedButton\",\n      onClick: () => this.onHandleReset(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Reset All Assigned\"))))), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"delete_button\",\n      id: this.props.id,\n      onClick: () => {\n        if (window.confirm('Are you sure you wish to delete this Group?')) this.handleDelete(this.props.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Delete\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  groups: state.groupState.groups,\n  selectedGroup: state.groupState.selectedGroup,\n  selectGroupChanged: state.groupState.selectGroupChanged,\n  groupChanging: state.groupState.groupChanging,\n  groupModalSelectProcess: state.groupState.groupModalSelectProcess\n});\n\nconst condition = authUser => !!authUser;\n\nexport default compose(connect(mapStateToProps, {\n  deleteGroup,\n  selectGroup,\n  selectGroupChanging,\n  selectGroupForModal,\n  groupChanged,\n  editGroup,\n  getGroups,\n  groupModalSelecting\n}), withAuthorization(condition))(GroupRow);","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Tables/groupTable/groupRow.js"],"names":["React","connect","compose","deleteGroup","selectGroup","selectGroupChanging","selectGroupForModal","groupChanged","editGroup","getGroups","groupModalSelecting","withAuthorization","GroupModal","UserList","GroupRow","PureComponent","constructor","props","showModal","setState","state","show","id","hideModal","forAssign","listShow","selected","showList","tourGuides","leadChaperones","radioSelected","targetList","avaliableTourGuides","avaliableLeadChaperones","assignedTourGuide","assignedLeadChaperone","selectedGroupLength","condition","componentDidMount","tourguides","map","guide","firstName","lastName","subgroup","Object","assign","leadChaps","group","leadChaperone","push","tourGuide","console","log","subgroups","componentDidUpdate","selectGroupChanged","history","groupChanging","window","location","reload","handleDelete","alert","onHandleEdit","newItem","Date","Time","Description","current","selectedActivity","editItem","onChangeTourGuidesSelected","event","tourguide","find","target","value","onChangeLeadChaperonesSelected","chap","onHandleReset","updateGroup","selectedGroup","subGroups","bus","render","groupName","groupPin","groupLogo","name","i","bind","confirm","mapStateToProps","groups","groupState","groupModalSelectProcess","authUser"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport {deleteGroup, selectGroup, selectGroupChanging, selectGroupForModal, groupChanged, editGroup, getGroups, groupModalSelecting} from '../../../Action/groupAction'\nimport withAuthorization from '../../Session/withAuthorization';\nimport {GroupModal} from './group_modal';\nimport {UserList} from './group_userList'\n\nclass GroupRow extends React.PureComponent{\n    constructor(props){\n        super(props);\n        this.state={\n            selected : {}, \n            show: false,\n            listShow: false,\n            showList: \"\",\n            tourGuides: [],\n            leadChaperones: [],\n            radioSelected: \"\",\n            targetList: [],\n            avaliableTourGuides: [],\n            avaliableLeadChaperones: [],\n            assignedTourGuide: {},\n            assignedLeadChaperone: {}, \n            selectedGroupLength: 0,\n            condition: false\n        }\n    }\n    componentDidMount(){\n        let tourguides = this.props.avaliableTourGuides.map( guide=>{\n            return {\n                id: guide.id,\n                firstName:guide.firstName, \n                lastName: guide.lastName\n            }\n        })\n        let leadChaperones = this.props.avaliableLeadChaperones.map( guide=>{\n            return {\n                id: guide.id,\n                firstName:guide.firstName, \n                lastName: guide.lastName\n            }\n        })\n        this.setState({...this.state, avaliableTourGuides: tourguides, avaliableLeadChaperones: leadChaperones})\n        if(this.props.subgroup[0]){\n            let subgroup= Object.assign([],this.props.subgroup);\n            let leadChaps= [];\n            let tourGuides=[];\n            subgroup.map(group=>{\n                if(group.leadChaperone){\n                    leadChaps.push(\"\"+group.leadChaperone.firstName+\" \"+group.leadChaperone.lastName)\n                }\n                if(group.tourGuide){\n                    tourGuides.push(\"\"+group.tourGuide.firstName+\" \"+group.tourGuide.lastName)\n                }\n            })\n            this.setState({tourGuides: tourGuides, leadChaperones: leadChaps});\n        }\n        console.log(this.state.subgroups)\n    }\n    componentDidUpdate(){\n        if(this.props.selectGroupChanged){\n            this.props.selectGroupChanging()\n            this.props.history.push('/group/'+this.props.id);        \n        } \n        if(this.props.groupChanging){\n            this.props.groupChanged();\n            window.location.reload();\n            this.hideModal();\n        }\n        // if(this.props.groupModalSelectProcess){\n        //     this.props.groupModalSelecting();\n        //     this.setState({...this.state, show:true});\n        // }\n    }\n    handleDelete(id){\n        alert(\"User with id:\"+this.props.id+\" has been deleted from the database\");\n        this.props.deleteGroup(id);\n    }\n    selected(id){\n        this.props.selectGroup(id);\n    }\n    showModal = () => {\n        this.setState({...this.state, show: true})\n        this.props.selectGroupForModal(this.props.id);\n    };\n    hideModal = () => {\n        this.setState({...this.state, forAssign: false})\n        this.setState({ show: false, listShow: false });\n    };\n    onHandleEdit(){\n        let newItem={\n           id: this.props.selected.id,\n           Date: this.props.selected.Date,\n           Time: this.props.selected.Time,\n           Description: this.props.selected.Description\n        }\n        let current= this.state.selectedActivity\n        if(current.Date != null){\n           newItem.Date=current.Date \n        }\n        if(current.Time != null){\n           newItem.Time =current.Time \n        }\n        if(current.Description != null){\n           newItem.Description=current.Description \n        }\n        \n        this.props.editItem(newItem)\n        this.hideModal();\n    }\n    onChangeTourGuidesSelected(event){\n        let tourguide= this.state.avaliableTourGuides.find(guide => guide.id === event.target.value);\n        return this.setState({...this.state, assignedTourGuide: tourguide});\n    }\n    onChangeLeadChaperonesSelected(event){\n        let leadChaperone= this.state.avaliableLeadChaperones.find(chap => chap.id === event.target.value);\n        return this.setState({...this.state, assignedLeadChaperone: leadChaperone});\n    }\n    onHandleReset(){\n        // let subgroups = this.props.selectedGroup.subGroups;\n        // let tourguide = this.state.assignedTourGuide;\n        // let leadChaperone = this.state.assignedLeadChaperone;\n        // let bus= {\n        //     leadChaperone : {...leadChaperone},\n        //     tourGuide : {...tourguide}\n        // }\n        // subgroups.push(bus);\n        this.setState({...this.state})\n        let updateGroup= {...this.props.selectedGroup,\n            subGroups: []\n        }\n        this.props.editGroup(updateGroup);\n    }\n    assign(){\n        let subgroups = this.props.selectedGroup.subGroups;\n        if(!subgroups){\n            subgroups = []\n        }\n        let tourguide = this.state.assignedTourGuide;\n        let leadChaperone = this.state.assignedLeadChaperone;\n        let bus= {\n            leadChaperone : {...leadChaperone},\n            tourGuide : {...tourguide}\n        }\n        subgroups.push(bus);\n        let updateGroup= {...this.props.selectedGroup,\n            subGroups: subgroups\n        }\n        this.props.editGroup(updateGroup);\n    }\n    render(){\n        return(\n            <tr>\n                <td><center><h2><b>{this.props.groupName}</b></h2><h4>Group Pin: {this.props.groupPin}</h4></center></td>\n                <td><center><img className=\"Group_Logo_Table\" src={this.props.groupLogo} /></center></td>\n                <td>\n                    {this.state.tourGuides.map((name,i)=>{\n                        return <p>{name}</p>\n                    })} \n                </td>\n                <td>      \n                    {this.state.leadChaperones.map((name,i)=>{\n                        return <p>{name}</p>\n                    })}          \n                </td>\n                <td>\n                <center><button className=\"edit_button\" onClick={()=>this.selected(this.props.id)}>Edit</button><br/>\n                    <button className=\"assignButton\" onClick={()=>this.showModal()}>Assign</button><br/><br/></center>\n                    <GroupModal show={this.state.show} handleClose={()=>this.hideModal()}>\n                        <div className=\"modalContent\">\n                            <div>\n                                <center><h2>Assign Tour Guides and Chaperones to</h2><h1>{this.props.groupName}</h1></center><br/>\n                            </div>\n                                <div className=\"assignemntSection\">\n                                    <div>\n                                        <h2>Tour Guides</h2>\n                                        <select name=\"tourGuides\" className=\"selectBox\" onChange={this.onChangeTourGuidesSelected.bind(this)}>\n                                        <option disabled selected defaultValue> -- Select Tour Guide -- </option>\n                                            {this.state.avaliableTourGuides.map(guide=>{\n                                                return <option value={guide.firstName, guide.lastName, guide.id}>{guide.firstName} {guide.lastName}</option>\n                                            })} \n                                        </select>\n                                    </div>\n                                    <div>\n                                        <h2>Lead Chaperones</h2>\n                                        <select name=\"leadChaperones\" className=\"selectBox\" onChange={this.onChangeLeadChaperonesSelected.bind(this)}>\n                                        <option disabled selected defaultValue> -- Select Chaperone -- </option>\n                                            {this.state.avaliableLeadChaperones.map(chap=>{\n                                                return <option value={chap.firstName, chap.lastName, chap.id}>{chap.firstName} {chap.lastName}</option>\n                                            })} \n                                        </select>\n                                        \n                                    </div>\n                                </div>\n                                <br/><br/><br/>\n                                <div className=\"assignBottom\"><center><button className=\"Submit_Button\" onClick={()=>this.assign()}>Assign</button></center></div><br/>\n                                <div className=\"resetBottom\"><center><button className=\"resetAssignedButton\" onClick={()=>this.onHandleReset()}>Reset All Assigned</button></center></div>\n                        </div>\n                    </GroupModal>\n                    <center><button className=\"delete_button\" id={this.props.id} onClick={() => { if (window.confirm('Are you sure you wish to delete this Group?')) this.handleDelete(this.props.id)}}>Delete</button></center>\n                </td>\n            </tr>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    groups: state.groupState.groups,\n    selectedGroup: state.groupState.selectedGroup,\n    selectGroupChanged: state.groupState.selectGroupChanged,\n    groupChanging: state.groupState.groupChanging,\n    groupModalSelectProcess : state.groupState.groupModalSelectProcess\n});\nconst condition = authUser => !!authUser;\nexport default compose(\n    connect(\n      mapStateToProps,\n      {deleteGroup, selectGroup, selectGroupChanging, selectGroupForModal, groupChanged, editGroup, getGroups, groupModalSelecting}\n    ),withAuthorization(condition)\n)(GroupRow);"]},"metadata":{},"sourceType":"module"}