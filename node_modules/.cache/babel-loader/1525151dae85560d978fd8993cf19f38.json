{"ast":null,"code":"import { auth, db } from \"../components/Firebase\";\nimport * as ROUTES from '../constants/routes';\nimport { withRouter } from 'react-router-dom';\nimport { persistor } from '../reduxConfig';\nimport { persistCombineReducers } from \"redux-persist\";\n\nconst setUserAuth = () => {\n  return {\n    type: \"AUTH_USER_SET\",\n    payload: true\n  };\n};\n\nconst setOffUserAuth = () => {\n  return {\n    type: \"OFF_AUTH_USER_SET\",\n    payload: false\n  };\n};\n\nconst getAdminInputs = () => {\n  return dispatch => {\n    db.collection(\"admin\").doc(\"adminLogin\").get().then(doc => {\n      if (doc.exists) {\n        console.log(\"Signed In\");\n      } else {\n        console.log(\"No such document!\");\n      }\n    }).catch(function (error) {\n      console.log(\"Error getting document:\", error);\n    });\n  };\n};\n\nconst login = (email, password) => {\n  return dispatch => {\n    auth.signInWithEmailAndPassword(email, password).then(() => {\n      dispatch({\n        type: \"AUTH_USER_SET\",\n        payload: true\n      });\n    }).catch(error => {\n      console.log(error);\n      alert(\"The email and password combination is incorrect\");\n    });\n  };\n};\n\nconst signOut = () => {\n  return dispatch => {\n    auth.signOut().then(() => {\n      persistor.purge().then(() => {\n        console.log(\"purge\");\n        dispatch({\n          type: \"OFF_AUTH_USER_SET\",\n          payload: false\n        });\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};\n\nexport { setUserAuth, setOffUserAuth, login, signOut, getAdminInputs };","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/Action/sessionAction.js"],"names":["auth","db","ROUTES","withRouter","persistor","persistCombineReducers","setUserAuth","type","payload","setOffUserAuth","getAdminInputs","dispatch","collection","doc","get","then","exists","console","log","catch","error","login","email","password","signInWithEmailAndPassword","alert","signOut","purge"],"mappings":"AAAA,SAAQA,IAAR,EAAcC,EAAd,QAAuB,wBAAvB;AACA,OAAO,KAAKC,MAAZ,MAAwB,qBAAxB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,SAAR,QAAwB,gBAAxB;AACA,SAASC,sBAAT,QAAuC,eAAvC;;AACA,MAAMC,WAAW,GAAG,MAAK;AACrB,SAAO;AACHC,IAAAA,IAAI,EAAE,eADH;AAEHC,IAAAA,OAAO,EAAE;AAFN,GAAP;AAIH,CALD;;AAMA,MAAMC,cAAc,GAAG,MAAK;AACxB,SAAO;AACHF,IAAAA,IAAI,EAAE,mBADH;AAEHC,IAAAA,OAAO,EAAE;AAFN,GAAP;AAIH,CALD;;AAMA,MAAME,cAAc,GAAG,MAAK;AACxB,SAAQC,QAAD,IAAc;AACjBV,IAAAA,EAAE,CAACW,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B,YAA3B,EAAyCC,GAAzC,GAA+CC,IAA/C,CAAoDF,GAAG,IAAE;AACrD,UAAGA,GAAG,CAACG,MAAP,EAAc;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,OAFD,MAGK;AACDD,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AACJ,KAPD,EAOGC,KAPH,CAOS,UAASC,KAAT,EAAgB;AACrBH,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCE,KAAvC;AACH,KATD;AAUH,GAXD;AAYH,CAbD;;AAcA,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAoB;AAC9B,SAAQZ,QAAD,IAAc;AAEjBX,IAAAA,IAAI,CAACwB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,EAAiDR,IAAjD,CAAsD,MAAM;AACxDJ,MAAAA,QAAQ,CAAC;AACLJ,QAAAA,IAAI,EAAE,eADD;AAELC,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIH,KALD,EAKGW,KALH,CAKSC,KAAK,IAAG;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAK,MAAAA,KAAK,CAAC,iDAAD,CAAL;AACJ,KARD;AASH,GAXD;AAYH,CAbD;;AAeA,MAAMC,OAAO,GAAG,MAAK;AACjB,SAAQf,QAAD,IAAa;AAChBX,IAAAA,IAAI,CAAC0B,OAAL,GAAeX,IAAf,CAAoB,MAAK;AACrBX,MAAAA,SAAS,CAACuB,KAAV,GAAkBZ,IAAlB,CAAuB,MAAI;AACvBE,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAP,QAAAA,QAAQ,CAAC;AACTJ,UAAAA,IAAI,EAAE,mBADG;AAETC,UAAAA,OAAO,EAAE;AAFA,SAAD,CAAR;AAIH,OAND;AAQF,KATF,EASIW,KATJ,CASUC,KAAK,IAAG;AACbH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACJ,KAXD;AAYH,GAbD;AAcH,CAfD;;AAiBA,SAAQd,WAAR,EAAoBG,cAApB,EAAoCY,KAApC,EAA2CK,OAA3C,EAAoDhB,cAApD","sourcesContent":["import {auth, db} from \"../components/Firebase\"\nimport * as ROUTES from '../constants/routes'\nimport {withRouter} from 'react-router-dom'\nimport {persistor} from '../reduxConfig'\nimport { persistCombineReducers } from \"redux-persist\"\nconst setUserAuth = () =>{\n    return {\n        type: \"AUTH_USER_SET\",\n        payload: true\n    }\n}\nconst setOffUserAuth = () =>{\n    return {\n        type: \"OFF_AUTH_USER_SET\",\n        payload: false\n    }\n}\nconst getAdminInputs = () =>{\n    return (dispatch) => {\n        db.collection(\"admin\").doc(\"adminLogin\").get().then(doc=>{\n            if(doc.exists){\n                console.log(\"Signed In\");\n            }\n            else {\n                console.log(\"No such document!\");\n            }\n        }).catch(function(error) {\n            console.log(\"Error getting document:\", error);\n        });\n    }\n}\nconst login = (email, password) =>{\n    return (dispatch) => {\n         \n        auth.signInWithEmailAndPassword(email, password).then(() => {\n            dispatch({\n                type: \"AUTH_USER_SET\",\n                payload: true\n            })\n        }).catch(error =>{\n             console.log(error);\n             alert(\"The email and password combination is incorrect\");\n        })\n    }\n}\n\nconst signOut = () =>{\n    return (dispatch) =>{\n        auth.signOut().then(() =>{\n            persistor.purge().then(()=>{\n                console.log(\"purge\")\n                dispatch({\n                type: \"OFF_AUTH_USER_SET\",\n                payload: false\n            })\n            })\n            \n         }).catch(error =>{\n             console.log(error);\n        })\n    }\n}\n\nexport {setUserAuth,setOffUserAuth, login, signOut, getAdminInputs};"]},"metadata":{},"sourceType":"module"}