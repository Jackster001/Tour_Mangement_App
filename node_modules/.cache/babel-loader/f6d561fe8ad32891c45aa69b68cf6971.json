{"ast":null,"code":"import _objectSpread from \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Pages/Alarm_Pages/edit_Alarm.js\";\nimport React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../../Session';\nimport { editAlarm, alarmChanged } from '../../../Action/alarmAction';\n\nclass Edit_Alarm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedAlarm: this.props.selectedAlarm,\n      id: this.props.selectedAlarm.id,\n      Group_Pin: this.props.selectedAlarm.groupPin,\n      message: this.props.selectedAlarm.title,\n      timestamp: this.props.selectedAlarm.timestamp,\n      original_Name: \"\",\n      Group_Name: \"\",\n      date: \"\",\n      time: \"\"\n    };\n  }\n\n  componentDidMount() {\n    //getting the group name \n    let groupPin = this.state.Group_Pin;\n    let group = Object.assign([{}]);\n    group = this.props.groups.filter(function (group) {\n      return group.pin == groupPin;\n    });\n    let selectedGroup = Object.assign({}, group[0]);\n    let groupName = selectedGroup.name;\n    this.setState({\n      Group_Name: groupName,\n      original_Name: groupName\n    }); //getting the date\n\n    let timeObject = Object.assign({}, this.state.timestamp);\n    let date = new Date(timeObject.seconds * 1000);\n    let timestampTime = date.toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: \"2-digit\"\n    });\n    let tempDate = date.toLocaleDateString('en-US');\n    tempDate = tempDate.split(\"/\");\n\n    if (tempDate[0].length < 2) {\n      tempDate[0] = \"0\" + tempDate[0];\n    }\n\n    let valueDate = \"\" + tempDate[2] + \"-\" + tempDate[0] + \"-\" + tempDate[1] + \"\";\n    let valueTime = timestampTime.split(\" \");\n    this.setState({\n      date: valueDate\n    }); // this.setState({time: timestampTime});\n\n    let dayTime = valueTime[1];\n    var hr = \"\";\n    let setTime = valueTime[0];\n\n    if (dayTime == \"PM\") {\n      let arrTime = valueTime[0].split(\"\");\n      hr = parseInt(arrTime[1]) + 12;\n      setTime = \"\" + hr + \":\" + arrTime[3] + arrTime[4];\n    }\n\n    this.setState({\n      time: setTime\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.props.alarmChanging) {\n      this.props.alarmChanged();\n      this.props.history.push('/alarms');\n    }\n  }\n\n  onChangeGroupName(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      Group_Name: event.target.value\n    }));\n  }\n\n  onChangeGroupPin(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      Group_Pin: event.target.value\n    }));\n  }\n\n  onChangeMessage(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      message: event.target.value\n    }));\n  }\n\n  onChangeDate(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      date: event.target.value\n    }));\n  }\n\n  onChangeTime(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      time: event.target.value\n    }));\n  }\n\n  onHandleEdit() {\n    //setting up the timestamp\n    let myDate = this.state.date;\n    myDate = myDate.split(\"-\");\n    let newDate = myDate[1] + \"/\" + myDate[2] + \"/\" + myDate[0];\n    let temp = newDate + \" \" + this.state.time;\n    let date = new Date(temp); //getting the group name\n\n    let groupPin = this.props.selectedAlarm.groupPin;\n\n    if (this.state.original_Name != this.state.Group_Name) {\n      let groupName = this.state.Group_Name;\n      let group = Object.assign([{}]);\n      group = this.props.groups.filter(function (group) {\n        return group.name == groupName;\n      });\n      let selectedGroup = Object.assign({}, group[0]);\n      groupPin = selectedGroup.pin;\n    } //setting up new alarm\n\n\n    let newAlarm = {\n      id: this.state.id,\n      groupPin: groupPin,\n      notifType: \"alarm\",\n      timestamp: date,\n      title: this.state.message //called alarm action toset alarm in firebase\n\n    };\n    this.props.editAlarm(newAlarm);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"add_Table_Styles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"editFormHeading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Alarm Management\")), React.createElement(\"form\", {\n      className: \"add_form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Edit Alarm Information\")), React.createElement(\"label\", {\n      htmlFor: \"group_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Group Name: \")), React.createElement(\"select\", {\n      name: \"group_name\",\n      onChange: this.onChangeGroupName.bind(this),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      defaultValue: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, this.state.Group_Name), this.props.groups.map(function (group) {\n      return React.createElement(\"option\", {\n        value: group.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, group.name);\n    })), React.createElement(\"label\", {\n      htmlFor: \"Alarm_Date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Date: \")), React.createElement(\"input\", {\n      type: \"date\",\n      name: \"Alarm_Date\",\n      value: this.state.date,\n      onChange: this.onChangeDate.bind(this),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"Alarm_Time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Time: \")), React.createElement(\"input\", {\n      type: \"time\",\n      name: \"Alarm_Time\",\n      value: this.state.time,\n      onChange: this.onChangeTime.bind(this),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"groupTextField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"group_info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Group Description: \")), React.createElement(\"textarea\", {\n      rows: \"4\",\n      cols: \"28\",\n      name: \"group_info\",\n      placeholder: this.props.selectedAlarm.title,\n      onChange: this.onChangeMessage.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"update_Button\",\n      onClick: () => this.onHandleEdit(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Update Alarm\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  groups: state.groupState.groups,\n  selectedAlarm: state.alarmState.selectedAlarm,\n  alarmChanging: state.alarmState.alarmChanging\n});\n\nconst condition = authUser => !!authUser;\n\nexport default compose(connect(mapStateToProps, {\n  editAlarm,\n  alarmChanged\n}), withAuthorization(condition))(Edit_Alarm);","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Pages/Alarm_Pages/edit_Alarm.js"],"names":["React","connect","compose","withAuthorization","editAlarm","alarmChanged","Edit_Alarm","Component","constructor","props","state","selectedAlarm","id","Group_Pin","groupPin","message","title","timestamp","original_Name","Group_Name","date","time","componentDidMount","group","Object","assign","groups","filter","pin","selectedGroup","groupName","name","setState","timeObject","Date","seconds","timestampTime","toLocaleTimeString","hour","minute","tempDate","toLocaleDateString","split","length","valueDate","valueTime","dayTime","hr","setTime","arrTime","parseInt","componentDidUpdate","alarmChanging","history","push","onChangeGroupName","event","target","value","onChangeGroupPin","onChangeMessage","onChangeDate","onChangeTime","onHandleEdit","myDate","newDate","temp","newAlarm","notifType","render","bind","map","mapStateToProps","groupState","alarmState","condition","authUser"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../../Session';\nimport {editAlarm, alarmChanged} from '../../../Action/alarmAction'\nclass Edit_Alarm extends React.Component {\n   constructor(props){\n      super(props);\n      this.state={\n         selectedAlarm: this.props.selectedAlarm,\n         id: this.props.selectedAlarm.id,\n         Group_Pin: this.props.selectedAlarm.groupPin,\n         message: this.props.selectedAlarm.title,\n         timestamp: this.props.selectedAlarm.timestamp,\n         original_Name :\"\",\n         Group_Name: \"\",\n         date: \"\",\n         time: \"\"\n         }\n      }\n   componentDidMount(){\n      //getting the group name \n      let groupPin= this.state.Group_Pin;\n      let group=Object.assign([{}])\n      group= this.props.groups.filter(function(group){\n          return (group.pin == groupPin)\n      })\n      let selectedGroup=Object.assign({},group[0])\n      let groupName=selectedGroup.name;\n      this.setState({Group_Name: groupName, original_Name: groupName})\n\n      //getting the date\n      let timeObject = Object.assign({},this.state.timestamp);\n      let date= new Date(timeObject.seconds*1000)\n      let timestampTime= date.toLocaleTimeString('en-US', {hour: '2-digit', minute: \"2-digit\"})\n      let tempDate= date.toLocaleDateString('en-US');\n      tempDate= tempDate.split(\"/\");\n      if(tempDate[0].length<2){\n         tempDate[0]=\"0\"+tempDate[0];\n      }\n      let valueDate=\"\"+tempDate[2]+\"-\"+tempDate[0]+\"-\"+tempDate[1]+\"\";\n      let valueTime= timestampTime.split(\" \");\n      this.setState({date: valueDate});\n      // this.setState({time: timestampTime});\n      let dayTime = valueTime[1];\n      var hr =\"\"\n      let setTime=valueTime[0];\n      if(dayTime==\"PM\"){\n         let arrTime=valueTime[0].split(\"\");\n         hr=parseInt(arrTime[1])+12\n         setTime= \"\"+hr+\":\"+arrTime[3]+arrTime[4]\n      }\n      this.setState({time: setTime})\n      \n   }\n   componentDidUpdate(){\n      if(this.props.alarmChanging){\n            this.props.alarmChanged()\n            this.props.history.push('/alarms');\n         }\n   }\n   onChangeGroupName(event){\n      return (\n         this.setState({...this.state, Group_Name: event.target.value})\n      )\n   }\n   onChangeGroupPin(event){\n      return (\n         this.setState({...this.state, Group_Pin: event.target.value})\n      )\n   }\n   onChangeMessage(event){\n      return (\n         this.setState({...this.state, message: event.target.value})\n      )\n   }\n   onChangeDate(event){\n      return(\n         this.setState({...this.state, date: event.target.value})\n      )\n   }\n   onChangeTime(event){\n      return(\n         this.setState({...this.state, time: event.target.value})\n      )\n   }\n   onHandleEdit(){\n      //setting up the timestamp\n      let myDate=this.state.date;\n      myDate=myDate.split(\"-\");\n      let newDate=myDate[1]+\"/\"+myDate[2]+\"/\"+myDate[0];\n      let temp= newDate + \" \" + this.state.time; \n      let date= new Date(temp)\n\n      //getting the group name\n      let groupPin= this.props.selectedAlarm.groupPin;\n      if(this.state.original_Name!=this.state.Group_Name){\n         let groupName= this.state.Group_Name;\n         let group=Object.assign([{}])\n         group= this.props.groups.filter(function(group){\n            return (group.name == groupName)\n         })\n         let selectedGroup=Object.assign({},group[0])\n         groupPin=selectedGroup.pin;\n      }\n\n      //setting up new alarm\n      let newAlarm= {\n         id: this.state.id,\n          groupPin: groupPin,\n          notifType: \"alarm\",\n          timestamp: date,\n          title: this.state.message\n      }\n      //called alarm action toset alarm in firebase\n      this.props.editAlarm(newAlarm)\n   }\n   render() {\n      return (\n         <div>\n            <br/><br/><br/><br/>\n            <div className=\"add_Table_Styles\">\n            <div className=\"editFormHeading\"><h1>Alarm Management</h1></div>\n               <form className=\"add_form\">\n                  <center><h2>Edit Alarm Information</h2></center>\n                  <label htmlFor=\"group_name\"><b>Group Name: </b></label>\n                  <select name=\"group_name\" onChange={this.onChangeGroupName.bind(this)} required>\n                    <option disabled selected defaultValue>{this.state.Group_Name}</option>\n                        {this.props.groups.map(function(group){\n                            return (<option value={group.name}>{group.name}</option>)\n                        })}\n                  </select>\n                  <label htmlFor=\"Alarm_Date\"><b>Date: </b></label>\n                  <input type=\"date\" name=\"Alarm_Date\" value={this.state.date} onChange={this.onChangeDate.bind(this)} required></input>\n                  <label htmlFor=\"Alarm_Time\"><b>Time: </b></label>\n                  <input type=\"time\" name=\"Alarm_Time\" value={this.state.time} onChange={this.onChangeTime.bind(this)} required/><br/><br/>\n                  <div className=\"groupTextField\"><label htmlFor=\"group_info\"><b>Group Description: </b></label>\n                  <textarea rows=\"4\" cols=\"28\" name=\"group_info\" placeholder={this.props.selectedAlarm.title} onChange={this.onChangeMessage.bind(this)}></textarea></div><br/><br/>\n                  <button type=\"button\" className=\"update_Button\" onClick={()=>this.onHandleEdit()}>Update Alarm</button>\n               </form>\n            </div>\n         </div>\n      );\n   }\n}\nconst mapStateToProps = state => ({\n   groups: state.groupState.groups,\n   selectedAlarm: state.alarmState.selectedAlarm,\n   alarmChanging: state.alarmState.alarmChanging\n });\nconst condition = authUser => !!authUser;\nexport default compose(\n   connect(\n     mapStateToProps,\n     {editAlarm, alarmChanged}\n   ),withAuthorization(condition)\n)(Edit_Alarm);\n\n"]},"metadata":{},"sourceType":"module"}