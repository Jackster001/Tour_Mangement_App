{"ast":null,"code":"import _objectSpread from \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Tables/itineraryTable/itineraryTable.js\";\nimport React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../../Session';\nimport ItineraryRow from \"./itineraryRow\";\n\nclass ItineraryTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedItinerary: {},\n      dailyData: [],\n      id: \"\"\n    };\n  }\n\n  onChangeGroupName(event) {\n    const selectedGroup = this.props.groups.find(group => {\n      return group.name == event.target.value;\n    });\n    const groupName = selectedGroup.name;\n    const groupPin = selectedGroup.pin;\n    let selectedItinerary = this.props.itineraries.find(itinerary => {\n      return itinerary.groupName == groupName && itinerary.groupPin == groupPin;\n    });\n    let days = [];\n    days = selectedItinerary.dailyData.map(day => {\n      let obj = Object.assign({}, day);\n      return obj;\n    });\n    let id = selectedItinerary.id;\n    return this.setState(_objectSpread({}, this.state, {\n      dailyData: days,\n      selectedItinerary: selectedItinerary,\n      id: id\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"basicTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"filterBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      id: \"group_name\",\n      name: \"group_name\",\n      onChange: this.onChangeGroupName.bind(this),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      defaultValue: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Group\"), this.props.groups.map(function (group) {\n      return React.createElement(\"option\", {\n        value: group.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, group.name);\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      className: \"table1 table-dark\",\n      border: \"1\",\n      cellSpacing: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"TableHead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Group\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Schedule\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Edit\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.dailyData.map((day, i) => {\n      let timeObject = Object.assign({}, day.date);\n      let date = new Date(timeObject.seconds * 1000);\n      let timestamp = date.toLocaleDateString('en-US', {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n      return React.createElement(ItineraryRow, {\n        index: i,\n        groupName: this.state.selectedItinerary.groupName,\n        id: this.state.id,\n        date: timestamp,\n        activities: day.activities,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      });\n    }))));\n  }\n\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => ({\n  groups: state.groupState.groups,\n  itineraries: state.itineraryState.itineraries\n});\n\nexport default compose(connect(mapStateToProps, {}), withAuthorization(condition))(ItineraryTable);","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Tables/itineraryTable/itineraryTable.js"],"names":["React","connect","compose","withAuthorization","ItineraryRow","ItineraryTable","Component","constructor","props","state","selectedItinerary","dailyData","id","onChangeGroupName","event","selectedGroup","groups","find","group","name","target","value","groupName","groupPin","pin","itineraries","itinerary","days","map","day","obj","Object","assign","setState","render","bind","i","timeObject","date","Date","seconds","timestamp","toLocaleDateString","weekday","year","month","activities","condition","authUser","mapStateToProps","groupState","itineraryState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../../Session';\nimport ItineraryRow from \"./itineraryRow\";\nclass ItineraryTable extends React.Component {\n    constructor(props){\n        super(props)\n        this.state={\n          selectedItinerary: {},\n          dailyData:[],\n          id: \"\"\n          \n        }\n        \n    }\n    onChangeGroupName (event){\n      const selectedGroup = this.props.groups.find(group =>{\n        return group.name == event.target.value\n      })\n      const groupName= selectedGroup.name;\n      const groupPin= selectedGroup.pin;\n      let selectedItinerary = this.props.itineraries.find(itinerary =>{\n        return itinerary.groupName == groupName && itinerary.groupPin == groupPin\n      })\n      let days= []\n      days= selectedItinerary.dailyData.map( day =>{\n        let obj=Object.assign({}, day)\n        return obj\n      })\n      let id= selectedItinerary.id;\n      \n      return this.setState({...this.state, dailyData: days, selectedItinerary: selectedItinerary, id: id})\n    }\n    render() {\n      return (\n         <div className=\"basicTable\">\n            <div className=\"filterBox\">\n                <select id=\"group_name\" name=\"group_name\" onChange={this.onChangeGroupName.bind(this)} required>\n                <option disabled selected defaultValue>Group</option>\n                    {this.props.groups.map(function(group){\n                        return (<option value={group.name}>{group.name}</option>)\n                })}\n                </select>\n            </div>\n            <br/><br/>\n            <table className=\"table1 table-dark\" border=\"1\" cellSpacing=\"0\">\n             <thead className=\"TableHead\">\n               <tr>\n                <th>Group</th>\n                <th>Date</th>\n                <th>Schedule</th>\n                <th>Edit</th>\n               </tr>\n             </thead>\n            <tbody>\n              {this.state.dailyData.map((day, i)=>{\n                let timeObject = Object.assign({},day.date);\n                let date= new Date(timeObject.seconds*1000);\n                let timestamp= date.toLocaleDateString('en-US', {weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'})\n                return <ItineraryRow \n                  index={i}\n                  groupName= {this.state.selectedItinerary.groupName}\n                  id= {this.state.id}\n                  date= {timestamp}\n                  activities ={day.activities}\n                />\n              })}\n              {/* {\n                this.props.groups.map((group, i)=>{\n                let subgroup= Object.assign([], group.subGroups)\n                let avaliableTourGuides= this.props.users.filter((user)=>{\n                  return (user.userType === \"Tour Guide\" && user.groupPin === group.pin)\n                })\n                let avaliableLeadChaperones = this.props.users.filter((user)=>{\n                  return (user.userType === \"Lead Chaperone\" && user.groupPin === group.pin)\n                })\n                return(<GroupRow key={i}\n                  id={group.id} \n                  groupName={group.name}\n                  groupPin={group.pin}\n                  groupLogo={group.groupLogo}\n                  subgroup={subgroup}\n                  avaliableTourGuides={avaliableTourGuides}\n                  avaliableLeadChaperones={avaliableLeadChaperones}\n                  />)\n                })} */}\n              </tbody>\n            </table>\n         </div>\n      );\n   }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => ({\n  groups: state.groupState.groups,\n  itineraries: state.itineraryState.itineraries\n});\n \nexport default compose(\n   connect(\n     mapStateToProps,\n     {}\n   ),withAuthorization(condition)\n)(ItineraryTable);"]},"metadata":{},"sourceType":"module"}