{"ast":null,"code":"var _jsxFileName = \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Tables/userTable/userTable.js\";\nimport React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport UserRow from \"./userRow\";\nimport { userAddedChanged } from '../../../Action';\nimport { CSVLink } from 'react-csv';\n\nclass UserTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userList: this.props.users,\n      targetList: this.props.users,\n      csvFormat: [{}],\n      show: false\n    };\n  }\n\n  onChangeGroupName(event) {\n    let filteredUsers = this.props.users.filter(user => {\n      return user.GroupName === event.target.value;\n    });\n    this.setState({\n      userList: filteredUsers,\n      targetList: filteredUsers\n    });\n  }\n\n  onChangeUserType(event) {\n    let filteredUsers = this.state.userList.filter(user => {\n      return user.userType === event.target.value;\n    });\n    this.setState({\n      targetList: filteredUsers\n    });\n  }\n\n  resetUserList() {\n    this.setState({\n      userList: this.props.users,\n      targetList: this.props.users\n    });\n    document.getElementById(\"user_type\").value = \"User Type\";\n    document.getElementById(\"group_name\").value = \"Group\";\n  }\n\n  downloadCSV(users) {\n    let csvFormat = [{}];\n    users.map(function (user, i) {\n      csvFormat[i] = {\n        Group: user.GroupName,\n        Pin: user.groupPin,\n        User_Type: user.userType,\n        Username: user.userName,\n        First_Name: user.firstName,\n        Last_Name: user.lastName,\n        Phone_Number: user.phoneNumber,\n        Tour_Guide: user.tourGuide.firstName,\n        Lead_Chaperone: user.leadChaperone.firstName,\n        Emergency_Contact_Name: user.emergencyContact.name,\n        Relationship: user.emergencyContact.relationship,\n        Emergrancy_Contact_Number: user.emergencyContact.number\n      };\n    });\n    this.setState({\n      csvFormat: csvFormat\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"basicTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"filterBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      id: \"group_name\",\n      name: \"group_name\",\n      onChange: this.onChangeGroupName.bind(this),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      defaultValue: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Group\"), this.props.groups.map(function (group) {\n      return React.createElement(\"option\", {\n        value: group.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, group.name);\n    })), React.createElement(\"select\", {\n      id: \"user_type\",\n      name: \"user_type\",\n      onChange: this.onChangeUserType.bind(this),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      defaultValue: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"User Type\"), React.createElement(\"option\", {\n      value: \"Student\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Student\"), React.createElement(\"option\", {\n      value: \"Director\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Director\"), React.createElement(\"option\", {\n      value: \"Tour Guide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Tour Guide\"), React.createElement(\"option\", {\n      value: \"Lead Chaperone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Lead Chaperone\"), React.createElement(\"option\", {\n      value: \"Parent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Parent\"), \"})}\"), React.createElement(\"button\", {\n      className: \"resetFilterButton\",\n      onClick: () => this.resetUserList(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Reset\"), React.createElement(\"button\", {\n      className: \"deleteSelection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Delete Select Accounts\"), React.createElement(CSVLink, {\n      id: \"csv\",\n      data: this.state.csvFormat,\n      onClick: () => this.downloadCSV(this.state.targetList),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"downloadCSV\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Download CSV\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"table\", {\n      className: \"table1 table-dark\",\n      border: \"1\",\n      cellSpacing: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"TableHead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"User Type\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Group Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Details\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Emergency Contact\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Profile Picture\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Tour Guide\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Chaperone\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Edit\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.targetList.map(function (user, i) {\n      let data = Object.assign({}, user.emergencyContact);\n      let tourGuide = Object.assign({}, user.tourGuide);\n      let leadChaperone = Object.assign({}, user.leadChaperone);\n      return React.createElement(UserRow, {\n        key: i,\n        id: user.id,\n        Group_Type: user.userType,\n        Group_Name: user.GroupName,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        phoneNumber: user.phoneNumber,\n        emergencyName: data.name,\n        emergencyNumber: data.number,\n        emergencyRelationship: data.relationship,\n        tourGuideFirstName: tourGuide.firstName,\n        tourGuideLastName: tourGuide.lastName,\n        leadChaperoneFirstName: leadChaperone.firstName,\n        leadChaperoneLastName: leadChaperone.lastName,\n        profilePicture: user.profilePicture,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      });\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  users: state.userState.users,\n  userAdded: state.userState.userAdded,\n  groups: state.groupState.groups\n});\n\nexport default compose(connect(mapStateToProps, {\n  userAddedChanged\n}))(UserTable);","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Tables/userTable/userTable.js"],"names":["React","connect","compose","UserRow","userAddedChanged","CSVLink","UserTable","Component","constructor","props","state","userList","users","targetList","csvFormat","show","onChangeGroupName","event","filteredUsers","filter","user","GroupName","target","value","setState","onChangeUserType","userType","resetUserList","document","getElementById","downloadCSV","map","i","Group","Pin","groupPin","User_Type","Username","userName","First_Name","firstName","Last_Name","lastName","Phone_Number","phoneNumber","Tour_Guide","tourGuide","Lead_Chaperone","leadChaperone","Emergency_Contact_Name","emergencyContact","name","Relationship","relationship","Emergrancy_Contact_Number","number","render","bind","groups","group","data","Object","assign","id","profilePicture","mapStateToProps","userState","userAdded","groupState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,gBAAR,QAA+B,iBAA/B;AACA,SAAQC,OAAR,QAAuB,WAAvB;;AACA,MAAMC,SAAN,SAAwBN,KAAK,CAACO,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,KADZ;AAETC,MAAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWG,KAFd;AAGTE,MAAAA,SAAS,EAAC,CAAC,EAAD,CAHD;AAITC,MAAAA,IAAI,EAAE;AAJG,KAAX;AAMD;;AACDC,EAAAA,iBAAiB,CAAEC,KAAF,EAAQ;AACvB,QAAIC,aAAa,GAAE,KAAKT,KAAL,CAAWG,KAAX,CAAiBO,MAAjB,CAAwBC,IAAI,IAAE;AAC/C,aAAOA,IAAI,CAACC,SAAL,KAAmBJ,KAAK,CAACK,MAAN,CAAaC,KAAvC;AACD,KAFkB,CAAnB;AAGA,SAAKC,QAAL,CAAc;AAACb,MAAAA,QAAQ,EAAEO,aAAX;AAA0BL,MAAAA,UAAU,EAAEK;AAAtC,KAAd;AACD;;AACDO,EAAAA,gBAAgB,CAAER,KAAF,EAAQ;AACtB,QAAIC,aAAa,GAAE,KAAKR,KAAL,CAAWC,QAAX,CAAoBQ,MAApB,CAA2BC,IAAI,IAAE;AAClD,aAAOA,IAAI,CAACM,QAAL,KAAkBT,KAAK,CAACK,MAAN,CAAaC,KAAtC;AACD,KAFkB,CAAnB;AAGA,SAAKC,QAAL,CAAc;AAACX,MAAAA,UAAU,EAAEK;AAAb,KAAd;AACD;;AACDS,EAAAA,aAAa,GAAE;AACb,SAAKH,QAAL,CAAc;AAACb,MAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,KAAtB;AAA6BC,MAAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWG;AAApD,KAAd;AACAgB,IAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCN,KAArC,GAA4C,WAA5C;AACAK,IAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCN,KAAtC,GAA6C,OAA7C;AACD;;AACDO,EAAAA,WAAW,CAAClB,KAAD,EAAO;AAChB,QAAIE,SAAS,GAAE,CAAC,EAAD,CAAf;AACAF,IAAAA,KAAK,CAACmB,GAAN,CAAU,UAASX,IAAT,EAAcY,CAAd,EAAgB;AACxBlB,MAAAA,SAAS,CAACkB,CAAD,CAAT,GAAa;AACXC,QAAAA,KAAK,EAAEb,IAAI,CAACC,SADD;AAEXa,QAAAA,GAAG,EAAEd,IAAI,CAACe,QAFC;AAGXC,QAAAA,SAAS,EAAEhB,IAAI,CAACM,QAHL;AAIXW,QAAAA,QAAQ,EAAEjB,IAAI,CAACkB,QAJJ;AAKXC,QAAAA,UAAU,EAAEnB,IAAI,CAACoB,SALN;AAMXC,QAAAA,SAAS,EAAErB,IAAI,CAACsB,QANL;AAOXC,QAAAA,YAAY,EAAEvB,IAAI,CAACwB,WAPR;AAQXC,QAAAA,UAAU,EAAEzB,IAAI,CAAC0B,SAAL,CAAeN,SARhB;AASXO,QAAAA,cAAc,EAAE3B,IAAI,CAAC4B,aAAL,CAAmBR,SATxB;AAUXS,QAAAA,sBAAsB,EAAE7B,IAAI,CAAC8B,gBAAL,CAAsBC,IAVnC;AAWXC,QAAAA,YAAY,EAAEhC,IAAI,CAAC8B,gBAAL,CAAsBG,YAXzB;AAYXC,QAAAA,yBAAyB,EAAGlC,IAAI,CAAC8B,gBAAL,CAAsBK;AAZvC,OAAb;AAcD,KAfD;AAgBA,SAAK/B,QAAL,CAAc;AAACV,MAAAA,SAAS,EAAEA;AAAZ,KAAd;AAED;;AACD0C,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,EAAE,EAAC,YAAX;AAAwB,MAAA,IAAI,EAAC,YAA7B;AAA0C,MAAA,QAAQ,EAAE,KAAKxC,iBAAL,CAAuByC,IAAvB,CAA4B,IAA5B,CAApD;AAAuF,MAAA,QAAQ,MAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,QAAQ,MAAzB;AAA0B,MAAA,YAAY,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEO,KAAKhD,KAAL,CAAWiD,MAAX,CAAkB3B,GAAlB,CAAsB,UAAS4B,KAAT,EAAe;AACpC,aAAQ;AAAQ,QAAA,KAAK,EAAEA,KAAK,CAACR,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BQ,KAAK,CAACR,IAAlC,CAAR;AACL,KAFI,CAFP,CADA,EAOA;AAAQ,MAAA,EAAE,EAAC,WAAX;AAAuB,MAAA,IAAI,EAAC,WAA5B;AAAwC,MAAA,QAAQ,EAAE,KAAK1B,gBAAL,CAAsBgC,IAAtB,CAA2B,IAA3B,CAAlD;AAAoF,MAAA,QAAQ,MAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,QAAQ,MAAzB;AAA0B,MAAA,YAAY,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAES;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFT,EAGS;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHT,EAIS;AAAQ,MAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJT,EAKS;AAAQ,MAAA,KAAK,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALT,EAMS;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANT,QAPA,EAgBA;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAsC,MAAA,OAAO,EAAE,MAAI,KAAK9B,aAAL,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAhBA,EAiBA;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAjBA,EAkBA,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,KAAZ;AAAkB,MAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWI,SAAnC;AAA8C,MAAA,OAAO,EAAE,MAAI,KAAKgB,WAAL,CAAiB,KAAKpB,KAAL,CAAWG,UAA5B,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoG;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAApG,CAlBA,EAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBA,EAmBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBL,CADF,EAsBE;AAAO,MAAA,SAAS,EAAC,mBAAjB;AAAqC,MAAA,MAAM,EAAC,GAA5C;AAAgD,MAAA,WAAW,EAAC,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAO,MAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJD,EAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALD,EAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAND,EAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPD,EAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARD,CADF,CADD,EAaC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKH,KAAL,CAAWG,UAAX,CAAsBkB,GAAtB,CAA0B,UAASX,IAAT,EAAeY,CAAf,EAAiB;AAC3C,UAAI4B,IAAI,GAAEC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiB1C,IAAI,CAAC8B,gBAAtB,CAAV;AACA,UAAIJ,SAAS,GAAEe,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB1C,IAAI,CAAC0B,SAAvB,CAAf;AACA,UAAIE,aAAa,GAAEa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB1C,IAAI,CAAC4B,aAAvB,CAAnB;AACA,aAAO,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAEhB,CAAd;AACL,QAAA,EAAE,EAAEZ,IAAI,CAAC2C,EADJ;AAEL,QAAA,UAAU,EAAE3C,IAAI,CAACM,QAFZ;AAGL,QAAA,UAAU,EAAEN,IAAI,CAACC,SAHZ;AAIL,QAAA,SAAS,EAAED,IAAI,CAACoB,SAJX;AAKL,QAAA,QAAQ,EAAEpB,IAAI,CAACsB,QALV;AAML,QAAA,WAAW,EAAEtB,IAAI,CAACwB,WANb;AAOL,QAAA,aAAa,EAAEgB,IAAI,CAACT,IAPf;AAQL,QAAA,eAAe,EAAES,IAAI,CAACL,MARjB;AASL,QAAA,qBAAqB,EAAEK,IAAI,CAACP,YATvB;AAUL,QAAA,kBAAkB,EAAEP,SAAS,CAACN,SAVzB;AAWL,QAAA,iBAAiB,EAAEM,SAAS,CAACJ,QAXxB;AAYL,QAAA,sBAAsB,EAAEM,aAAa,CAACR,SAZjC;AAaL,QAAA,qBAAqB,EAAEQ,aAAa,CAACN,QAbhC;AAcL,QAAA,cAAc,EAAEtB,IAAI,CAAC4C,cAdhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAgBC,KApBD,CADH,CAbD,CAtBF,CADJ;AA8DF;;AA/GoC;;AAiHxC,MAAMC,eAAe,GAAGvD,KAAK,KAAK;AAChCE,EAAAA,KAAK,EAAEF,KAAK,CAACwD,SAAN,CAAgBtD,KADS;AAEhCuD,EAAAA,SAAS,EAAEzD,KAAK,CAACwD,SAAN,CAAgBC,SAFK;AAGhCT,EAAAA,MAAM,EAAEhD,KAAK,CAAC0D,UAAN,CAAiBV;AAHO,CAAL,CAA7B;;AAMA,eAAexD,OAAO,CACnBD,OAAO,CACLgE,eADK,EAEL;AAAC7D,EAAAA;AAAD,CAFK,CADY,CAAP,CAKbE,SALa,CAAf","sourcesContent":["import React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport UserRow from \"./userRow\"\nimport {userAddedChanged} from '../../../Action'\nimport {CSVLink } from 'react-csv';\nclass UserTable extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      userList: this.props.users,\n      targetList: this.props.users,\n      csvFormat:[{}],\n      show: false\n    }\n  }\n  onChangeGroupName (event){\n    let filteredUsers= this.props.users.filter(user=>{\n      return user.GroupName === event.target.value\n    })\n    this.setState({userList: filteredUsers, targetList: filteredUsers})\n  }\n  onChangeUserType (event){\n    let filteredUsers= this.state.userList.filter(user=>{\n      return user.userType === event.target.value\n    })\n    this.setState({targetList: filteredUsers})\n  }\n  resetUserList(){\n    this.setState({userList: this.props.users, targetList: this.props.users})\n    document.getElementById(\"user_type\").value= \"User Type\";\n    document.getElementById(\"group_name\").value= \"Group\";\n  }\n  downloadCSV(users){\n    let csvFormat= [{}]\n    users.map(function(user,i){\n      csvFormat[i]={\n        Group: user.GroupName,\n        Pin: user.groupPin,\n        User_Type: user.userType,\n        Username: user.userName,\n        First_Name: user.firstName,\n        Last_Name: user.lastName,\n        Phone_Number: user.phoneNumber,\n        Tour_Guide: user.tourGuide.firstName,\n        Lead_Chaperone: user.leadChaperone.firstName,\n        Emergency_Contact_Name: user.emergencyContact.name,\n        Relationship: user.emergencyContact.relationship,\n        Emergrancy_Contact_Number : user.emergencyContact.number\n      }\n    })\n    this.setState({csvFormat: csvFormat})\n\n  }\n  render() {\n      return (\n          <div className=\"basicTable\">\n            <div className=\"filterBox\">\n            <select id=\"group_name\" name=\"group_name\" onChange={this.onChangeGroupName.bind(this)} required>\n              <option disabled selected defaultValue>Group</option>\n                  {this.props.groups.map(function(group){\n                    return (<option value={group.name}>{group.name}</option>)\n              })}\n            </select>\n            <select id=\"user_type\" name=\"user_type\" onChange={this.onChangeUserType.bind(this)} required>\n              <option disabled selected defaultValue>User Type</option>\n                     <option value=\"Student\">Student</option>\n                     <option value=\"Director\">Director</option>\n                     <option value=\"Tour Guide\">Tour Guide</option>\n                     <option value=\"Lead Chaperone\">Lead Chaperone</option>\n                     <option value=\"Parent\">Parent</option>\n              })}\n            </select>\n            <button className=\"resetFilterButton\" onClick={()=>this.resetUserList()}>Reset</button>\n            <button className=\"deleteSelection\" >Delete Select Accounts</button>\n            <CSVLink id=\"csv\" data={this.state.csvFormat} onClick={()=>this.downloadCSV(this.state.targetList)}><button className=\"downloadCSV\">Download CSV</button></CSVLink>\n            <br/><br/>\n            </div>\n            <table className=\"table1 table-dark\" border=\"1\" cellSpacing=\"0\">\n             <thead className=\"TableHead\">\n               <tr>\n                <th>User Type</th>\n                <th>Group Name</th>\n                <th>Details</th>\n                <th>Emergency Contact</th>\n                <th>Profile Picture</th>\n                <th>Tour Guide</th>\n                <th>Chaperone</th>\n                <th>Edit</th>\n               </tr>\n             </thead>\n             <tbody>\n              { this.state.targetList.map(function(user, i){\n                let data= Object.assign({},user.emergencyContact)\n                let tourGuide =Object.assign({}, user.tourGuide)\n                let leadChaperone= Object.assign({}, user.leadChaperone)\n                return(<UserRow key={i}\n                  id={user.id} \n                  Group_Type={user.userType}\n                  Group_Name={user.GroupName}\n                  firstName={user.firstName}\n                  lastName={user.lastName}\n                  phoneNumber={user.phoneNumber}\n                  emergencyName={data.name}\n                  emergencyNumber={data.number}\n                  emergencyRelationship={data.relationship}\n                  tourGuideFirstName={tourGuide.firstName}\n                  tourGuideLastName={tourGuide.lastName}\n                  leadChaperoneFirstName={leadChaperone.firstName}\n                  leadChaperoneLastName={leadChaperone.lastName}\n                  profilePicture={user.profilePicture}\n                  />)\n                })}\n              </tbody>\n            </table>\n         </div>\n      );\n   }\n}\nconst mapStateToProps = state => ({\n  users: state.userState.users,\n  userAdded: state.userState.userAdded,\n  groups: state.groupState.groups\n});\n \nexport default compose(\n   connect(\n     mapStateToProps,\n     {userAddedChanged}\n   ),\n)(UserTable);"]},"metadata":{},"sourceType":"module"}