{"ast":null,"code":"import _objectSpread from \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Pages/Contact_Pages/edit_Contact.js\";\nimport React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../../Session';\nimport { editContact, contactChanged } from '../../../Action/contactAction';\n\nclass Edit_Contact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedContact: this.props.selectedContact,\n      id: this.props.selectedContact.id,\n      groupName: this.props.selectedContact.groupName,\n      groupPin: this.props.selectedContact.groupPin,\n      hotelName: this.props.selectedContact.hotelName,\n      phoneNumber: this.props.selectedContact.phoneNumber,\n      address: this.props.selectedContact.address\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.props.contactChanging) {\n      this.props.contactChanged();\n      this.props.history.push('/contacts');\n    }\n  }\n\n  onChangeGroupName(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      groupName: event.target.value\n    }));\n  }\n\n  onChangeHotelName(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      hotelName: event.target.value\n    }));\n  }\n\n  onChangeHotelAddress(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      hotelAddress: event.target.value\n    }));\n  }\n\n  onChangePhoneNumber(event) {\n    return this.setState(_objectSpread({}, this.state, {\n      phoneNumber: event.target.value\n    }));\n  }\n\n  onHandleEdit() {\n    //setting the current date and time\n    let date = new Date(); //setting up new alarm\n\n    let updatedContactInfo = {\n      id: this.state.id,\n      groupPin: this.state.groupPin,\n      groupName: this.state.groupName,\n      hotelName: this.state.hotelName,\n      phoneNumber: this.state.phoneNumber,\n      address: this.state.address,\n      timestamp: date // call edit contact action\n\n    };\n    this.props.editContact(updatedContactInfo);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"add_Table_Styles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"editFormHeading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Contact Management\")), React.createElement(\"form\", {\n      className: \"add_form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Edit Contact Information\")), React.createElement(\"label\", {\n      htmlFor: \"group_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Group Name: \")), React.createElement(\"select\", {\n      name: \"group_name\",\n      onChange: this.onChangeGroupName.bind(this),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      defaultValue: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.props.selectedContact.groupName), this.props.groups.map(function (group) {\n      return React.createElement(\"option\", {\n        value: group.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, group.name);\n    })), React.createElement(\"label\", {\n      htmlFor: \"Hotel_Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Hotel Name: \")), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Hotel_Name\",\n      placeholder: this.props.selectedContact.hotelName,\n      onChange: this.onChangeHotelName.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"Hotel_Address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Hotel Address: \")), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Hotel_Address\",\n      placeholder: this.props.selectedContact.address,\n      onChange: this.onChangeHotelAddress.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"Hotel_Phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Phone Number: \")), React.createElement(\"input\", {\n      type: \"tel\",\n      name: \"Hotel_Phone\",\n      placeholder: this.props.selectedContact.phoneNumber,\n      onChange: this.onChangePhoneNumber.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"update_Button\",\n      onClick: () => this.onHandleEdit(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Edit Contact Information\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  groups: state.groupState.groups,\n  selectedContact: state.contactState.selectedContact,\n  contactChanging: state.contactState.contactChanging\n});\n\nconst condition = authUser => !!authUser;\n\nexport default compose(connect(mapStateToProps, {\n  editContact,\n  contactChanged\n}), withAuthorization(condition))(Edit_Contact);","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Tour_Mangement_App/src/components/Pages/Contact_Pages/edit_Contact.js"],"names":["React","connect","compose","withAuthorization","editContact","contactChanged","Edit_Contact","Component","constructor","props","state","selectedContact","id","groupName","groupPin","hotelName","phoneNumber","address","componentDidUpdate","contactChanging","history","push","onChangeGroupName","event","setState","target","value","onChangeHotelName","onChangeHotelAddress","hotelAddress","onChangePhoneNumber","onHandleEdit","date","Date","updatedContactInfo","timestamp","render","bind","groups","map","group","name","mapStateToProps","groupState","contactState","condition","authUser"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../components.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../../Session';\nimport {editContact, contactChanged} from '../../../Action/contactAction'\nclass Edit_Contact extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n            selectedContact: this.props.selectedContact,\n            id: this.props.selectedContact.id,\n            groupName: this.props.selectedContact.groupName,\n            groupPin: this.props.selectedContact.groupPin,\n            hotelName: this.props.selectedContact.hotelName,\n            phoneNumber: this.props.selectedContact.phoneNumber,\n            address: this.props.selectedContact.address\n            }\n        }\n    componentDidUpdate(){\n        if(this.props.contactChanging){\n            this.props.contactChanged()\n            this.props.history.push('/contacts');\n        }\n    }\n    onChangeGroupName(event){\n        return (\n            this.setState({...this.state, groupName: event.target.value})\n        )\n    }\n    onChangeHotelName(event){\n        return (\n            this.setState({...this.state, hotelName: event.target.value})\n        )\n    }\n    onChangeHotelAddress(event){\n        return (\n            this.setState({...this.state, hotelAddress: event.target.value})\n        )\n    }\n    onChangePhoneNumber(event){\n        return (\n            this.setState({...this.state, phoneNumber: event.target.value})\n        )\n    }\n    onHandleEdit(){\n        //setting the current date and time\n        let date= new Date()\n\n        //setting up new alarm\n        let updatedContactInfo= {\n            id: this.state.id,\n            groupPin: this.state.groupPin,\n            groupName: this.state.groupName,\n            hotelName: this.state.hotelName,\n            phoneNumber: this.state.phoneNumber,\n            address: this.state.address,\n            timestamp: date\n        }\n        // call edit contact action\n        this.props.editContact(updatedContactInfo)\n    }\n    render() {\n        return (\n            <div>\n                <br/><br/><br/><br/>\n                <div className=\"add_Table_Styles\">\n                <div className=\"editFormHeading\"><h1>Contact Management</h1></div>\n                <form className=\"add_form\">\n                <center><h2>Edit Contact Information</h2></center>\n                    <label htmlFor=\"group_name\"><b>Group Name: </b></label>\n                    <select name=\"group_name\" onChange={this.onChangeGroupName.bind(this)} required>\n                    <option disabled selected defaultValue>{this.props.selectedContact.groupName}</option>\n                        {this.props.groups.map(function(group){\n                            return (<option value={group.name}>{group.name}</option>)\n                        })}\n                    </select>\n                    <label htmlFor=\"Hotel_Name\"><b>Hotel Name: </b></label>\n                    <input type=\"text\" name=\"Hotel_Name\" placeholder={this.props.selectedContact.hotelName} onChange={this.onChangeHotelName.bind(this)}></input>\n                    <label htmlFor=\"Hotel_Address\"><b>Hotel Address: </b></label>\n                    <input type=\"text\" name=\"Hotel_Address\" placeholder={this.props.selectedContact.address} onChange={this.onChangeHotelAddress.bind(this)}></input>\n                    <label htmlFor=\"Hotel_Phone\"><b>Phone Number: </b></label>\n                    <input type=\"tel\" name=\"Hotel_Phone\" placeholder={this.props.selectedContact.phoneNumber} onChange={this.onChangePhoneNumber.bind(this)}></input>\n                    <br/><br/>\n                    <button type=\"button\" className=\"update_Button\" onClick={()=>this.onHandleEdit()}>Edit Contact Information</button>\n                </form>\n                </div>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = state => ({\n    groups: state.groupState.groups,\n    selectedContact: state.contactState.selectedContact,\n    contactChanging: state.contactState.contactChanging\n});\nconst condition = authUser => !!authUser;\nexport default compose(\n    connect(\n        mapStateToProps,\n        {editContact, contactChanged}\n    ),withAuthorization(condition)\n)(Edit_Contact);\n\n"]},"metadata":{},"sourceType":"module"}